Propagation using Chain Event Graphs
Peter A. Thwaites

Statisti s Dept.
University of Warwi k
Coventry UK CV4 7AL

Jim Q. Smith

Statisti s Dept
University of Warwi k
Coventry UK CV4 7AL

Abstra t

A Chain Event Graph (CEG) is a graphi al
model whi h is designed to embody onditional
independen ies in problems whose state spa es
are highly asymmetri and do not admit a
natural produ t stru ture. In this paper we
present a probability propagation algorithm
whi h uses the topology of the CEG to build a
transporter CEG. Intriguingly, the transporter
CEG is dire tly analogous to the triangulated
Bayesian Network (BN) in the more onventional jun tion tree propagation algorithms
used with BNs. The propagation method uses
fa torization formulae also analogous to (but
di erent from) the ones using potentials on
liques and separators of the BN. It appears
that the methods will be typi ally more eÆient than the BN algorithms when applied to
ontexts where there is signi ant asymmetry
present.
1 INTRODUCTION
Based on an event tree, a Chain Event Graph (CEG)
is a more expressive alternative to a dis rete Bayesian
Network (BN), embodying olle tions of onditional
independen e statements in its topology. In Anderson
and Smith (2008) it is shown not only how asymmetries in a problem's sample spa e an be represented
expli itly through the topology of its CEG, but also
how it an express a mu h wider range of types of onditional independen e statement not simultaneously
expressible through a single BN. As with the BN, the
CEG of an hypothesised model an be interrogated using natural language before the graph is embellished
with probabilities. In Thwaites and Smith (2006) and
Ri omagno and Smith (2005) we demonstrate how
the CEG an also be used to represent and analyse
various ausal hypotheses. In this paper we ontinue
the development of CEGs by demonstrating how the

Robert G. Cowell

Cass Business S hool
City University
London EC1Y 8TZ

graph provides a useful stru ture for fast probability
propagation in asymmetri models.
It has been noted that the CEG is an espe ially powerful framework for inferen e when a probability model
is highly asymmetri and eli ited through a des ription of how situations unfold. Although theoreti ally
a BN an be used in this ontext, the lique probability tables are then very sparse and ontain many zeros or repeated probabilities. This impedes fast propagation algorithms and has led to the development
of many ontext spe i variants of BNs (Boutilier
et al 1996, M Allester et al 2004, Poole and Zhang
2003, Salmeron et al 2000), often based on trees within
liques. These developments provoke the question as
to whether a single tree might be used for propagation
instead of the BN. Now obviously the event tree itself
expresses no onditional independen ies in its topology and these independen ies are the building blo ks
of urrent propagation algorithms. However, unlike
the event tree, the CEG expresses a fairly omprehensive olle tion of onditional independen ies. In this
paper we demonstrate the surprising fa t that there
is a dire t analogue between a distribution on a BN
expressed as a produ t of potentials supported by a
graph of liques and separators, and propagation algorithms on CEGs using the distributions on the hildren of the CEG's non-leaf nodes and marginal likelihoods on the verti es themselves. This enables us to
develop fast propagation algorithms that use a single
graph, the transporter CEG { analogous to a triangulated BN { as its framework. This framework is highly
eÆ ient for asymmetri /non-produ t-spa e ontexts,
and in parti ular does not involve propagating zeros
in sparse but large probability tables, nor ontinually
repeating the same al ulations, whi h would be the
ase if we were to use the BN as a framework in this
sort of environment with a naive BN propagation algorithm.
In the next se tion we formally de ne the transporter
CEG C (T ) of a hypothesised probability tree T . In

se tion 3 we present an algorithm analogous to that
of Cowell and Dawid (1992) for a BN where onditional probability tables asso iated with the hildren
of a given vertex of the CEG take the role of liques,
and vertex probabilies take the role of separators. In
se tion 4 we demonstrate the eÆ ien y of this algorithm with a simple example.
2

PROBABILITY TREES AND
CHAIN EVENT GRAPHS
Probability trees (Shafer 1996), and their ontrol analogues de ision trees, have been found to be a very natural and expressive framework for probability and deision problems, and they provide an ex ellent framework for des ribing sample spa e asymmetry and inhomogeneity in a given ontext (see for example Fren h
and Insua (2000)). We start with an event tree T with
vertex set V (T ) and (dire ted) edge set E (T ). Hen eforth all the tree's non-leaf verti es fvg situations,
and denote this set of verti es S (T )  V (T ). We an
onvert an event tree into a probability tree by spe ifying a transition matrix from its verti es V (T ), where
the absorbing states orrespond to the leaf verti es.
Transition probabilities from a situation are zero exept for transitions to one of that situation's hildren.
This makes the transition matrix upper triangular.
Su h a matrix would look like the one in Table 1 whi h
shows part of the matrix for the problem des ribed in
Example 1. Note that ea h transition probability an
be identi ed by an edge on the tree.

Table 1: Part of the transition matrix for Example 1
v0
v1
v2
v3

..
.

v0 v1 v2 v3 v41 v42 v43 v51 v52
0 1  2  3 0 0 0 0 0
0 0 0 0 5 0 0 0 0
0 0 0 0 0 6 0 7 0
0 0 0 0 0 0 8 0 9

..
.







1
v1



4



0 
0 
0 
..
.

One way of seeing onditional independen e
statements on a BN is as identities in ertain ve tors of
onditional probabilties { expli itly those probability
ve tors asso iated with di erent an estor on gurations but the same parent on guration of a variable
in the BN (Ri omagno and Smith 2007). There is a
large lass of models where the probabilities in some
of the rows of the transition matrix an be identitifed
with ea h other. The CEG is a topologi al representation of this lass of models, and the transporter CEG
de ned below is a subgraph of the CEG.
Let T (vi ), i = 1; 2 be the unique subtrees whose roots
are the situations vi , and whi h ontain all verti es
after vi in T . Say v1 and v2 are in the same position
w if:

1. the trees T (v1 ) and T (v2 ) are topologi ally identi al.
2. there is a map between T (v1 ) and T (v2 ) su h that
the edges in T (v2 ) are annotated, under that map,
by the same (possibly unknown) probabilities as
the orresponding edges in T (v1 ).
It is easily he ked that the set W (T ) of positions w
partitions S (T ). Furthermore, somewhat more subtlely, if v1 ; v2 2 w and vij 2 V (T (vi )), then the vertex
sets of T (vi ) i = 1; 2 are mapped on to ea h other by
this map, and vij 2 wj i = 1; 2 for some position wj
(providing vij is not a leaf-vertex in either subtree).
For details of this property see Anderson and Smith
(2008).
We now draw a new graph to depi t both the sample
spa e of T and ertain onditional independen e statements. The transporter CEG C (T ) is a dire ted graph
whose verti es W (C (T )) are W (T ) [ fw1 g. There is
an edge (e 2 E (C (T ))) from w1 to w2 6= w1 for ea h
situation v2 2 w2 whi h is a hild of a xed representative v1 2 w1 for some v1 2 S (T ), and an edge
from w1 to w1 for ea h leaf node v 2 V (T ) whi h is
a hild of some xed representative v1 2 w1 for some
v1 2 S (T ). The transporter CEG (hen eforth labelled
simply as C ) is the subgraph of a CEG (de ned in Anderson and Smith (2008)) where all undire ted edges
in the CEG are omitted. The relationship between the
transporter CEG and the CEG is dire tly analogous
to the relationship between a triangulated BN and the
original BN. Certain onditional independen e statements that an be lost through onditioning are simply
forgotten so that an homogeneous propagation algorithm an be onstru ted on the basis of the enduring
onditional independen ies. Unlike the BN, this CEG
an have many edges between two verti es and always
has a single sink vertex w1 . Although typi ally having many fewer verti es than T , it retains a depi tion
of the sample spa e stru ture of T . Thus it is easy
to he k that the set of root to leaf paths of the tree
(representing the set of all possible unfoldings of the
history of a unit) are in one to one orresponden e
with the set of root to sink paths on the transporter
CEG. The CEG- onstru tion pro ess is illustrated in
Example 1.
Example 1

Consider the tree in Figure 1, whi h has 16 atoms
(root-to-leaf paths). Note that as the subtrees rooted
in the verti es fv4i g are the same, and those rooted in
fv5i g are the same, the distribution on the tree an be
stored using 7 onditional tables whi h ontain 16 (9
free) probabilities.
Our transporter CEG (Figure 2) is produ ed by ombining the verti es fv4i g into one position w4 , the ver-

ti es fv5i g into one position w5 , the verti es fv6i g into
one position w6 , and all leaf-verti es into a single sinknode w1 . The full CEG for our example is simple { it
has no undire ted edges, and is identi al to the transporter CEG C . For a simple CEG, all the onditional
independen ies inherent in the problem are onveyed
by the transporter CEG.
vinf1

θ 4= 0.65

5
= 0.6

θ 10

v1

0.6

θ12= 0.1

θ10

θ

1=

v42

θ2= 0.25

v2

θ

.7
θ 6= 0

θ

14 =

θ

=
θ3

= 0.35

15
0.

θ11

θ12

θ13

v52

θ9 = 0.6

16

θ 10

v43

θ 8= 0.4

12

θ15 = 0.65

0.7

v61

v3

3.1

θ11

θ 13= 0.3

v51

θ7= 0.3

v0

θ14

θ15
θ16

v62

Figure 1: Tree for Example 1
θ4= 0.65

w1
θ5 =

1=

0.
6

(θ1)

0.3
5

(θ1θ5 + θ2θ6 + θ3θ8)

θ10 = 0

w4

θ

θ12= 0.1

winf

θ

(θ2)

.65

θ1 =
1 0
.25

w2
0.
4

θ2= 0.25

0.7
θ 6=

8=

w0

.35
16

θ

θ14= 0.7

=0

=0
15

3
0.

w5 (θ2θ7 + θ3θ9)

θ

=
θ7

.1 5

.3
=0

13

θ9= 0.6
w3 (θ3)

.6 5

=0
θ3

θ

3

θ11= 0.25

v41

θ 5 = 0.3
5

vinf2

su h a way, the onditional independen ies embodied
in the problem (and in our transporter CEG) annot
be eÆ iently oded in a BN without introdu ing tables with many zeros. Consequently, even in this very
simple example we have eÆ ien y gains in storing this
distribution over using a saturated model, a BN, or a
tree.

w6 (θ2θ7θ14 + θ3θ9θ14)

Figure 2: Transporter CEG for Example 1
Figure 2 shows the probabilities of rea hing ea h position w (the event rea hing w, denoted (w), is the
union of all root-to-sink paths passing through w). It
also shows ea h edge-probability e (w0 j w)
( = ((e(w; w0 )) j (w)), where (e(w; w0 )) is the
union of all root-to-sink paths utilising the edge
e(w; w0 ) ).
The problem represented by the tree in Figure 1 is
asymmetri in that not all the root-to-leaf paths are
of the same length, and also in the lo al stru ture asso iated with its verti es. We do not know whether
the verti es fv4i g are related in any ontextual way to
the verti es fv5i g or fv6i g, and hen e we annot obviously de ne variables on the sigma-algebra of the tree
to allow us to represent the problem as a BN. Even
supposing we were able to represent the problem in

A SIMPLE PROPAGATION
ALGORITHM
THE FRAMEWORK

To spe ify the joint distribution of all random variables measurable with respe t to a CEG we simply
need to spe ify the ve tor of onditional probability
mass fun tions asso iated with ea h of its positions.
The rst step of our propagation algorithm is analogous to the triangulation step for a BN, whi h allows
us to retain all onditional independen e properties at
the ost of a possible loss of eÆ ien y. To do this we
ignore onditional independen e statements oded by
the undire ted edges of the CEG and work only with
the subgraph onsisting of its positions, together with
its dire ted edges, but not its undire ted edges { our
transporter CEG C .
For ea h position w 2 W = W (C )nfw1 g we store a
ve tor of probabilites (w) = fe (w0 j w) j e(w; w0 ) 2
E (w)g where E (w)  E (C ) is the set of all edges
emanating from w. (w) is of ourse a onditional
probability distribution. We let X (w) be the random
variable taking values on f1; 2; : : : ; n(E (w))g (where
n(E (w)) is the number of edges emanating from w)
whose probability mass fun tion is given by the omponents of (w) taken in order. The positions w 2 W
take the role of the liques in a triangulated BN, whilst
the ve tors f(w) j w 2 W g are analogous to the lique
probability tables.
We an now spe ify the probability  of every atom 
(a root to sink path of C , of length n() ) as a fun tion
of f(w) j w 2 W g and C . If:
 = (w0 = w [0℄; e [1℄; w [1℄; : : : ; e [n()℄; w1 )
then
nY
()
 =
 (e [i℄)
i=1

where (e [i℄) is a omponent of the probability ve tor (w [i 1℄), 1  i  n(). It follows that the
distribution of any random variable measurable with
respe t to C an be al ulated from f(w) j w 2 W g.
3.2

COMPATIBLE OBSERVATIONS

Re all that propagation algorithms for BNs based on
triangulation are only designed to propagate information that an be expressed in the form

= fXj 2 Aj g for some subsets fAj g of the
sample spa es of fXj g the vertex-variables of the BN.
Propagating information about the value of some general fun tion of the vertex variables using lo al message passing is not generally possible, be ause onditioning on the values of su h a fun tion an destroy the
onditional independen ies on whi h the lo al steps of
the propagation algorithm depend for their validity.
In the same way the types of observation we an efiently propagate using C and f(w) j w 2 W g
needs to be onstrained. In general an observation
an be identi ed with a subset  of the set of all
root to sink paths fg. The most obvious onstraining assumption on  (and the one we will hen eforth
make in this paper) about what we might learn is
that our observation  an be identi ed with having
learned that fX (w) 2 A(w)g for some subsets fA(w)g
of the sample spa es of the position random variables
fX (w)g. Call su h a set C ompatible. Note that 
is C ompatible if and only if there exists possibly
empty subsets fE (w) j w 2 W g su h that
O(A)

 = f j e 2 E (w) for some w 2 W; for ea h edge
e on the path  in C g
So we an identify aS ompatible observation with the
set of edges E = w2W E (w)  E (C ). We note
that the set of ompatible observations is large and
in parti ular when the CEG is expressible as a BN
ontains all sets of the form O(A) de ned above.
Example 2

3.3

MESSAGE PASSING FROM
COMPATIBLE OBSERVATIONS ON
A CEG

The message passing algorithm is a fun tion from the
original probabilities f(w) j w 2 W g to revised probabilities on the same graph f^ (w) j w 2 W g onditional on the observation . Note that on e edgeprobabilities have been revised, the resulting graph
may not be a minimal CEG (in that we may have
verti es within the graph whi h are the roots of identi al sub-graphs). It is possible (although unne essary
for information-propagating purposes) to add a further algorithm step to produ e a minimal CEG if this
is required. This step ensures that any verti es that
are equivalent are ombined into a single position.
Messages are passed from the terminal edges ba kwards through the transporter CEG along neighbouring edges until rea hing the root in a olle t step giving
a new pair f (w); (w) j w 2 W g. We then move forward from the root produ ing revised f^ (w) j w 2 W g.
Let W ( 1) denote the set of positions all of whose
outgoing edges terminate in w1 in C .
1. For any edge e(w; w1 ) su h that w 2 W ( 1), set
the potential e (w1 j w) = 0 if e(w; w1 ) 2= E ,
and e (w1 j w) = e (w1 j w) if e(w; w1 ) 2 E .
Let the emphasis:
(w) =

X

e2E (w)

e (w1

j w)

Say that w1 and ea h of these positions is a ommodated.

Consider:
 = f j e 2 fe1(w0 ; w1 ); e2 (w0 ; w2 ); e4 (w1 ; w1 );
e5 (w1 ; w4 ); e6 (w2 ; w4 ); e7 (w2 ; w5 ); e10 (w4 ; w1 );
e11 (w4 ; w1 ); e14 (w5 ; w6 ); e15 (w6 ; w1 )gg
This orresponds to all the root-to-sink paths in the
subgraph of C given in Figure 3.
w1

w4

2. For any position w all of whose hildren are a ommodated, and edge e(w; w0 ), set the potential
e (w0 j w) = 0 if e(w; w0 ) 2
= E , and e (w0 j w) =
0
0
e (w j w) (w ) if e(w; w0 ) 2 E . Let the emphasis:
X
(w) =
e (w0 j w)
e2E (w)

Say that w is a ommodated.
3. Repeat step 2 until all w 2 W are a ommodated.
This ompletes the olle t steps.
4. For all w 2 W , set:
^ (w) = 0 if  (w) = 0
^ (w) =  (w) if  (w) 6= 0
(w)

w2
w0

winf

where  (w) = fe (w0 j w) j e(w; w0 ) 2 E (w)g.
Clearly we have that:
w5

w6

Figure 3: Subgraph for event  in Example 2


^e (w0

j w) = 0 if e(w; w0 ) 2= E
0

^ (w0 j w) = e (w j w) if e(w; w0 ) 2 E
e

(w)



A proof of these results is given in the appendix.
Note that as we move forward through the graph the
updated probabilities of (w0 ; w) subpaths will be of
the form:

^ (w

j w0 ) =

and we get:

^((w)) =

Y

i=0


^e (wi+1

X

2f(w0 ;w)g


^ (w

j w0 )

Steps 1, 2 and 3 give us the graph in Figure 4. Step 4
gives us the CEG in Figure 5 (note that our CEG is
again simple, and also minimal without the need for
the additional step previously mentioned).
0.65

w1

0.
96
5

x0

.9

0.65 + 0.25
0.65

0.
6

x

w4
0.7 x

w0

0.9

0.25

0.25 x 0.7665
w2 0.63 + 0.1365

0.579 + 0.1916

winf

x

0.6

3

5

0.
0.
5
45

0.7 x 0.65
w6 0.65

w5 0.455

Figure 4: Potentials and emphases added
0.65 / 0.965 = 0.674
w1
0.579 / 0.771 = 0.751

0.315 / 0.965 = 0.326
w4

0.65 / 0.9 = 0.722

0.63 / 0.767 = 0.822
w0

w2
0.25 / 0.9 = 0.278
winf

0.192 / 0.771 = 0.249
0.137 / 0.767 = 0.178

1



Also note that at the ost of some omputation, we
an perform inferen e on the redu ed graph C whose
edges E (C ) are just the edges e in E (C ) with nonzero probabilities ^ (e), and whose verti es W (C ) are
the w 2 W (C ) for whi h (w) 6= 0. The non-zero
edge and vertex probabilities of C then simply map
on to their orresponding edge and vertex probabilities
in C . Note that, unlike for the BN, any non trivial
C ompatible observation stri tly redu es the number
of edges in the edge set after this operation.
A pseudo- ode version of our algorithm is provided
below:
Let C (W (C ); E (C )) be a transporter CEG with edges
in E (C ) having labels ei ; i = 1; 2; : : : ne , su h that
i < j ) ei  ej (ei does not lie downstream of ej on
any w0 ! w1 path); and positions in W (C )nfw1 g
having labels wi ; i = 0; 1; 2; : : : mw , su h that i < j )
wi  wj . To update the edge-probabilities on C following observation of an event , do:
(1) Set A = 
(2) Set B = 
(3) Set i = 1
(4) Repeat
(a) Sele t ei
(b) If ei 2 E , add ei to A
otherwise, set 
^ei = 0
( ) Set i = i + 1
Until i = ne + 1
(5) Set (w1 ) = 1
(6) Set j = mw
(7) Repeat
(a) Sele t wj
(b) Repeat
(i) Sele t e(wj ; wj0 ) 2 E (wj ) \ A
(ii) Set e (wj0 j wj ) = e (wj0 j wj ) (wj0 )
(iii) Add e(wj ; wj0 ) to B
Until E (wj ) \ A  B
P
( ) Set (wj ) = e2E(wj ) e (wj0 j wj )
(d) Set j = j 1
Until j =
1
w j w)
(8) For ea h e(w; w0 ) 2 E , set ^e (w0 j w) = e ((
w)
(9) Return f^e g
0

1
w5

n()

i=0

Example 3

0.3
5

Q  (e [i℄)

 ( j ) = 
^ () = ^ (e [i℄) = n(i=1
Q) 1 (w [i℄)
i=1
Y

n()

j wi )

From the de nition of a ommodation, the order of
these operations (like the perfe t order used to update
a triangulated BN) depends only on the toplogy of C ,
so it an be set up beforehand.

0.65 + 0.315

 = (w0 = w [0℄; e [1℄; w [1℄; : : : ; e [n()℄; w1 ) is
given by the invarian e formula:

w6

Figure 5: Updated CEG C
Note that, in analogy with equation (6) of Cowell and
Dawid (1992), the onditional probability of any atom

4

A CLOSER LOOK AT OUR
EXAMPLE
Consider the CEG in Figure 2 and let the 16 edges be
labelled ei in the same order as the fi g thereon. In

Examples 1 to 3 we showed how to reate and use a
Transporter CEG without on erning ourselves with a
ontext. We now add that ontext and suppose that
this CEG represents a Treatment regime for a serious
medi al ondition, and the edges arry the meanings
given in Table 2:
Table 2: Edge des riptors
Edge
e1
e2
e3
e4
e5
e6 ; e8
e7 ; e9
e10
e11
e12 ; e13
e14
e15
e16

Des ription
Not riti al { Treatment pres ribed I
Liver failure { Treatment : : : II
Liver & Kidney failure { Treatment : : : II
Responds to I { Full re overy
No response to I { Surgery pres ribed III
Responds to II { Surgery : : : III
No response to II { Surgery : : : IV
Re overy { Lifetime monitoring
Re overy { Lifetime medi ation
Death in surgery
Survives surgery IV { Treatment : : : V
Re overy { Lifetime on treatment V
No response to V { Dies

As alluded to in se tion 2, it is not possible to represent
this regime eÆ iently as a BN, nor yet as a ontextspe i BN, given that the asymmetry of the problem does not just lie in it having asymmetri sample
spa e stru tures. By equating the des riptions of edges
e4 and e10 ; edges e11 and e15 ; and edges e12 ; e13 and
e16 , we an however approximate the problem with
a 4-variable BN; where X1 Diagnosis and initial treatment an take values orresponding to the out omes
fNot riti al, Liver failure, Liver & Kidney failureg;
X2 2nd treatment to fNone, III, IVg; X3 3rd treatment
to fNone, Vg; and X4 Response to fDeath, Partial reovery, Full re overyg. The BN for this approximation
to the model is given in Figure 6.
X1

X2

X3

X4

Figure 6: BN for our example
To store the model using a CEG requires 16 ells ( orresponding to the 16 edges), but in this BN 27 ells (9
for the lique fX1 ; X2 g and 18 for fX2; X3 ; X4 g), 14
of whi h are storing the value zero.
The event  in our example orresponds to the observation that a patient was not diagnosed with Liver
and Kidney failure, and is still alive. Propagation
of this event enables a pra titioner to establish prob-

ability distributions for the possible histories of our
patient. Note that it is only the fa t that we an des ribe  in su h a simple manner that has allowed us
to approximate the problem with the BN in Figure 6.
Propagating of the event  using a simple Jun tion
Tree algorithm on the liques of the BN takes a minimum of 43 operations. Propagation on the CEG using
our algorithm requires 32 operations ( orresponding
to 16 ba kward edges, 6 ba kward verti es and 10 forward edges). So even in this simple example, using
the CEG is more eÆ ient than the BN. The eÆ ien y
here is due mainly to the fa t that the lique probability tables ontain many zeros. This is re e ted in the
CEG by the w0 ! w1 paths not all having the same
length. It is this form of asymmetry in a model that
ontext-spe i BNs do not ope with adequately, and
why CEGs are a better stru ture for use with this type
of problem.
The problems in whi h the algorithm des ribed above
are most eÆ ient are when the CEG stru ture is known
to be simple. To store the probability tables for the
CEG requires only N = #(W (C )) + #(E (C ))
< 2#(E (C )) ells. In this ase the olle t step involves
only N al ulations and the topology of the CEG is
valid so that in parti ular the original probability table stru ture an be preserved. The potential produ t
ne essitates only a single distribute step whi h again
only involves at most N al ulations. For large trees
with mu h of the type of subtree symmetry dis ussed
above the propagation is extremely fast.
It is worth qui kly looking at a very simple example arising from model sele tion in graphi al or partition model problems, an area urrently attra ting
some interest: Consider a model with random variables X1 ; : : : Xn, where X1 with M = 1 =2(n 1)
(n 2) possible states, determines whi h pair of binary variables from fX2; : : : Xn g are dependent, all
other variables from fX2 ; : : : Xn g being independent
of ea h other and of the pair determined. The CEG of
this model has at most M (1 + 2n) edges and 2 + M n
positions, whereas the BN is a single lique requiring
M  2n 1 ells for storage. As the number of operations required for propagation on both the BN and the
CEG is of the same order of magnitude as the number
of ells required for storage, it is lear that the CEG
is far more eÆ ient in this example.
5 DISCUSSION
There are several advantages of this method over the
oding of this type of problem through a BN. Firstly,
the al ulated probabilities an be proje ted ba k on
to the edges of the eli ited tree, so that the onsequen es of inferen es given di erent types of information an be immediately appre iated by the pra ti-

tioner. Se ondly, the a ommmodation of data in the
form of a ompatible observation is mu h more general
than the a ommodation of subsets of observations
from a predetermined set of random variables, so the
CEG provides a more exible framework for propagation, parti ularly when data is ontingently ensored.
Thirdly, there are eÆ ien y gains as outlined above.
We intend to show how great these gains an be for
very large problems in a later paper.
Note also that, as is the ase with the triangulation
step in BN-based algorithms, there are faster algorithms (Thwaites 2008) than the one des ribed above,
although they lose some of this algorithm's generality.
Our algorithms are urrently being oded by Cowell
within freely available software, and will be available
shortly.
Of ourse BNs provide a simpler representation of
more symmetri problems and should always be preferred when the three ontingen ies are not satisi ed.
The CEG does not provide a universal improvement
over the BN for propagation. In parti ular in problems when the underlying BN is de omposable but the
CEG is not simple the BN propagation an be mu h
more eÆ ient. But in highly asymmetri problems,
the CEG should de nitely be a rst hoi e.
It should be noted that it is also possible to de ne a
dynami analogue of the CEG, and our investigation
of these suggests that a time-sli ed CEG (analogous
to a time-sli ed BN) will be an ideal vehi le for a dynami updating algorithm. We hope to report on these
developments in the near-future.
APPENDIX
We laim that:

^e (w0

j w) , (((e(w; w0 )) j ; (w))
e (w j w )
if e(w; w0 ) 2 E
(w)
=
0
if e(w; w0 ) 62 E
0

Proof:

For a CEG C , and C ompatible event , let T be
the tree asso iated with C , T the tree asso iated with
C , and T() the subtree of T ontaining only those
root-to-leaf paths in . T() di ers from T in that
the former retains the edge-probabilities from T .
Consider a position w 2 C (w 2 C ) orresponding to
a set of verti es fvi g 2 T . Then the subtrees rooted
in ea h vi are identi al both in topology and in their
edge-probabilities.
If there is a subpath (w0 ; w) whi h is not part of a
w0 ! w1 path in  (ie. (w0 ; w) exists in C , but not
in C ) then there will exist a subset of fvi g whi h does
not exist in T (or T() ). We split the set fvi g into:

fvi gi2I
fvi gi2J

verti es existing in T
verti es not existing in T
Be ause  is C ompatible, the subtrees in T()
rooted in ea h vi 2 fvi gi2I are also identi al both
in topology and in their edge-probabilities that they
retain from T .
Suppose there exists an edge e(w; w0 ) in C , then for
ea h vi 2 fvi g, there exists an edge e(vi ; vi0 ) in T orresponding to this edge. Note that:
[
(w) =
(vi )
(e(w; w0 )) =
e (v 0

i

j

i2I [J

[

(e(vi ; vi0 ))

i2I [J
vi ) = e (w0 w)

j

8i 2 I [ J

and sin e the subtrees in T() rooted in ea h
vi 2 fvi gi2I are identi al, we also have:
 ( j (vi )) =  ( j (vj ))
 (; (e(vi ; vi0 )) j (vi )) =  (; (e(vj ; vj0 )) j (vj ))
for i; j 2 I
[( j (vi )) is the sum of the probabilities of all the
(vi ; vleaf )
subpaths
in
T() ,
and
 (; (e(vi ; vi0 )) j (vi )) is the sum of the probabilities of all the (vi ; e(vi ; vi0 ); vi0 ; vleaf ) subpaths in T() ℄
So:

^e (w0 j w) = ((e(w; w0 )) j ; (w))
e(w; w0 )))
= (; (w();; (
(w))
=

 (;

S

0

i2I [J [(vi ); (e(vi ; vi ))℄)
 (; i2I [J (vi ))

S

(an expression evaluated on T )
sin e (vi ) \ (e(vj ; vj0 )) =  for i 6= j
P
0
J  (; (vi ); (e(vi ; vi )))
= i2I [P
i2I [J  (; (vi ))
But  \ (vi )P=  for vi 2 fvi gi2J , so this equals:
(; (vi ); (e(vi ; vi0 )))
i2I P
; (vi ))
P (i2;I((
e(v ; v 0 )) j (vi ))  ((vi ))
= i2I P ( ij (i v )) ((
vi ))
i
i2I
P
0
 (; (e(vj ; vj )) j (vj ))
i2I  ((vi ))
P
=
 ( j (vj ))
i2I  ((vi ))
for any vj 2 fvi gi2I
 (; (e(vj ; vj0 )) j (vj ))
=
 ( j (vj ))
for any vj 2 fvi gi2I
Turning our attention to the terms in the algorithm,
we laim that (w) = ( j (vi )) and e (w0 j w) =
 (; (e(vi ; vi0 )) j (vi )) (vi 2 fvi gi2I ) for all w;
e(w; w0 ) 2 C , where fvi gi2I is the set of verti es in
T() orresponding to w. We prove this by indu tion:

part of the proje t Chain Event Graphs: Semanti s

Step 1.

and Inferen e.

Consider positions w 2 W ( 1). Then:
(w) =
=

X
e
X
e

e (w1

j w) =

e (vleaf

j vi )

X
e

e (w1

j w)

Referen es

[1℄ P. E. Anderson and J. Q. Smith. Conditional independen e and Chain Event Graphs. Arti ial
Intelligen e, 172:42{68, 2008.
[2℄ C. Boutilier, N. Friedman, M. Goldszmidt, and
D. Koller. Context-spe i independen e in
Bayesian Networks. In Pro eedings of the 12th

in T()

for any vi 2 fvi gi2I
= ( j (vi ))
Step 2.

Suppose w is su h that all of its outgoing edges terminate
in
positions
fw0 g for whi h
0
0
(w ) = ( j (vi )). Then:
(w) =
=

X

e
X
e

X

e (w0

j w) =

e (v 0

j vi ) ( j (vi0 ))

i

e

e (w0

j w) (w0 )

for any vi 2 fvi gi2I
X
= ((e(vi ; vi0 )) j (vi )) ( j (vi0 ))
e

But (vi0 ) = (e(vi ; vi0 ))  (vi ) in a tree, so this
equals: X
 ((e(vi ; vi0 )); (vi0 ) j (vi ))
e

0
0
X  ( j (0vi ); (e0(vi ; vi)); (vi ))
= (; (e(vi ; vi )); (vi ) j (vi ))
e
X
= (; (e(vi ; vi0 )) j (vi ))
e
= (; (vi ) j (vi )) = ( j (vi ))

Hen e:
e (w0 j w) = e (w0 j w) (w0 )
= e (vi0 j vi ) ( j (vi0 ))
for any vi 2 fvi gi2I
= ((e(vi ; vi0 )) j (vi )) ( j (vi0 ))
= : : : = (; (e(vi ; vi0 )) j (vi ))
We now ombine our two results to give:
 (; (e(vj ; vj0 )) j (vj ))

^e (w0 j w) =
 ( j (vj ))
0
w j w)
= e ((
w)



A knowledgements

This work has been partly funded by the EPSRC as

Conferen e on Un ertainty in Arti ial Intelligen e, pages 115{123, Portland, Oregon, 1996.

[3℄ R. G. Cowell and A. P. Dawid. Fast retra tion of
eviden e in a probabilisti expert system. Statisti s and Computing, 2:37{40, 1992.
[4℄ S. Fren h and D. R. Insua. Statisti al De ision
Theory. Arnold, 2000.
[5℄ D. M Allester, M. Collins, and F. Periera. Case
fa tor diagrams for stru tured probabilisti modeling. In Pro eedings of the 20th Conferen e on
Un ertainty in Arti ial Intelligen e, pages 382{
391, 2004.
[6℄ D. Poole and N. L. Zhang. Exploiting ontextual
independen e in probabilisti inferen e. Journal of Arti ial Intelligen e Resear h, 18:263{313,
2003.
[7℄ E. M. Ri omagno and J. Q. Smith. The ausal
manipulation and Bayesian estimation of Chain
Event Graphs. Resear h Report 05-16, CRiSM,
2005.
[8℄ E. M. Ri omagno and J. Q. Smith. The geometry
of ausal probability trees that are algebrai ally
onstrained. In L. Pronzato and A. Zhigljavsky,
editors, Optimal Design and Related Areas in Optimization and Statisti s, hapter 6, pages 131{
151. Springer-Verlag, 2007.
[9℄ A. Salmeron, A. Cano, and S. Moral. Importan e
sampling in Bayesian Networks using probability
trees. Computational Statisti s and Data Analysis, 34:387{413, 2000.
[10℄ G. Shafer. The Art of Causal Conje ture. MIT
Press, 1996.
[11℄ P. A. Thwaites. Chain Event Graphs: Theory and
appli ation. PhD thesis, University of Warwi k,
2008.
[12℄ P. A. Thwaites and J. Q. Smith. Evaluating ausal
e e ts using Chain Event Graphs. In Pro eedings
of the 3rd European Workshop on Probabilisti
Graphi al Models, pages 291{300, Prague, 2006.


