
The approach described here allows using membership
function to represent imprecise and uncertain knowledge by
learning in Fuzzy Semantic Networks. This representation has a
great practical interest due to the possibility to realize on the one
hand, the construction of this membership function from a simple
value expressing the degree of interpretation of an Object or a
Goal as compared to an other and on the other hand, the
adjustment of the membership function during the apprenticeship.
We show, how to use these membership functions to represent the
interpretation of an Object (respectively of a Goal) user as
compared to an system Object (respectively to a Goal). We also
show the possibility to make decision for each representation of an
user Object compared to a system Object. This decision is taken
by determining decision coefficient calculates according to the
nucleus of the membership function of the user Object.
KeyWords : Membership Function, Nucleus, Support, Fuzzy
Semantic Networks, Knowledge Representation, Expert semantic
Networks, Learning.

net work[Omri & al. 99a], but the Goal ‘Gum’ is not an element of
the Goal’s standard set and then with an interactive dialogue, the
system tries to identify the unknown Goal ‘Gum’. It presents the
set of Goals that may be applied on the Object ‘Word’, asks the
user to associate a possibility degree taken between 0 and 1 for
each element of the standard set. This degree quantify the opinion
of the users about the ideal system Goal and allows us to construct
this membership function from a simple value expressing the
degree of interpretation of an Object or a Goal as compared to an
other and on the other hand, the manner to adjust it during the
apprenticeship. We show also, how to use these functions of
membership to represent the interpretation of an user Object
(respectively of a Goal) as compared to a system Object
(respectively of a Goal).
In our technological system[Omri & al. 95], learning is defined
as the system’s capacity to interpret an unknown word using the
links created between this new word and known words. The main
link is provided by the context of the query. When novice’s query
is confused with an unknown verb (Goal) applied to a known noun
denoting either an Object in the ideal user’s Network or an Object
in the user’s Network, the system infer that this new verb
corresponds to one of the known Goal.

1. Introduction

2. Construction of the membership function

Users do not learn through written instructions. Learning how to
use a new technological system is mainly an exploratory activity.
Exploring learning has shown to improve the abilities constructing
to successful error handling and discovering and eventually
constructing correct knowledge about the query, but exploratory
activity frequently leads to experience uninterested states or not
reach the interested state Goal. Users need assistance not only to
avoid errors, but to understand how the system interprets their
commands and How and Why to act in order to reach their
System’s Goal [Richard & al. 93].
In order to respond to a query, an executive assistant might
know very precisely the Goal the user has in mind, which means
an Object in a given state (the properties of the Object being
transformed). Moreover, even when Goals are fairly well defined,
it is often necessary to think about superordinate Goals.

We consider a membership function characterized by a
quadrupled [γ, α, β, δ], where α and β are respectively the inferior
and superior stone of the nucleus, γ and δ are respectively the
inferior and superior stone of the support of this membership
function. The alone value associated by a user to a Goal
(respectively an Object) to designate a Goal (respectively an
Object) system allows to obtain the departure function
membership (Fig. 1) (Fig. 2) of the Goal (respectively of the
Object) aimed. The nucleus of this function will be characterized
by the value α (α = β) associated by the user and the support will
be delimited according to cases: if ϑ < 0.5 then γ = 0, δ = 2ϑ and
if ϑ > 0.5 then γ = 2ϑ -1 and δ = 1.

A novice user asks the expert operator about how to execute the
action ‘how to Gum Word ?’. The problem that is under
investigation is how to match the content of this query to their
corresponding items. Precisely, how to match the Goal ‘Gum’ to
its corresponding item in the set of standard nominations
{EraseWithMenu, EraseWithKey, CutWithMenu, Copy...}. The
item ‘Word’ in the user’s query is interpreted easily by the system
because it corresponds to the word Object’s class in the semantic

1

f userGoal / systemGoal

γ=0

∝=β=ϑ

δ=2ϑ

1

x

Fig. 1 - Departure membership function: case where ϑ p 0.5 .

International Conference on Artificial and Computational Intelligence for Decision, Control and Automation in Engineering and Industrial Applications

This formula holds therefore account the number of
adjustment that has undergone the stone has the nucleus. The same
principle is applied if the adjustment concerns the stone β.
Consequently, by generalizing the adjustment for a number N of
iterations, the formula of the nucleus stone adjustments of f
become:

f userGoal / systemGoal
1

0

γ= 2ϑ-1

α=β=ϑ

δ=1

x

Ajus(α

)=
N +1

Ajus( β

)=
N +1

Fig. 2 - Departure membership function: case where ϑ f 0.5 .
This membership function thus constructed (Fig.1), undergo an
adjustment during the manipulation of the Object or the Goal. The
different terms that users use to designate an Object or a Goal
given system allow to realize this adjustment. This last can be
undertaken two different manners: to strengthen the membership
function or to weaken it, according to values attributed by the user.
The Objective is to represent efficiently the Goal (respectively the
Object) user by this membership function according to a Goal
(respectively Object) system.

N *α

+ϑ
α +β
N N +1 , if ϑ
N
≤ N
N +1
N +1
2

N *β

+ϑ
α +β
N N +1 , if ϑ
N
≥ N
N +1
N +1
2

Where Ajus (α) and Ajus (β) are respectively the new values of α
and β after adjustment.
We notices that this adjustment undertakes only an alone side both
since this depends on the value of has as compared to stones of the
nucleus. Two possible cases can happen: the first case produces
when ϑ is inferior to the average of the nucleus ( ϑ ≤

2.1. Adjustment of the f’s nucleus

α+β
) and
2

therefore the adjustment is called to left, the second case produces
The nucleus of the membership function is reduced to the value
α = β. In the course of the first iteration, a user associates the
value 0 to the Goal (respectively Object) to represent. The
correction that it is necessary to bring to the considered nucleus
consists in adjust one stone of the nucleus according to the value ϑ
associated as following.
- If ϑ > α, then α been the inferior stone by the nucleus and
the superior stone β. This last will be adjusted by:

Ajus(β) =

β+ϑ
2

α+ϑ
2

The figure (Fig. 3) shows the new value of the nucleus after
adjustment.
For two iterations, the coefficient of adjustment is calculates by
the next formula:

Ajus(α ) =

α+β
), in this last case,
2

the adjustment is called to straight.
2.2. Adjustment of the f’s support
Concerning the adjustment of the f’s support, the same
reasoning applied on the case of the adjustment of the nucleus, is
used in this case. Two possible cases can happen: the case where

α+β
) and the opposite case, it is had called
2
α+β
(ϑ ≥
). In the first case the adjustment concerns the
2
(ϑ ≤

- If ϑ < α, we guards β as superior stone and we adjusts
the inferior stone α by:

Ajus(α ) =

when ϑ is superior to this average ( ϑ ≥

2 *α + ϑ
3

inferior stone by the support and in the opposite case, it concerns
the stone superior. For the case of the adjustment of the inferior
stone, the expression is given by:

Ajus(γ

)=
N +1

N *γ

+ϑ
α +β
N +1 N +1 , if ϑ
N
≤ N
N +1
N +1
2

For the adjustment of the superior stone of the support, the formula
above becomes:

f userGoal / systeGoal
Ajus (γ) and Ajus (δ) are respectively the new values of γ

1

Ajus(δ
0

γ= 2ϑ-1

α

β

δ=1

Fig. 3 - Adjustment of the f’s nucleus.

x

)=
N +1

N *δ

and δ after adjustment.

+ϑ
α +β
N N +1 , if ϑ
N
≥ N
N +1
N +1
2

International Conference on Artificial and Computational Intelligence for Decision, Control and Automation in Engineering and Industrial Applications

The figure 4 presents the membership function after adjustment of
its nucleus and its support.

Knowing that

(γ = 0) ≤ (ϑ = 0.5) ≤

α+β
2

(old value

before adjustment), the undertaken adjustment is always left.

f userGoal / systemGoal
1

f Subs tan tive / Word
0

γ

∝

β

δ

1

x

1

Fig. 4 - Adjustment of the f’s support.
Example 1
Let ‘Substantive’ be the liable Object that one seeks to
represent and ‘Word’ the Object ideally considered. Let ϑ = 0.7
the degree of possibility associated by the user to the Object
‘Substantive’ to designate the Object system ‘Word’. A second
user associates the value ϑ = 0.5 as the degree of confidence, we
have therefore

ϑ≤

α+β
and N = 1 (N been the number of
2

0 γ =0.4 α=0.6 β=0.7

The consequent function after adjustment of the nucleus and
the support is given by the figure (Fig.7).

f Subs tan tive / Word

Undertaken calculations are detailed in paragraphs a and b
following.

1

adjustment of the nucleus.

Ajus(α ) = 1*0.7 + 0.5 = 0.6
2
2
The new value of α been α = 0.6 and β preserved its value β
= 0.7.

1

0

γ=0.4

0

γ =0.45 α=0.6 β=0.7

δ=1

x

Fig. 7 - Membership function after adjustment.
3. Coefficient of decision
In a problem of decision, there exists often a gap between the
Object ideally considered and the Object observed. The problem is
to measure this gap to tell to what extent an observed Object O
satisfies an Object O' theoretical. In our case, an observed Object
is represented by a fuzzy subset according to an Object theoretical.

f Subs tan t /Word

∝=β=0.7

δ=1

x

Fig. 5 - associated membership function to ‘Substantive’.
b)

x

Fig. 6 - Membership function with nucleus adjusted.

iterations).

a)

δ=1

adjustment of the support.

Ajus(γ ) = 1*0.4 + 0.5 = 0.45
2
2

The solution that we have retained consists in determine a
coefficient of decision Dc (O/Oi) for each representation of an
User Object as compared to an Object relative given system to an
Object given. This coefficient of decision Dc (O/Oi) calculates in
function of the nucleus of the membership function of the User
Object.
3.1 Definitions
Definition 1. Let αi be the inferior stone by the nucleus of the
membership function f associated to an User Object Oi as
compared to an Object system O and βi the stone superior of the

International Conference on Artificial and Computational Intelligence for Decision, Control and Automation in Engineering and Industrial Applications

f’s nucleus. One defines the coefficient of decision Dc (O/Oi) of
an User Object O as compared to an Object system Oi by:

Dc(O / O i ) =

α i + 3β i
4

Word

The choice of this coefficient is made with the next manner : by
leaving, in the beginning, the average of the nucleus that forms the
totality of most believable values, several functions of membership
can present a same average of the nucleus despite that they are
different of each other. It is therefore difficult to choose that that
represents the better an Object given. To allow an efficient choice,
one has introduced the superior stone b of the nucleus in the
calculation of the coefficient of decision Dc. Thus, to decide
between several Object systems, one calculates the coefficient of
decision of each Object. That whose value is the largest is
therefore that that represents the better the User Object, and
consequently, it is retained among others.
The coefficient allowing to realize the final choice is called
coefficient final decision, noted DcJ , and datum by:
Definition 2. Let Oi, i ∈ [1, n], be the totality of Object systems
whose one knows for each of them, the decision coefficient Dc as
compared to a liable Object O. We define the final decision
coefficient, noted DcJ, of O as compared to the set {O1, O2, …, On}
by:

α + 3βi
D (O / Oi , i ∈ [1, n]) = maxDc (O / Oi ) = max i
1≤ i ≤ n
1≤ i ≤ n
4
∫
c

Example 2.

1

Not Word
0
0.1
0.2
0.7 0.8 substantive
Fig. 9 - Membership function as compared to ‘Word’.
Where the final decision coefficient:

Dcf (Subs tan tive /′ Ca, Mo, Ch}) =
max(0.525,0.575,0.475) = 0.575

We will tell in conclusion that the Object system ‘Character’ has a
closer senses to that the User Object ‘Substantive’ because it
presents the highest coefficient of decision.
Consequently, a query of the type ‘How to Select a Substantive?’
will have as equivalent request ‘How to Select a Character?’. A
such request presents no ambiguity, and thus the system can
provide a reply to the subject.
Remark: The same reasoning is applied for the case of Goals.
The problem that remains to solve is that to use this representation
to improve the evolution of the formalism that we have elaborates.

Let ‘Substantive’ be the User Object whose one seeks the
meaning as compared to the totality of Object system {Character,
Word, ChaineofChar.}, noted by {Cha, Mo, Ca}.
The
corresponding Functions of membership are given respectively by
(fig. 8), (fig. 9) and (fig. 10) relative to the User Object
‘Substantive’.

ChaineofChar

Not Chaineofchar
0

One calculates now the different degree Dc(O/Oi,),one a:

0 .3 + 3 * 0 .6
= 0.525
4
0 .2 + 3 * 0 .7
Dc (Subs tan tif / Mo ) =
= 0.575
4
0 .4 + 3 * 0 .5
Dc (Subs tan tif / Ch ) =
= 0.475
4
Dc (Subs tan tif / Ca ) =

Character

not Character
0

0.2

0.3

0.6

0.7

substantive

Fig. 8 - Membership function as compared to ‘Character’.

0.1 0.4

0.5 0.8

Substantive

Fig. 10 - Membership function as compared to ‘ChaineofChar’.

4.

Conclusion

With the learning of new words in natural language as the
interpretation witch was produced in agreement with the user, the
system improves its representation scheme at each experiment
with a new user and, in addition, takes advantage of previous
discussions with users. Fuzzy semantic Networks of the
technological system present three levels or kinds of learning
[Omri & al. 95]: we distinguish between states Goals dynamics,
states Objects dynamics and states relationship dynamics. In this
paper we have described a tool to softening of the fuzzy
knowledge representation for the two first kinds of learning, but
we think that is possible to represent the third kind of learning
witch is the states relations dynamics. Given that each bond of
connection is characterized by a couple of value (a degree of
possibility and a degree of necessity), the principle will be the

International Conference on Artificial and Computational Intelligence for Decision, Control and Automation in Engineering and Industrial Applications

even but we have to use two membership functions to represent a
bond of connection between two objects or between two purposes.
The first function will characterize the degree of possibility and
the second the degree of possibility. We think that it would be
interesting to strengthen this tool of softening with the notion of
similarity between two Objects (respectively two Goals) so as to
establish connection between user Object (or Goal) and system
Object (or system Goal) in the semantic Net. This makes only
increase performances of the system in the course of the
identification of user requests.
4
