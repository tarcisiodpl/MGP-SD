

This paper presents a simple framework for Horn­
clause abduction, with probabilities associated with
hypotheses. It is shown how this representation can
represent any probabilistic knowledge representable in
a Bayesian belief network. The main contributions
are in finding a relationship between logical and prob­
abilistic notions of evidential reasoning. This can be
used as a basis for a new way to implement Bayesian
Networks that allows for approximations to the value
of the posterior probabilities, and also points to a
way that Bayesian networks can be extended beyond
a propositional language.
Introduction

1

In this paper we pursue the idea of having a log­
ical language that allows for a pool of possible hy­
potheses [Poole et a/., 1987; Poole, 1988], with prob­
abilities associated with the hypotheses [Neufeld and
Poole, 1987]. We choose a very simple logical lan­
guage with a number of assumptions on the structure
of the knowledge base and independence amongst hy­
potheses. This is intended to reflect a compromise
between simplicity to implement and representational
adequacy. To show that these assumptions are not un­
reasonable, and to demonstrate representational ade­
quacy, we show how arbitrary Bayesian networks can
be represented by the formalism. The main contribu­
tions of this embedding are:
•

It shows a relationship between logical and prob­
abilistic notions of evidential reasoning. In par­
ticular it provides some evidence for the use of
abduction and assumption-based reasoning as the
logical analogue of the independence of Bayesian
Networks. In earlier work [Poole, 1989; Poole,
1990] a form of assumption-based reasoning where
we abduce to causes and then makes assumptions
in order to predict what should follow is devel­
oped; it is a similar mechanism that is used here
to characterise Bayesian networks.

•

It gives a different way to implement Bayesian
networks1. The main advantage of this implemen­
tation is that it gives a way to approximate the
probability with a known error bound.

•

Because the underlying language is not proposi­
tional, it gives us a way to extend Bayesian net­
works to a richer language. This corresponds to
a form of dynamic construction of Bayesian net­
works [Horsch and Poole, 1990].

In [Poole, 1991], it is argued that the probabilistic
Horn abduction framework provides a good compro­
mise between representational and heuristic adequacy
for diagnostic tasks. It showed how the use of variables
can be used to extend the purely propositional diag­
nostic frameworks, and how the use of probabilities can
be naturally used to advantage in logical approaches
to diagnosis.
2
2.1

Probabilistic Horn Abduction
Horn clause abduction

The formulation of abduction used is a simplified form
of Theorist [Poole et a/., 1987; Poole, 1988]. It is sim­
plified in being restricted to Horn clauses.
Although the idea [Neufeld and Poole, 1987] is not
restricted to Horn clauses (we could extend it to dis­
junction and classical negation [Poole et a/., 1987] or
to negation as failure [Eshghi and Kowalski, 1989]), in
order to empirically test the framework, it is impor­
tant to find where the simplest representations fail.
It may be the case that we need the extra represen­
tational power of more general logics; we can only
demonstrate this by doing without the extra repre­
sentational power.
We use the normal Prolog definition of an atomic sym1 For composite beliefs this is closely related to the algo­
rithm of Shimony and Charniak [1990], but also is devel­
oped for finding posterior probabilities of hypotheses (sec­
tion 3.2)

272

Poole

as the explanation logically implies the observation:

hoi [Lloyd, 1987]. A Horn clause is of the form:
a.

P(Diobs)

... /I.an.
false <-a1 /1. /1. an.
a

<-aJ/1.

=

•. •

where a and each a; are atomic symbols. false is
a special atomic symbol that is not true in any
interpretation2.
An abductive scheme is a pair

(F, H)

where

P(obs!D) x P(D)
P(obs)
P(D)
P(obs)

The value, P(obs) is the prior probability of the ob­
servation, and is a constant factor for all explanations.
We compute the prior probability of the conjunction
of the hypotheses using:

P(hnlh! /1. /1. hn-d
xP(h! /1. . . . /1. hn-J)
•. .

Variables in F are implic­
itly universally quantified.

F is a set of Horn clauses.
H

is a set of atoms, called the "assumables" or the
"possible hypotheses". Associated with each as­
sumable is a prior probability.

The value of P(h1 /1. ... /1. hn-d forms a recursive call,
with P(true) = 1. The only other thing that we need
to compute is

Here (and in our implementation) we write

ssumabl e (h, p).

If hn is inconsistent with the other hypotheses, then
the above conditional probability is zero. These are
the cases that are removed by the inconsistency re­
quirement. If hn is implied by the other hypotheses,
the probability should be one. This case never arises
for minimal explanations.

[Poole et a/., 1987; Poole, 1988] If g
is a ground formula, an explanation of g from (F, H)
is a subset D of H such that

While any method can be used to compute this condi­
tional probability, we assume that the logical depen­
dencies impose the only statistical dependencies on the
hypotheses.

a

where h is a (possibly open) atom, and p is a number
0 � p � 1 to mean that for every ground instance h(}
of h, hB E H and P(hB) = p.
Definition 2.1

•
•

FU D F g and
F U D � false.

Logically independent instances of
hypotheses are probabi/istically independent.

Assumption 2.2

The first condition says that, D is a sufficient cause
for obs, and the second says that D is possible (i.e.,
F U D is consistent).
A minimal explanation of g is an explanation of
such that no strict subset is an explanation of g.
2.2

g

Probabilities

Associated with each possible hypothesis is a prior
probability. The aim is to compute the posterior prob­
ability of the minimal explanations given the observa­
tions. Abduction gives us what we want to compute
the probability of and probability theory gives a mea­
sure over the explanations [Neufeld and Poole, 1987].
To compute the posterior probability of an explanation
D = {h1, ... , hn} of observation obs given observation
obs, we use Bayes rule and the fact that P(obs!D) = 1
2Notice that we are using Horn clauses differently from
how Prolog uses Horn clauses. In Prolog, the database con­
sists of definite clauses, and the queries provide the neg­
ative clauses [Lloyd, 1987]. Here the database consists of
definite and negative clauses, and we build a constructive
proof of an observation.

Definition 2.3 A set
independent (given

D of hypotheses are logically
F) if there is no S C D and

h E D\S such that
FU S F h

or

F U S F ..,h

The assumptions in a minimal explanation are always
logically independent.
Under assumption 2.2, if {hi, ... , hn} are part of a min­
imal explanation, then

thus

n
P(h!

/1. ... /1. hn)

II P(h;)

1=1

To compute the prior of the minimal explanation we
multiply the priors of the hypotheses. The posterior
probability of the explanation is proportional to this.
The justification for the reasonableness (and univer­
sality) of this assumption is based on Reichenbach's

principle of the common cause:

Representing Bayesian Networks Within Probabilistic Horn Abduction

"If coincidences of two events A and B oc­
cur more frequently than their independent
occurrence, ... then there exists a common
cause for these events ... " [Reichenbach,
1956, p. 163].
When there is a dependency amongst hypotheses, we
invent a new hypothesis to explain that dependence.
Thus the assumption of independence, while it gives
a restriction on the knowledge bases that are legal,
really gives no restriction on the domains that can be
represented.
2.3

Relations between explanations

The remaining problem in the probabilistic analysis is
in determining the value of P(obs).
When using abduction we often assume that the diag­
noses are covering. This can be a valid assumption if
we have anticipated all eventualities, and the observa­
tions are within the domain of the expected observa­
tions (usually if this assumption is violated there are
no explanations). This is also supported by recent at­
tempts at a completion semantics for abduction [Poole,
1988; Console et a/., 1989; Konolige, 1991]. The results
show how abduction can be considered as deduction
on the "closure" of the knowledge base that includes
statements that the given causes are the only causes.
The closure implies the observation are logically equiv­
alent to the disjunct of its explanations. We make this
assumption explicit here:
Assumption 2.4

The diagnoses are covering.

For the probabilistic calculation we make an additional
assumption:
Assumption 2.5

ally exclusive).

The diagnoses are disjoint (mutu­

It turns out to be straight forward to ensure that
these properties hold, for observations that we can
anticipate3. We make sure that the rules for each
possible subgoal are disjoint and covering. This can
be done locally for each atom that may be part of an
observation or used to explain an observation.
''Vhen building the knowledge base, we use the local
property that the rules for a subgoal are exclusive and
covering to ensure that the explanations generated are
exclusive and covering.
Under these assumptions, if { e 1, ... , en} is the set of all
explanations of g:

P(g)

P(e1 V e2 V ... V en)
P(el) + P(e2) + .. + P(en)
.

3Like other systems (e.g., [Pearl, 1988b)), we have to
assume that unanticipated observations are irrelevant.

3

Representing Bayesian networks

In this section we give the relationship between
Bayesian networks and our probabilistic Horn abduc­
tion. We show how any probabilistic knowledge that
can be represented in a Bayesian network, can be rep­
resented in our formalism.
Suppose we have a Bayesian network with random
variables a1, ... , an, such that random variable a; can
have values v;, 1, ... , v;,n, . We represent random vari­
able a; having value Vi,j as the proposition a;(Vi,j ).

The first thing we need to do is to state that the values
of variables are mutually exclusive. For each i and for
each j, k such that j =P k, we have the rule
false <--a;(v;,j) 1\ a;(vi,k)
A Bayesian network [Pearl, 1988b] is a directed acyclic
network where the nodes represent random variables,
and the arcs represent a directly influencing relation.
An arc from variable b to variable a represents the fact
that variable b directly influences variable a; the rela­
tion influences is the transitive closure of the directly
influences relation. Terminal nodes of a Bayesian net­
work are those variables that do not influence any
other variables. The depth of a node is the length
of the longest (directed) path leading into the node.
A composite belief [Pearl, 1987] is an assignment of a
value to every random variable.
Suppose variable a is directly influenced by variables
lla = b1, ... , bm (the "parents" of a) in a Bayesian net­
work. The independence assumption embedded in a
Bayesian Network [Pearl, 1988b] is given by

P(ailla 1\ v) P(allla)
=

where v is a variable (or conjunction of variables) such
that a does not influence v (or any conjunct in v).
The network is represented by a rule that relates a
variable with its parents:
a(V) <--b1 (VI) 1\ ... 1\ bm(V m) 1\ c_a(V, V1 , .. ., Vm)
The intended interpretation ofc..a(V, V1, ... , Vm) is that
a has value V because b1 has value V1, ..., and bm has
value Vm.
Associated with the Bayesian network is a contingency
table which gives the marginal probabilities of the val­
ues of a depending on the values of b1, ... , bm. This will
consist of probabilities of the form
P(a = vibl =vJ, ... ,bm=vm)=p
This is translated into the assertion

assumable(c_a(v, v1, v2, . ., vm), p).
.

Nodes with no parents can be just made assumable,
with the appropriate probabilities (rather than invent­
ing a new hypothesis and the above procedure would
prescribe).

273

274

Poole

0.1 ).
0.01 ).
assumable( c_srnoke(no,no), 0.99 ).
assumable( c_srnoke(no,yes),

assumable( c_srnoke(yes,no),

0.02 ).
0.98 ).

assumable( tarnpering(yes),
assumable( tarnpering(no),

alarrn(Al) <- fire(Fi), tarnpering(Ta),
c_alarrn(Al,Fi,Ta).
false <- alarrn(yes),
alarrn(no).

0.50 ).
0.50 ).
c_alarrn(yes,yes,no), 0.99 ).
c_alarrn(no,yes,no), 0.01 ).
c_alarrn(yes,no,yes), 0.85 ).
c_alarrn(no,no,yes),
0.15 ).
c_alarrn(yes,no,no), 0.0001 ).
c_alarrn(no,no,no), 0.9999 ).

assumable( c_alarrn(yes,yes,yes),
assumable( c_alarrn(no,yes,yes),
assumable(
assumable(
assumable(
assumable(
assumable(
assumable(

Figure 1: An influence diagram for a smoking alarm.

leaving(Le) <- alarrn(Al),
c_leaving(Le,Al).

Consider a representation of the influ­
ence diagram of figure 3.1, with the following condi­
tional probability distributions:

Example 3.1

false <- leaving(yes),
leaving(no).

0.88 ).
0.12 ).
assumable( c_leaving(yes,no), 0.001 ).
assumable( c_leaving(no,no), 0.999 ).
assumable( c_leaving(yes,yes),
assumable( c_leaving(no,yes),

p(fire)
p(smokelfire)
p(smokel...,fire)
p(tampering)
p(alarmlfire 1\ tampering)
p(alarmlfire A -,tampering)
p(alarml...,fire 1\ tampering)
p(alm·ml...,fire A -,tampering)
p(leavinglalarm)
p(leaving l...,a[arm)
p(report i l eaving )
p(reportHeaving)

=
=

0.01
0.9
0.01
0.02
0.5
0.99
0.85
0.0001
0.88
0.001
0.75
0.01

The following is a representation of this Bayesian net­
work in out formalism.
0.01 ).
0.99 ).

assumable( fire(yes),
assumable( fire(no),

false <- fire(yes), fire(no).
srnoke(Srn) <- fire(Fi),

c_report(Le,Al).
false <- report(yes),
report(no).

0.75 ).
0.25 ).
assumable( c_report(yes,no), 0.01 ) .
assumable( c_report(no,no), 0.99 ).
assumable( c_report(yes,yes),

assumable( c_report(no,yes),

3.1

Composite Beliefs

A composite belief [Pearl, 1987] is an assignment of
a value to every random variable. The composite be­
lief with the highest probability has also been called
a MAP assignment [Charniak and Shimony, 1990].
These composite beliefs have been most used for di­
agnosis [de Kleer and Williams, 1987; de Kleer and
Williams, 1989; Peng and Reggia, 1990] ( see [Poole
and Provan, 1990] for a discussion on the appropriate­
ness of this ) .

The minimal explanations of the termi­
nal variables having particular values correspond to the
composite beliefs in the Bayesian network with the ter­
minals having those values. The priors for the expla­
nations and the composite beliefs are identical.

Lemma 3.2

c_srnoke(Srn,Fi).
false <- srnoke(yes),
srnoke(no).
assumable( c_srnoke(yes,yes),

report(Le) <- leaving(Al),

0.9 ).

Representing Bayesian Networks Within Probabilistic Horn Abduction

The proof of this lemma and for lemma 3.4 appears in
appendix A.
As the same procedure can be used to get from the pri­
ors of composite hypotheses and explanations to the
posteriors given some observations, the following the­
orem is a direct corollary of lemma 3.2.

If the observed variables include all
terminal variables, the composite beliefs with the ob­
served variables having particular values correspond
exactly to the explanations of the observations, and
with the same posterior probability.

Theorem 3.3

If the observed variables do not include all terminal
values, we need to decide what it is that we want the
probability of [Poole and Provan, 1990]. If we want to
commit to the value of all variables, we consider the set
of possible observations that include assigning values
to terminal nodes. That is, if o was our observation
that did not not include observing a value for variables
a, then we need to consider the observations o/\ a(v),
for each tuple v of values of variables a. To find the
accurate probabilities we need to normalise over the
sum of all of the explanations. "'hether or not we
want to do this is debatable.
3.2

Posterior

Probabilities of Propositions

4

Best-first abduction

We are currently experimenting with a number of im­
plementations based on Logic programming technol­
ogy or on ATMS technology. These are implemented
by a branch and bound search where we consider the
partial explanation with the least cost (highest prob­
ability) at any time.
The implementations keep a priority queue of sets of
hypotheses that could be extended into explanations
("partial explanations"). At any time the set of all the
explanations is the set of already generated explana­
tions, plus those explanations that can be generated
from the partial explanations in the priority queue.
Formalll, a partial explanation is a pair

(g <- C, D)

where g is an atom, C is a conjunction of atoms and
D is a set of hypotheses.
Initially the priority queue to explain a contains
{(a<- a, { } ), (false <-

false, { } )}

We thus try simultaneously try to find explanations
of a and "explanations" of false (forming nogoods in
ATMS terminology) that can be used to prune other
partial explanations.

In the previous section, the observations to be ex­
plained corresponded exactly to the conditioning vari­
ables. This corresponds to the use of "abduction" in
[Poole, 1989]. In this section we show a relationship to
the combination of abducing to causes and default rea­
soning to predictions from these causes [Poole, 1989;
Poole, 1990].

At each step we choose the element

Let expl(a) be the set of minimal explanations of
proposition (or conjunction) a. Define

We have an explanation when C is the empty conjunc­
tion. Otherwise, suppose C is conjunction a/\ R.

M(a)

L P(E)

=

EEexpl(a)

If H is a set of assignments to variables
in a Bayesian Network, and H' is the analogous propo­
sitions to H in the corresponding probabilistic Horn
abduction system, then
P(H) M(H')

Lemma 3.4

=

A simple corollary of the above lemma can be used
to determine the posterior probability of a hypothesis
based on some observations:
Theorem 3.5

. v,·I ob s) - M(obs' A xi ( v; ))
P(x,M(obs')
_

_

The denominator can be obtained by finding the ex­
planations of the observations. The numerators can be
obtained by explaining Xi(vi) from these explanations.

(g <- C, D)
of the priority queue with maximum prior probability
of D, but when partial explanations are equal we have
a preference for explanations of false.

There are two operations that can be carried out. The
first is a form of SLD resolution [Lloyd, 1987], where
for each rule

a

<-

b1/\ ... /\ bn

in F, we generate the partial explanation

(g <- b1

A ... A

bn A R, D) .

The second operation is used when a
we produce the partial explanation

(g

<-

R, {a}

E

H.

In this case

U D)

This procedure, under reasonable assumptions, will
find the explanations in order of liklihood.
4Here we give only the bare-bones of the goal-directed
procedure; there is an analogous bottom-up procedure that
we are also experimenting with. The analysis is similar
for that procedure. We also only give the propositional
version here. The lifting to the 11eneral case by the use of
substitutions is straightforward LLloyd, 1987].

275

276

Poole

It turns out to be straight forward to give an upper
bound on the probability mass in the priority queue.
If (g <- C, D) is in the priority queue, then it can possi­
bly be used to generate explanations D1, ... , Dn. Each
D; will be of the form DUn;. We can place a bound
on the probability mass of all of the D;, by
p(D1 V ... V Dn)
p(D II (Df V ... V D�))
<
p(D)
This means that we can put an bound on the range of
probabilities of an goal based on finding just some of
the explanations of the goal. Suppose we have goal g,
and we have generated explanations 1J. Let

Pv

=

L P(D)
DE'D

D:(g-C,D)EQ

P(D)

where Q is the priority queue.
We then have
As the computation progresses, the probability mass
in the queue PQ approaches zero and we get a better
refinements on the value of P(g). This thus forms the
basis of an "anytime" algorithm for Bayesian networks.
5

Shimony and Charniak, 1990]. Theorem 3.3 is anal­
ogous to Theorem 1 of [Shimony and Charniak, 1990].
Instead of considering abduction, they consider models
that consist of an assignment of values to each random
variable. The label of [Shimony and Charniak, 1990]
plays an analogous role to our hypotheses. They how­
ever, do not use their system for computing posterior
probabilities. It is also not so obvious how to extend
their formalism to more powerful logics.
This work is also closely related to recent embeddings
of Dempster-Shafer in ATMS [Laskey and Lehner,
1989; Provan, 1989]. One difference between our em­
bedding of Bayes networks and Dempster Shafer is in
the independence assumptions used. Dempster-Shafer
assume that different rules are independent. We as­
sume they are exclusive. Another difference is that
these embeddings do not do evidential reasoning (by
doing abduction), determining probability of hypothe­
ses given evidence, but rather determine the "belief"
of propositions from forward chaining.
The ATMS-based implementation is very similar to
that of de Kleer and Williams [1987; 1989]. They are
computing something different to us (the most likely
composite hypotheses), and are thus able to do an A*
search. It is not clear that including the "irrelevant"
hypotheses gives the advantages that would seem to
arise from using an A* search.

Causation
7

There have been problems associated with logical for­
mulations of causation [Pearl, 1988a]. There has been
claims that Bayes networks provide the right indepen­
dencies for causation [Pearl, 1988b]. This paper pro­
vides evidence that abducing to causes and making
assumptions as to what to predict from those assump­
tions [Poole, 1989; Poole, 1990] is the right logical ana­
logue of the independence in Bayesian networks (based
on theorem 3.5).
One of the problems in causal reasoning that Bayesian
networks overcome [Pearl, 1988b] is in preventing rea­
soning such as "if c1 is a cause for a and c2 is a cause
for -.a, then from c1 we can infer c2". This is the prob­
lem that occurs in the Yale shooting problem [Hanks
and McDermott, 1987]. Our embedding says that this
does not occur in Bayesian networks as c1 and c2 must
already be stated to be disjoint. We must have al­
ready disambiguated what occurs when they are both
true. If we represent the Yale shooting scenario so that
the rules for "alive" are disjoint the problem does not
anse.
6

Comparison with Other Systems

The closest work to that reported here is by Char­
niak and Shimony [Charniak and Shimony, 1990;

Conclusion

This paper presented a simple but powerful mecha­
nism for combining logical and probabilistic reasoning
and showed how it can be used to represent Bayesian
Networks.
Given the simple specification of what we want to com­
pute, we are currently investigating different imple­
mentation techniques to determine which works best in
practice. This includes using logic programming tech­
nology and also ATMS technology. We are also trying
to the representational adequacy by building applica­
tions (particularly in diagnosis, but also in recogni­
tion), and based on this technology.
It may seem as though there is something terribly ad
hoc about probabilistic Horn abduction (c.f. the ex­
tensional systems of [Pearl, 1988b]). It seems, how­
ever, that all of the sensible (where Lj M ( ai( Vi,j)) =
1 for each random variable ai) representations (propo­
sitionally at least) correspond to Bayesian networks.
The natural representation tends to emphasise propo­
sitional dependencies (e.g., where b is an important
distinction when a is true, but not otherwise). These
are normal Bayesian networks, but imply more struc­
ture on the contingency tables than are normally con­
sidered special.

Representing Bayesian Networks Within Probabilistic Horn Abduction

A

Proof Outlines of Lemmata

The minimal explanations of the termi­
nal variables having particular values correspond to the
composite beliefs in the Bayesian network with the ter­
minals having those values. The priors for the expla­
nations and the composite beliefs are identical.

Lemma 3.2

First, there is a one to one correspondence
between the composite beliefs and the minimal expla­
nations of the terminals. Suppose x1, ... , Xn are the
random variables such that variable x; is directly in­
fluenced by x;,, ... , x; • . The minimal explanations of
the terminal nodes co�sist of hypotheses of the form
Proof:

with exactly one hypothesis for each x;, such that
is a logical consequence of the facts and the
ex'planation. This corresponds to the composite belief

x;. (Vi;)

XJ(vJ) 1\ ... 1\ xn(vn)·

By construction, the proofs for the terminal nodes
must include all variables.
Suppose E is a minimal explanation of the terminal
variables. To show there is only one hypothesis for
each random variable. Suppose that x; is a variable
such that there are two hypotheses
in E. If some x;,(v;,) or Xi;(vl) is not a consequence
of FUE, then the corresponding c..x; hypothesis can be
removed without affecting the explanation, which is a
contradictio� to the minimality of E. So each �i;(v;;)
and Xi;(v:,) IS a consequence of FUE. By consistency
of E each Vi; =vi; . The only way these assumptions
can be different is if v; "# v:, and so we can derive
x;(v;) and x;(v;) which leads to false, a contradiction
to the consistency of E.

If H is a set of assignments to variables
in a Bayesian Network, and H' is the analogous propo­
sitions to H in the corresponding Probabilistic Horn
Abduction system, then
P(H) =M(H')
Lemma 3.4

This is proven by induction on a well founded
ordering over sets of hypotheses. This ordering is
based on the lexicographic ordering of pairs (h, n)
where h is the depth of the element of the set with
maximal depth, and n is the number of elements of
this depth. Each time through the recursion either
h is redneed or h is kept the same and n is reduced.
This is well founded as both h and n are non-negative
integers and n is bounded by the number of random
variables.

Proof:

For the base case, where h = 1, we have all of the hy­
potheses are independent and there is only one trivial
explanation. In this case we have

P(H) = M(H') = II P(h)
heH

For the inductive case, suppose a(v) is a proposition in
H with greatest depth. Let R = H\a(v). Under the
ordering above lla U R < H, and so we can assume the
lemma for n. U R. Note also that a does not influence
anything in R (else something in R would have greater
depth than a).

P(H)

(� P(allla

Second, the explanations and the composite beliefs
have the same prior. Given an assignment of value
V; to each variable x;, define TI; by

)

x

P(R)

LP(ailla) x P(lla 1\ R)
n.

= LP(c...a(v,lla)) x M(TI�U R')
n.

By the definition of a Bayesian net, and the definition
of c..x;, we have

LP(c...a(v,n.))
n.

= E

n

x

E

E

E'Eexpl(a(v)AR)

1

M(a(v) 1\ R')
= M(H')

i=l

P(exp)
0

E

P(E)

Eeexpl(n�AR')

P(c...a(v,TI.)) x P(E)

n. Eeexpl(n.AR)

II P(x;(v;)ITI;)
n
II C....Xi(Vi, Vil ..., Vinj)
0

R) x P(TiaiR)

n.

•.

exp is the explanation.

1\

= LP(ailla) X P(TiaiR) X P(R)

TI; =x;,(v;,) 1\ ... 1\ x;., (v; )
where x;,, ..., x;., are the variables directly influencing
Xi .

Where

P(a = v 1\ R)
= P(a =viR) x P(R)

P(E')

277

278

Poole

Acknowledgements

This research was supported under NSERC grant OG­
P0044121, and under Project B5 of the Institute for
Robotics and Intelligent Systems. Thanks to Michael
Horsch for working on the implementations, and to
Judea Pearl for pointing out the relationship to Re­
ichenbach's principle.
