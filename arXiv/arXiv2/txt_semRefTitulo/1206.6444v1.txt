
Motivated by value function estimation in reinforcement learning, we study statistical linear inverse problems, i.e., problems where the
coefficients of a linear system to be solved
are observed in noise. We consider penalized estimators, where performance is evaluated using a matrix-weighted two-norm of
the defect of the estimator measured with
respect to the true, unknown coefficients.
Two objective functions are considered depending whether the error of the defect measured with respect to the noisy coefficients
is squared or unsquared. We propose simple, yet novel and theoretically well-founded
data-dependent choices for the regularization
parameters for both cases that avoid datasplitting. A distinguishing feature of our
analysis is that we derive deterministic error
bounds in terms of the error of the coefficients, thus allowing the complete separation
of the analysis of the stochastic properties of
these errors. We show that our results lead to
new insights and bounds for linear value function estimation in reinforcement learning.

1. Introduction
Let A be a real-valued m×d matrix, b be a real-valued
m-dimensional vector, M be an m × m positive semidefinite matrix, and consider the loss function LM :
Rd → R defined by
.
LM (θ) = kAθ − bkM ,
Appearing in Proceedings of the 29 th International Conference on Machine Learning, Edinburgh, Scotland, UK, 2012.
Copyright 2012 by the author(s)/owner(s).

where k·kM denotes the M matrix-weighted two-norm.
We consider the problem of finding a minimizer of this
loss when instead of A, b, one has access only to their
respective “noisy” versions, Â, b̂. We call this problem
a statistical linear inverse problem.
Our main motivation to study this problem is to better understand the so-called least-squares approach to
value function estimation in reinforcement learning,
whose goal is to estimate the value function that corresponds to a Markov reward process.1 The leastsquares approach originates from the work of Bradtke
and Barto (1996), who proposed to find the parametervector θ̂ of a linear-in-the-parameters value function
by solving Âθ = b̂ where the “noisy” matrix-vector
pair, (Â, b̂), is computed based on a finite sample.
They have proven the almost sure convergence of θ̂
to θ∗ , the solution of Aθ = b, under appropriate conditions on the sample as the sample-size converges to
infinity. In particular, they assumed that the sample is generated from either an absorbing or an ergodic Markov chain. More recently, several studies appeared where the finite-sample performance of LSTDlike procedures were investigated (see, e.g., (Antos
et al., 2008; Ghavamzadeh et al., 2010; Lazaric et al.,
2010; Ghavamzadeh et al., 2011)). The nonparametric
variant has also received some attention (Farahmand
et al., 2009; Maillard, 2011).
One of the difficulties in the analysis of these procedures is that in these problems the sample is correlated, so the standard techniques of supervised learning that assume independence cannot be used. The
approach followed by the above-mentioned papers is
to extend the existing techniques on an individual basis to deal with correlated samples. However, this
1
For background on this problem the reader may consult, e.g., the books by Bertsekas and Tsitsiklis (1996);
Sutton and Barto (1998); Szepesvári (2010).

Linear statistical estimation

might be quite laborious, even only considering the relatively easier case of regression2 (e.g., Farahmand and
Szepesvári 2011). Thus, a more appealing approach
might be to first derive error bounds as a function of
the errors Â − A, b̂ − b. The advantage of this approach is that it allows one to decouple the technical
issue of studying the concentration of the errors Â−A,
b̂ − b from the error (or stability) analysis of the estimation procedures. This is the approach that we
advocate and follow in this paper. Consequently, our
results will always be applicable when one can prove
the concentration of the errors Â − A, b̂ − b, leading
to an overall elegant, modular approach to deriving
finite-sample bounds. In some way, our approach parallels the recent trend in learning theory where sharp
finite-sample bounds are obtained by first proving deterministic “regret bounds” (e.g., Cesa-Bianchi et al.,
2004).
A second unique feature of our approach is that we derive our results in the above-introduced framework of
general statistical linear inverse problems. This allows
us to concentrate on the high-level structure of the
problem and yields cleaner proofs and results. Furthermore, we think that the problem of linear estimation is interesting on its own due to its mathematical elegance and its applicability beyond value function estimation (a number of specific linear inverse
problems, ranging from computer tomography to time
series analysis, are discussed in the books by Kirsch
(2011) and Alquier et al. (2011)).
We will also place special emphasis in statistical linear inverse problems whose underlying system is inconsistent (i.e., when there is no solution to Aθ = b).
In value function estimation, such inconsistency may
arise in the so-called off-policy version of the problem.
Understanding the inconsistent case is important because results that apply to it may shed light on issues
arising when learning in badly conditioned systems.
1.1. Goals
In this paper, our goal will be to derive exact, uniform, fast, high-probability oracle inequalities for the
estimation procedures we study. That is, our goal is
to prove that for our choice of an estimator θ̂, for any
0 < δ < 1, with probability 1 − δ,
n
o
LM (θ̂) ≤ inf LM (θ) + cÂ,b̂ (θ, δ) ,
(1)
θ

where, for fixed values of θ, δ,
cÂ,b̂ (θ, δ) = O(max(kÂ − Ak, kb̂ − bk))

(2)

2
Regression is a special case of value function estimation
(Szepesvári, 2010).

for some appropriate norm k·k. The above is called an
oracle inequality since the performance of θ̂ (as measured with the loss) is compared to that of an “oracle”
that has access to the true loss function. The term
cÂ,b̂ (θ, δ) expresses the “regret” permitted due to the
lack of knowledge of the true loss function. The scaling of this term with θ (or a norm of it) and δ will also
be of interest.
Let us now explain the special attributes of the above
inequality. We call the “rate” in the above inequality
“fast” when (2) holds. Such a “fast rate” is possible
in simple settings (e.g., when d = 1, A = Â = 1),
hence it is natural to ask whether such rates are still
possible in more general settings. The oracle inequality above is called exact because the leading constant
(the constant multiplying LM (θ)) equals to 1. When
L∗ = inf θ LM (θ) is positive (implying that the system
is inconsistent), then only a leading constant of one
can guarantee the convergence of the loss to the minimal loss, i.e., the consistency of the estimator. We call
the above inequality uniform because it holds for any
value of δ. This should be contrasted with inequalities where the range of δ is lower-bounded and/or the
estimator uses its value as input, which may be useful in some cases but falls short of fully characterizing
the tail behavior of the loss of the resulting estimator.
With some abuse of terminology, an inequality of the
above form that holds for all small values of δ shall
be also called uniform. Uniform bounds seem to be
harder to prove than their non-uniform counterparts,
and we do not know of any uniform, high-probability
exact oracle inequality with fast rates, not even in the
case of linear regression. Unfortunately, we were also
unable to derive such results.
When deriving the estimators, we shall see that a major challenge is to control the magnitude of θ̂. Indeed,
it follows from our objective function that the size of
Aθ̂ must be controlled, and when A is unknown the
magnitude of θ̂ must be controlled. This might be difficult when following a naive approach of solving Âθ = b̂
to get θ̂, e.g., when Â is singular, or near-singular (as
might be the case frequently in practice). To cope
with this issue, in this paper we study procedures built
around penalized estimators where a penalty Pen(θ) is
combined with the empirical loss L̂M (θ) = kÂθ − b̂kM .
The penalty is assumed to be some norm of θ. We
study two procedures. In the first one, the loss is combined directly with the penalty, in an additive way to
get the objective function L̂M (θ) + λkθk, while in the
second one the square of the empirical loss is combined
with the penalty: L̂2M (θ) + λkθk. Note that both objective functions are convex. We note in passing that
the second objective function when kθk is the `1 -norm

Linear statistical estimation

gives a Lasso-like procedure, but we postpone further
discussion of these choices to later sections of the paper.
In the case of both objective functions the main issue
becomes selecting the regularization coefficient λ > 0.
In this paper we give novel procedures to this end and
show that these procedures have advantageous properties: we are able to derive oracle inequalities with
fast rates for our procedures, although the inequalities
will be either exact or uniform (but not both). To
the best of our knowledge our general approach, our
procedures, analytic tools and results are novel.
The organization of the paper is as follows: in the
next section, to motivate the general framework, we
briefly describe value function estimation and how it
can be put into our general framework. This is followed by a brief section that gives some necessary definitions. Section 3 contains our main results for the
two approaches mentioned above. Section 4 discusses
the results in the context of value function estimation.
The paper is concluded and future work is discussed
in Section 5.

2. Value-estimation in Markov Reward
Processes
The purpose of this section is to show how our
results can be applied in the context of valueestimation in Markov Reward Processes. Consider a
Markov Reward Process (MRP) (X0 , R1 , X1 , R2 , . . .)
over a (topological) state space X . By this we
mean that (X0 , R1 , X1 , R2 , . . .) is a stochastic process,
(Xt , Rt+1 ) ∈ X × R for t ≥ 0 and given the history
Ht = (X0 , R1 , X1 , R2 , . . . , Xt ) up to time t, the distribution of state Xt+1 is completely determined by
Xt , while the distribution of the reward Rt+1 is completely determined by Xt and Xt+1 given the history
Ht+1 . Denote by PM the distribution of (Rt+1 , Xt+1 )
given Xt . We shall call PM a transition kernel. Assume that support of the distribution of X0 covers the
whole state space
P∞X . Define the value of a state x ∈ X
by V (x) = E [ t=0 γ t Rt+1 |X0 = x], where 0 < γ < 1
is the so-called discount factor.One central problem in
reinforcement learning is to estimate the value function V given the trajectory (X0 , R1 , X1 , R2 , . . .) (Sutton and Barto, 1998). One popular method is to
exploit that the value function is the unique solution to the so-called Bellman equation, which takes
the form T W − W = 0, where W : X → R and
T : RX → RX is the so-called Bellman operator defined using (T W )(x) = E [Rt+1 + γW (Xt+1 )|Xt = x].
Note that T is affine linear.

Given a finite sample (X0 , R1 , X1 , R2 , . . . , Xn+1 ), the
LSTD algorithm of Bradtke and Barto (1996) finds
an approximate solution to the Bellman equation by
solving the linear system
n
X
(Rt+1 + γWθ (Xt+1 ) − Wθ (Xt ))φ(Xt ) = 0

(3)

t=1

in θ ∈ Rd . Here φ = (φ1 , . . . , φd )> is a vector of d basis
functions, φi : X → R, 1 ≤ i ≤ d, and Wθ : X → R
is defined using Wθ (x) = hθ, φ(x)i. Denoting by θ̂ the
solution to (3), Wθ̂ is the approximate value function
computed by LSTD. This method can be derived as an
instrumental variable method to find an approximate
fixed point of T (Bradtke and Barto, 1996) or as a
Bubnov-Galerkin method (Yu and Bertsekas, 2010).
In any case, the method can be viewed as solving a
“noisy” version of the linear system
Aθ = b .

(4)



st
st >
st
and
Here, A = E (φ(X
t ) − γφ(Xt+1 ))φ(Xt )

st
, where (X0st , R1st X1st , R2st , . . .) is
b = E φ(Xtst )Rt+1
a steady-state MRP with transition kernel PM .3 The
linear system (4) can be shown to be consistent (Bertsekas and Tsitsiklis, 1996).4 Note that (3) can also
be writtenPin the compact form Âθ = b̂, where
n
Â = 1/n t=1 (φ(Xt ) − γφ(Xt+1 ))φ(Xt )> and b̂ =
Pn
1/n t=1 Rt+1 φ(Xt ). By thinking of Â, b̂ as “noisy”
versions of A, b and observing that for any M  0 solutions to (4) coincide with the minimizers of LM (θ) =
kAθ − bkM we see that the least-squares approach to
value function estimation can be cast as an instance of
−1
statistical
 linear inverse
 problems. When M = C ,
>
C = E φ(Xt )φ(Xt ) , LM (·) becomes identical to
the so-called projected Bellman error loss which can
also be written as LM (θ) = kΠφ,µ (T Wθ − Wθ )kµ,2 ,
where µ is the steady-state distribution underlying
PM , k · kµ,2 is the weighted L2 (µ)-norm over X and
Π : L2 (X , µ) → L2 (X , µ) is the projection on the linear space spanned by φ with respect to the k·kµ,2 -norm
(Antos et al., 2008).
Note that under mild technical assumptions (to be
discussed later) one can show that (Ân , b̂n ) = (Â, b̂)
gets concentrated around (A, b) at the usual parametric rate as the sample size n diverges. Thus, we can
indeed view Â, b̂ as “noisy” approximations to (A, b).
3

The MRP is said to be in a steady-state if the distribution of Xt is independent of t.
4
For a discussion of how well Wθ∗ approximates V the
reader is directed to consult the paper by Scherrer (2010)
and the references therein. In this paper, we do not discuss this interesting problem but accept (4) as our starting
point.

Linear statistical estimation

One variation of this problem, the so-called off-policy
problem, gives further motivation to recast the problem in terms of a loss function LM (·) to be minimized.
In the off-policy problem the data comes in the form
of triplets, ((X0 , R̃1 , X̃1 ), (X1 , R̃2 , X̃2 ), . . .), where the
distribution of (R̃t+1 , X̃t+1 ) is again independent of
Ht = ((X0 , R̃1 , X̃1 ), (X1 , R̃2 , X̃2 ), . . . , (Xt−1 , R̃t , X̃t ))
given Xt and is equal to the transition kernel PM . Further, it is assumed that (Xt )t≥0 is a Markov process.
The previous setting (also called the on-policy case)
is replicated when X̃t = Xt , thus this new setting is
more general than the previous one. The straightforward generalization
h of the least-squares approach
i is
st
to define A = E (φ(Xtst ) − γφ(X̃t+1
))φ(Xtst )> and
h
i
st
b = E R̃t+1
φ(Xtst ) for the “steady-state” process
st
st
(Xtst , R̃t+1
, X̃t+1
)t≥0 . In this case, the linear system Aθ = b is not necessarily consistent but one
can still aim for minimizing (for example)
Pn the projected Bellman error. Using Â = 1/n t=1 (φ(Xt ) −
Pn
γφ(X̃t+1 ))φ(Xt )> and b̂ = 1/n t=1 R̃t+1 φ(Xt ) we
can again cast the problem as a statistical linear inverse problem.

3. Results
In this section we give our main results for statistical
linear inverse problems. We start with a few definitions. For real numbers a, b, we use a ∨ b to denote
max(a, b). The operator norm of a matrix S with respect to the Euclidean norm k · k2 is known to satisfy
kSk2 = νmax (S). In what follows, we fix a vector norm
k · k. Define the errors of Â and b̂ with the following
respective equations: let
1
1
.
.
∆A = kM 2 (A − Â)k2,∗ , ∆b = kM 2 (b − b̂)k2 , (5)

where kXk2,∗ denotes the operator norm of matrix X
with respect to the norms k · k2 and k · k, meaning that
kXk2,∗ = supv6=0 kXvk2 /kvk.
Although our main results are oracle inequalities, it
will also be interesting to name a minimizer of LM (θ)
to explain the structure of some bounds. For this,
we introduce θ∗ ∈ Rd as a vector such that θ∗ ∈
arg minθ∈Rd LM (θ) where if multiple minimizers exist
we choose one with the minimal norm k · k. 5

suitable high-probability bounds on ∆A and ∆b are
available:
Assumption 3.1. There exist known scaling constants sA , sb > 0 and known “tail” functions zA,δ , zb,δ ,
δ ∈ (0, 1] s.t. for any 0 < δ < 1, the following hold
simultaneously with probability (w.p.) at least 1 − δ:
∆A ≤ sA zA,δ ,

∆b ≤ sb zb,δ .

To fix the scales of these bounds, we restrict zA,δ , zb,δ
so that zA, 1e = zb, 1e = 1, where e is the base of natural
logarithm.
The reason to have two terms on the right-hand side
in the above inequalities as opposed to having a single
term only is because we wish to separate the terms
attributable to δ and the sample size. The intended
meaning of sa (and sb ) is to capture how the errors
behave as a function of the sample size n (typically, we
expect sA , sb = O(n−1/2 )), while the terms zA,δ , zb,δ
capture how the errors behave
p as a function δ (e.g.,
they are typically of size O( ln(1/δ))). In particular,
sA , sb should be independent of δ and zA,δ , zb,δ should
be independent of the sample size. This separation
will allow us to distinguish between uniform and nonuniform versions of our oracle inequalities.
3.1. Minimizing the unsquared penalized loss
In this section, we present the results for the unsquared
penalized loss. Choose k · k to be some norm of the
d-dimensional Euclidean space. For λ > 0, define
o

θ̂λ ∈ arg min L̂M (θ) + λkθk ,
(6)
θ∈Rd

where L̂M (θ) = kÂθ − b̂kM . Our first result gives an
oracle inequality for θ̂λ as a function of ∆A and ∆b .
Lemma 3.2. Consider θ̂λ as defined in (6). Then,
h
i

LM (θ̂λ ) ≤ 1 ∨ ∆λA inf LM (θ) + (∆A + λ)kθk
θ∈Rd


+ 2 ∨ 1 + ∆λA ∆b .

In general, ∆A , ∆b are unknown. As it will turn out, in
order to properly tune the penalized estimation methods we consider, we need at least upper bounds on
these quantities (in particular, on ∆A ). To stay independent of sampling assumptions, we assume that

The proof, which is attractively simple and thus elegant, is given in the appendix. The result suggests that
the ideal choice for λ is ∆A . Since ∆A is unknown,
we use its upper bound to choose λ. Depending on
whether we allow λ to depend on δ or not, we get a
non-uniform or uniform oracle inequality. In all cases,
the rate in the oracle inequality will be fast. We start
with the uniform version, non-exact version.

5
Since our loss function is convex one can always find
at least one minimizer.

Theorem 3.3. Let Assumption 3.1 hold and consider
θ̂λ as defined in (6) where λ = sA . Then, for any

Linear statistical estimation

0 < δ < 1, w.p. at least 1 − δ it holds that
h
i
LM (θ̂sA ) ≤ zA,δ · inf LM (θ) + sA (1 + zA,δ )kθk
θ∈Rd

+ sb (1 + zA,δ )zb,δ .
By allowing λ to depend on δ, we get an exact, nonuniform oracle inequality with a fast rate:
Theorem 3.4. Let Assumption 3.1 hold. Fix 0 <
δ < 1 arbitrarily and choose θ̂λ as defined in (6) with
λ = sA zA,δ . Then, w.p. at least 1 − δ it holds that
h
i
LM (θ̂sA zA,δ ) ≤ inf LM (θ) + 2sA zA,δ kθk + 2sb zb,δ .
θ∈Rd

Note that this bound is as tight as if we had first chosen
λ = ∆A and then applied the stochastic assumptions
to obtain a high probability (h.p.) bound.
When the linear system defined by (A, b) is consistent,
LM (θ∗ ) = 0. In this case one may prefer Theorem 3.3
to Theorem 3.4. Indeed, focusing on the behavior at
θ∗ we get from Theorem 3.3 the bound sA zA,δ (1 +
zA,δ )kθ∗ k + sb (1 + zA,δ )zb,δ that holds w.p. 1 − δ for
any value of δ, while from Theorem 3.4 we conclude the
bound 2sA zA,δ0 kθ∗ k + 2sb zb,δ0 , which however, holds
only for δ 0 ≥ δ.
3.2. Minimizing the squared penalized loss
A more “traditional” estimator uses the square of the
empirical loss function:
n
o
θ̂ρ = arg min L̂2M (θ) + ρkθk ,
ρ > 0.
(7)

We now have two parameters that need tuning. However, as we will see, the tuning of these parameters is
very similar to what we have seen in the previous section. The reason for this is that Λ is rich enough to
contain a value ρ that makes L̂M (θ̂ρ )+ρkθ̂ρ k comparable to (not much larger than) L̂M (θ) + λkθk no matter
what θ one selects. This is in fact the key to the proof
of the following lemma, which gives a deterministic
oracle inequality for θ̃λ,c :
Lemma 3.5. Let θ̃λ,c be as in (9). Then,
h
i

LM (θ̃λ,c ) ≤ 1 ∨ ∆λA inf LM (θ) + (∆A + 2λ)kθk
θ∈Rd



+ 2 ∨ 1 + ∆λA ∆b + 1 ∨ ∆λA c.
With the (unattainable) choice λ = ∆A , c = ∆b we get
h
i
LM (θ̃λ,c ) ≤ inf LM (θ) + 3∆A kθk + 3∆b .
θ∈Rd

These choices are impractical but, as it happened with
in the previous section, we can obtain uniform nonexact or non-uniform exact oracle inequalities with fast
rates. The non-exact uniform oracle inequality is formalized as follows:
Theorem 3.6. Let Assumption 3.1 hold and choose
θ̃λ,c be as in (9) with λ = sA and c = sb . Then, for
any 0 < δ < 1 w.p. at least 1 − δ it holds that
h
i
LM (θ̃λ,c ) ≤ {1 ∨ zA,δ } inf LM (θ) + sA (zA,δ + 2)kθk
θ∈Rd

+ {2 ∨ (1 + zA,δ )} sb zb,δ + {1 ∨ zA,δ } sb .

θ∈Rd

To be able to handle Lasso-like procedures, we decided
to avoid squaring the norm of θ. Moreover, not squaring this term is convenient for the proof techniques we
used. The extension of our results for other types of
penalties, in particular kθk2 , is left for future work.
Unlike the previous case where the loss function and
the norm were both unsquared, in this case the selection of the regularization parameter ρ will be more
involved. In practice, one often uses a hold-out estimate to choose the best value of ρ amongst a finite
number of candidates on an exponential grid. Here,
we propose a procedure that avoids splitting the data,
but uses the unsquared penalized loss with the same
data. The new procedure is defined as follows. For
some λ, c > 0 to be chosen later, let
n
o
ρ̂(λ, c) ∈ arg min
L̂M (θ̂ρ ) + λkθ̂ρ k ,
(8)
ρ∈Λ(λ,c)

. 
where Λ(λ, c) = 2k · 2cλ : k ∈ N
.
θ̃λ,c = θ̂ρ̂(λ,c) .

and define
(9)

The next theorem gives a non-uniform, exact oracle
inequality with fast rates.
Theorem 3.7. Let Assumption 3.1 hold. Fix 0 < δ <
1 and choose θ̃λ,c be as in (9) with λ = sA zA,δ and
c = sb zb,δ . Then, w.p. at least 1 − δ it holds that
h
i
LM (θ̃λ,c ) ≤ inf LM (θ) + 3sA zA,δ kθk + 3sb zb,δ .
θ∈Rd

The relative merits of the uniform and non-uniform
oracle inequalities are unchanged compared to what
we have seen in the previous section.

4. Value-estimation in Markov Reward
Processes: Results
Let us now return to value-estimation in Markov Reward Processes. We consider the projected Bellman
error objective, LM (θ) = kAθ − bkM , where M = C −1
(for the definitions see Section 2). Assume that ∆A ,
∆b are concentrated as in Assumption 3.1, with known

Linear statistical estimation

bounds. This can be arranged for example if the features φi (Xt ) and rewards Rt+1 are a.s. bounded, and
if we assume appropriate mixing, such as exponential β-mixing (Yu, 1994), or when the Markov chain
(Xt )t≥0 forgets its past sufficiently rapidly (Samson,
2000). Note that in these cases (Â, b̂) gets concentrated around
rate, i.e.,
p
p (A, b) at the usual parametric
sA , sb = O( 1/n) and zA,δ , zb,δ = O( ln(1/δ)).
For simplicity, assume first that C is given and consider the on-policy case. As mentioned previously, in
this case the system Aθ = b is guaranteed to have a
solution and therefore LM (θ∗ ) = 0. Consider the estimator that minimizes the unsquared penalized loss.
Then, Theorem 3.3 shows a uniform fast rate when
using λ = sA :
h
i
LM (θ̂sA ) ≤ (1 + zA,δ ) sA zA,δ kθ∗ k + sb zb,δ .
We get a similar inequality for the squared penalized
loss using the result Theorem 3.6 with a slightly larger
bound.
In the off-policy case, the linear system Aθ = b may
not have a solution. When it does, the previous bound
applies. However, when this linear system does not
have a solution, to get an exact oracle inequality we
are forced to choose λ (in the case of minimizing the
unsquared penalized loss) based on δ. In particular,
with the choice λ = sA zA,δ , Theorem 3.4 gives
h
i
LM (θ̂sA zA,δ ) ≤ inf LM (θ) + 2sA zA,δ kθk + 2sb zb,δ .
θ∈Rd

(10)
p
Again, this p
inequality gives fast, O( 1/n) rates when
sA , sb = O( 1/n). Similar results hold for the procedure defined for the squared penalized loss where the
bound is given by the inequality of Theorem 3.7.
When C is unknown, one may resort replacing it by
M  0. Then, a non-exact oracle inequality can be
derived using kxk2P ≤ νmax (Q−1/2 P Q−1/2 )kxk2Q . (For
a matrix S, we denote by νmax (S), νmax (S) its largest
and smallest singular values, respectively.) Consider
first the unsquared penalized loss. In this case, kAθ −
1/2
bkC −1 ≤ νmax (M −1/2 C −1 M −1/2 )kAθ − bkM . Assume
thathfor an estimator θ̂ iti holds that kAθ − bkM ≤

inf θ kAθ − bkM + cÂ,b̂ (θ) . Then, from kAθ − bkM ≤
1/2

νmax (C 1/2 M C 1/2 )kAθ − bkC −1 we get
h
i
kAθ̂ − bkC −1 ≤ inf κ1/2 kAθ − bkM + τ −1/2 cÂ,b̂ (θ) .
θ

where κ = νmax (C 1/2 M C 1/2 )/νmin (M 1/2 CM 1/2 ) is
the “conditioning number” of M 1/2 CM 1/2 and τ =

νmin (M 1/2 CM 1/2 ). In the on-policy case, for example, this gives bounds of the form
h
i
LM (θ̂sA ) ≤ τ −1/2 (1 + zA,δ ) sA zA,δ kθ∗ k + sb zb,δ .
The bound for the off-policy case derived from (10)
takes the form
LM (θ̂sA zA,δ ) ≤
h
i
inf κ1/2 LM (θ) + 2τ −1/2 sA zA,δ kθk + 2τ −1/2 sb zb,δ .
θ∈Rd

Similar inequalities can be derived for our procedures
that minimize the squared penalized loss.
Finally, let us discuss the dependence of our bounds
on the choice of the basis functions. This dependence
comes through Assumption 3.1. As an example, assume that φi : X → [−1, 1] and k · k = k · kp with
1 ≤ p ≤ 2. In this case, the bound on ∆A is expected
to scale linearly
√ with d, while ∆b is expected to scale
linearly with d. To see why ∆A is expected to scale
linearly with d note that ∆A ≤ kM 1/2 (Â − A)k2,2 =
kM 1/2 (Â − A)kF , where k · kF denotes the Frobenius
norm. Now, the Frobenius norm is the norm underlying the Hilbert-space of square matrices with the inner product hP, Qi = trace(P > Q) and thus an application of any concentration inequality for Hilbertspace valued random variables (e.g., (Steinwart and
Christmann, 2008)) gives a bound that scales with the
“range” of N = kM 1/2 (φ(Xt ) − γφ(X̃t+1 ))φ(Xt )> kF .
Using the rotation property of trace, we get that
N = kφ(Xt ) − γφ(X̃t+1 )kM kφ(Xt )k. The first term
can be bounded using the triangle inequality as a
function of kφ(Xt )kM and kφ(X̃t+1 )kM . Assuming
(e.g.,) that M is the identity matrix, we get that
both
√ kφ(Xt )kM = kφ(Xt )k and kφ(X̃t+1 )k are of size
O( d). Hence, their product scales linearly with d.
The above bound on ∆A is naive; we believe using
∆A ≤ νmax (Â − A) may yield a tighter dependency on
d. E.g., for d × d-matrices with i.i.d standard
normal
√
entries, the maximum eigenvalue is O( d) (Vershynin,
2010). Furthermore, note that if the basis functions
are correlated, or if they are sparse, the dimension
will not necessarily appear linearly in the bound either. For a discussion of when to expect a milder dependence of the norm of φ on d, the interested reader
may consult the paper by Maillard and Munos (2009).
4.1. Related work
Antos et al. (2008) proved a uniform high-probability
inequality both for the on-policy and the off-policy
cases for LSTD.
takes the form LM (θ̂) −
 Their bound
1 
1 4
∗
LM (θ ) = O d ln(d) n
, which is a slower rate

Linear statistical estimation

than the rate we are able to obtain. Further, with our
bounding method the ln d factor can be removed from
this bound.
There are more results available for the on-policy case.
As mentioned earlier, in this case the system Aθ = b
is consistent and thus our bound, under appropriate
mixing conditions, takes the form
!
r
d
(1 + R) ,
LM (θ̂) = O L
τn
1
1
.
where τ = νmin (M 2 CM 2 ), L is the worst-case norm
.
of features in the dual norm (L = √
supx∈X kφ(x)k∗ ;
as discussed previously, L may be O( d)) and R is a
worst-case bound on the norm of the parameter vector
(i.e., kθ∗ k ≤ R). In the next two results, the norm k · k
is the 2-norm. Lazaric et al. (2010) for their (unregularized) path-wise LSTD method obtain
!
r
d log d
(1 + R)
LM (θ̂) = O L
nτ

(cf. Theorem 3 in their work). Although this is a
fast rate, it also shares the undesirable dependence
on τ1 . Non-uniform, slow rates can be extracted from
the paper by Ghavamzadeh et al. (2010) for LSTD
with random projections. The result with our notation
would look like (cf. Theorem 2)
!
r
  14
1
log
d
LR
LM (θ̂) = O L2
.
R+ √
τ
n
n
More recently, for the so-called Lasso-TD method,
Ghavamzadeh
et al. (2011) showed non-uniform
 1 
1 4
O n
-rates, but only for the so-called in-sample
error, i.e., the empirical norm at the states used by the
algorithm. These rates depend on the `1 -norm of θ∗
and have no dependence on the minimum eigenvalue,
but they are slow in n. At the expense of additional
assumptions on the Gram matrix Ĉ (a sample estimate
of C), they have also derived fast rates.

5. Conclusion and future work
We have shown performance bounds for two estimators in linear inverse problems. Each of these minimizes one of LM (θ) and L2M (θ), plus a penalty λkθk.
The penalty weight λ can be chosen a priori without
the need for a separate validation data set, and the
bounds were presented in a general form that apply
to many different instances of statistical linear inverse
problems, requiring only that ∆A and ∆b concentrate
around zero. Our split analysis, into a deterministic

step and a stochastic step, allows us to decouple the
behavior of ∆A , ∆b from that of the estimators.
We have recovered `1 -penalized variations of LSTD
(Bradtke and Barto, 1996) for value function estimation in MRPs. We have shown fast, uniform rates,
which, in the on-policy case, are exact and competitive
with those existing in the literature. In the off-policy
case, the rates are non-exact, and the non-uniform
bound is also competitive with existing results.
Finally, we would like to point out interesting ways to
further develop our work.
`1 -penalties. The choice when the norm used in
the penalty is the `1 -norm has been extensively studied in the supervised learning literature (see, e.g.,
(Bickel et al., 2009; Koltchinskii, 2011; Bühlmann and
Geer, 2011) and the references therein), as well as
in the reinforcement learning setting (Kolter and Ng,
2009; Ghavamzadeh et al., 2010; 2011; Maillard, 2011),
mainly because it allows for non-trivial performance
bounds even when the dimension d of the parameter
vector is comparable to the sample size n (or even
larger than n) provided that the true parameter vector is sparse (i.e., there are many zeroes in it). In this
paper we decided not to specialize to this case but
rather to focus on the problem of proving fast, exact
and (possibly uniform) oracle inequalities. Our results,
when applied to the case of an `1 -penalty show that in
a way adding an `1 -penalty does not hurt performance
(as we expect that the oracle inequalities with the said
properties should hold for a decent method) even if the
conditions ideal for the `1 -penalty do not hold. We do
not know of performance bounds (ours included) for
`1 -penalized estimation have all of the characteristics
we are after in a bound (viz. bounds that are exact,
fast and uniform).
Linear regression. Our results are also worth investigating in the context of linear regression. It is easy to
cast regression as a statistical linear estimation problem whose underlying system is always consistent. If
we use k · k as the `1 -norm, we recover procedures similar to the square-root Lasso (Belloni et al., 2010) and
the Lasso (Tibshirani, 1996) for the estimators studied
in Sections 3.1 and 3.2, respectively. We believe that
confronting the bounds that can be derived from our
results with bounds for linear regression in the literature can be very instructive.
Connection to Inverse Problems. The theory of
Inverse Problems is very pertinent to this work, and
it is important to study our results under the light of
those shown in Chapter 2 of Kirsch (2011); Alquier
et al. (2011). The existing knowledge of inverse prob-

Linear statistical estimation

lems may help us better understand which choices of
k·k allow ∆A to concentrate around zero, and how fast
this concentration occurs. The idea of having learning problems as inverse problems is not new; Rosasco
(2006); Vito et al. (2006) study regression in Hilbert
spaces as an inverse problem.

Acknowledgements
This work was supported by AITF and NSERC.

