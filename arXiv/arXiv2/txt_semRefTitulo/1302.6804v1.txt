

level, with the condition that violating however many
formulas at a given level is always more acceptable

Penalty logic, introduced by Pinkas

[17],

than violating only one formula at a strictly higher

as­

sociates to each formula of a knowledge base

level:

the price to pay if this formula is violated .

e.,

z.

Penalties may be used as a criterion for se­

apparently very appealing (besides it has already been

consistent knowledge base, thus inducing a

used several times in the literature) consists in weight­

A pre­

ing formulas with positive numbers called

cise formalization and the main properties
of penalty logic and of its associated non­

since they are

additive:

ties of the rejected formulas. Moreover, inviolable (or
unrejectable) formulas are given an infinite penalty.
The additive combination of penalties leads to an in­

pecially in the infinitesimal case.

terpretation in terms of

itarist,

Introduction
appears when

the available knowledge base - KB for short - (here
a set of propositional formulas) is inconsistent. Most
approaches come up with the inconsistency by select­
ing among the consistent subsets of KB some

preferred

subsets; the selection criterion generally makes use of
uncertainty considerations, sometimes by using explic­
itly uncertainty measures (such as W ilson
ferhat and Smets

[2)),

expressed qualitatively as
back to Rescher

[20] and

priorities

(the idea comes

[3],

Nebel

[16],

Benferhat, Cayrol, Dubois, Lang, Prade

Lehmann

[14]).

Ben­

has been developed by many

authors, among them Brewka

[4],

[2 7 ] ,

or more often using measures

Cayrol

[1]

and

Although these priorities are gener­

ally not given a semantics in terms of uncertainty mea­
sures (however see

[1]

for a comparative study of the

priority-based and possibilistic approaches to inconsis­
tency handling), their intuitive interpretation is clearly
in terms of gradual uncertainty: the least prioritary
formulas

( i.e., the

ones which are most likely to be re­

jected in case of inconsistency) are clearly the ones we
are the least confident in, i.e., the least certain ones.

cost,

thus this criterion is

util­

contrarily to priority-based approaches which

are rather

inconsistency handling

the global penalty for rejecting

a set of formulas is the sum of the elementary penal­

first part. We also show that penalty logic
and Dempster-Shafer theory at·e related, es­

The problem of

penalties.

Contrarily to priorities, penalties are compensatory

monotonic inference relation are given in the

1

non-compensatory,

An alternative approach, more or less empirical but

lecting preferred consistent subsets in an in­
non-monotonic inference relation.

thus these approaches are

levels never interact.

egalitarist.

This additive criterion is very in­

tuitive, since rejecting a formula generally causes some
"additive" trouble with the experts which provided the
f{ B with the formulas, or some real financial cost, or

another kind of additive cost. Note that a degenerate
case of penalties (all penalties being equal to

1) prefers

subsets of maximum cardinality. Moreover, and as we
will see later, these penalties can sometimes be inter­
preted as the "probability of fault" of the source which
provided us with the information (all sources failing in­
dependently), up to a logarithmic transformation. In
any case, these penalties can be viewed as measuring

uncertainty

since, again, the less expensive to reject,

the more uncertain the piece of information.
penalty logic

Thus,

expresses uncertainty in terms of costs.

However a formal connection of penalties with classical
theories of uncertainty has not really been made.
Penalty-based approaches have been already used sev­
eral times in the literature, first by Pinkas

91 [17] (from

whom we borrowed the terminology "penalty") who
uses them for inconsistency handling and for mod­
elling symmetric neural networks behavior, and also

All aforementioned priority-based approaches consist

by Eiter and Gotlob 94 [10] for cost-based abduction,
by Sandewall 92 [21] for cost-based minimization of

the set

Satisfaction Problems. Moreover, penalties associated

in ranking the f{ B in n priority levels (assume that 1
is the highest priority and n the lowest) and maximize

or

the number of formulas satisfied at each

surprises in temporal reasoning and by Freuder and
Wallace

[12]

for tackling inconsistencies in Constraint

Penalty Logic and its Link with Dempster-Shafer Theory

to formulas have also been used for guiding the search
in randomized algorithms dedicated to the satisfiabil­
ity problems, such as GSAT [23, 22].

Lastly, there

should clearly be a link between penalties and utility
theory (the latter has been recently used in AI, espe­
cially in decision-theoretic planning - see e.g. [18]);
however, in this paper we do not investigate this pos­
sible link.

205

Since PK is a multi-set of pairs (and not a. set), it. is
possible for a pair{'{), a:) to appear several times in PI\;

for example, PK = {{a, 1), {a, 1)} is not equivalent to
PK' = {{a, 1}} since using PK, it costs 2 to delete a
'
and using P K , it costs only 1.
However, as we will see in 2.1.4, if a formula'{) appears
several times in PK then we may replace all the occur­
rences of the formula 'P by only one occurrence of 'P

In this paper we revisit penalties by giving a further

formalization of Pinkas' work; we also go further in the

annotated with the sum of the penalties associated to
this formula in the previous base. The new knowledge

theoretical study of penalty-based inconsistency han­

base obtained is equivalent to the initial base.

dling and non-monotonic reasoning.

We briefly give

a formalization in penalty logic of an additive
problem. Lastly, we establish

a

O.R.

link between penalties

and Dempster-Shafer theory; this link is twofold: first,
the penalty function (on interpretations) is equivalent,
up to a log- transformation, to a contour function (i.e.,
the plausibility function restricted to singletons); then
penalty functions on formulas coincide with plausibil­
ity functions of an infinitesimal t'ersion of Dempst.er­
Shafer theory.

2

based on a finite number of propositional variables. T

.2' wi ll be writt e n '{), 1j!, etc.
The set of interpretations attached to .2' will be de­
noted by n, and an interpretation by w. 'P F= 1/! and
Formulas of

'P f=l'lj! will represent logical consequence and logical
equivalence between the formulas

I==

'P and 1/! respectively.

will also be used between an interpretation and a
formula to denote satisfiahility. The set of models of
a formula 'P will be denoted by M ( 'P); the set of for­
mulas of .2' satisfied by w, i.e., {'P I w I== 'P} will be
denoted by [w].

A classical knowledge base 91 is a set of formulas of
.2'. A sub-theory of 91 is a consistent subset of §9. A

§9 is a consistent subset of 91
T, T U { 'P} is inconsistent. Given

maximal sub-theory T of
such that 'if'{) E 91 \

a formula 1/!, T is said 'ljl-consistent iff T U { 1j!} is c o n­
sistent; Tis maximal'lj!-consistent if it is 1/J-consistent

and V'P E §9 \ T, T U { '{), 1/!} is inconsistent. w+ will
be the union of the set of all the strictly positive real
particular, if

{ +oo}, equipped with the usual order
#- +oo then a: < +oo).

a:

(in

A penalty knowledge base PK is a finite multi-set of
pairs {'P;, a:; ) where '{); E .2' and a:; E w+. a; is the
penalty associated to 'Pi; it represents intuitively what
we s hould pay in order to get rid of 'Pi, if we pay the

requested price we do not need any longer to satisfy
'Pi; so the larger

a:;

In particular, if a:;

move

the p en al ti es ex;). Also, in the expressions sub-theory of
PK, subset of PK and PK \A we will refer to the set of

is, the more important 'Pi is.

:::

Cost of an interpretation

Let PK

and .l will represent taut ology and contradiction re­

numbers and

Lastly, we will say that PK E !JlJc is co nsistent if the set
of formulas 'Pi of PK is consistent ( without mentioning

=

{{'{);,a:;},i =

1

.. . n}

be a penalty knowl­

edge base.

following, .2' will be a propositional language

spectively.

violated).

2.1.1

Formal definitions

In the

logic comes down to classical logic (no formula can be

formulas obtained from PK by ignoring the pena.lties.

Penalty logic

2.1

91c will be the set of all the penalty knowledge bases.
Note that when the penalties are all infinite, penalty

+oo then it is forbidden to re­

i.p; from PK ('Pi is inviolable).

Definition 1 (Pinkas 91 [17]) The cost of an in­
w E Q with respect to PK , denoted by
kpK(w ), is equal to the sum of the penalties of the for­

terpretation

mulas zn PK violated by

(with

the

w:

corn,enfion L:1P,E0 a:;= 0)

Definition 2 A PK-preferred interpretation is an in­
terpretation of minimal cost w.r.t. PK, i.e. an inter­
pretation minimizing

kpl(.

As an example, let us consider the following penalty
k n owledge base P K1:

'PI =a
y2 =b v c
y3 = -.b
'P4 = -.c

0:1 = +oo
0:2

= 10
=5
0:4 = 7
0: 3

Here are the corresponding interpretations costs:

kpr<, ({-,a, b, c})
kpr<, ( {...,a, b, .....,c})
kpK,({a ,-,b,--.c})
kpK,({a,b,-.c})
kpK,({a,•b,c})
kPK,({a,b,c})

kpK, ({ •a, •b,c}) = +oo
kpK, ({ •a, •b, •c}) = +oo
10

5
7

5 + 7=

12

If the interpretations are decisions to make (for exam­
ple if the knowledge base is made of constraints con­
cerning the construction of a timetable), then a min­
imum cost interpretation corresponds to the cheapest

206

Dupin de Saint-Cyr, Lang, and Schiex

decision, i.e., the most interesting one. The cheapest
interpretation is generally not unique. Besides, if the
penalties are all equal to 1 then a cheapest interpreta­
tion satisfies a maximum consistent subset of PK w .r. t.
cardinality.
2.1.2

Cost of consistency of a formula

3 The cost of consistency of a formula r.p
with respect to PK, denoted by f{PK(cp), is the mini­
mum cost with respect to PK of an interpretation sat­
isfying r.p:
KpK(C,O) =min kpK(w)

Definition

wi='P

(with the convention min0 kPK(w)

=

+oo)

Example:

f{PK1 (a!\ b)
KpK,(a-+c)
KPK,(-.a)

7
+oo

KpK('f') of a formula r.p, is the minimal price
to pay in order to make PK consistent with cp. For
example, in order to make PK1 consistent with a -+ c,
the least expensive way is to remove r,o4.
+oo and J(PK ( T)

1 J(PK(l..)
minwEn{kPK(w)}

All proofs can be found (in French) in Dupin de Saint­
Cyr, Lang and Schiex 94 [8] and in Dupin de Saint-Cyr
93 [7).

KPK(l_) = +oo is easy to understand, because it is
impossible to have PK consistent with 1... Let us note
that /(pK ( T) is the cost of any PK-preferred inter­
pretation; it is thus the mini mum cost to make PK
consistent.
Property 2

KpK(T)

is inconsistent.

=

+oo

¢}

{cp;

E

PK,a;:::: +oo}

This quantity KPK(T) is important, because it mea­
sures the strength of the inconsistency of PK (i.e., how
expensive it will be to recover the consistency). If the
penalties are all equal to +oo then KpK(T) can only
take two values: 0 if and only if PK is consistent, and
+oo if and only if PK is inconsistent.
Example: J(PK, (T) = 5; the only minimum cost in­
terpretation is {a, b, -.c}. To make PK1 consistent, the
least expensive solution is to take off (or to ignore) the
formula 'f'3·
Property

3 /(pK(T)

=

1.

Property 4 'Vi.p, ¢ E .!f,

(cp f= ¢)

:::::}

KpJ<('P) 2:

'Vr,o, ¢

E

2:

KPK(IO !\ ¢) 2: max(I{pK('P), Kpr<(?/;))

2. KpK(\0

V

¢)

= mi n(KP K ( cp ) ,

KpK(¢ ))

3. f<pK(l..) 2: /{pK(IO) 2: f{pK(T)

Note that, up to its interval of definition and its or­
dering convention w.r.t. Proposition 5 (((0, +oo), ::::)
instead of ((0, 1), S)), /{pK is actually a possibil­
ity measure. Note also that Spohn's ordinal condi­
tional functions x: verify property 2 1. e. x:( A U B) =
min(x:(A), x:(B)) [26).
Cost of a sub-theory

Definition 4 (Pinkas 91 [17J) The cost CPK (A) of
a sub-theory A of PK, is the sum of the penalties of
the formulas of PK that are not in A:

{!f'.,<:>,)EPK\A
For instance, considering the knowledge base PK1,
given A1 = {i.pl,i.p2,'P3} and A2 = {r,o2,i.p4}, we have
CPK1 (Al) = a4 = 7 and CpK1 (A2) = 0:1 + a3 = +oo.
Definition 5

'VA, B � PK,

B 2:PK A (B is preferred to A) ifJCPK(B) S CPK(A).
'VA, B � PK , B >h A if and only if B 2:PK A and
not A 2:PK B.
Definition 6 (Pinkas 91 [17]) A � PK
ferred sub-theory relatively to PK

is

a

pre­

(or 2:PK­
preferred) if and only if A is consistent and ,3 B � PK ,
such that B is consistent and B >f,K A.

Note that there may be several preferred sub-theories
(in the previous example, { cp1, 'P2, 1p4} is the only one

2:PK1-preferred sub-theory).
Property 6

'VPK

E

fflc,

If J<pK(T) ::f +oo, then any 2:PK -preferred sub-theory
is a maximal sub-theory of PK w. r.t. inclusion.
•

0 ¢} PK is consistent.

Indeed, if KpK(T) = 0 then there is no need to delete
any formula in order to make PK consistent, therefore
PK is consistent (and conversely).

KPK(?/;)

Property 5

2.1.3

5

The cost

Property

This property is the monotonicity of K with respect to
classical entailment.

•

Let us notice that when KPK(T) = +oo, every
sub-theory of PK has an infinite cost, therefore
every sub-theory of PK is 2:PK-preferred, but ob­
viously every sub-theory is not necessarily maxi­
mal w.r.t. inclusion.
Besides, if PK is consistent, then I<PK(T) = 0,
and then the only >pK-preferred sub-theory of
PK is PK itself (its Zost is 0).

Example (continued): A3 = {r,ol,'f'2,'P4} is a 2:PK,­
preferred sub-theory and it is maximal w.r.t. inclusion.

207

Penalty Logic and its Link with Dempster-Shafer Theory

But, although {cp2,cp3,cp4} is a maximalsub-t.heory of
PK1 (w.r.t. inclusion), it is not 2:-PK,-preferred (be­
cause its cost is infinite).

If we add the formula

(cps

=

-,a, a5

=

+oo}

to

PK1

Besides, we define a pre-ordering relation <<c
as follows:
Definition 9

then the subset of infinite cost formulas is inconsistent,
therefore every sub-theory has an infi ni t e cost, and
a

every sub-theory is

preferred

PK

interpretation
cost of the sub­

theory of PK composed of all the formulas satisfying

w:

As

PK4

an example,

PK n

7.2 A is a maximal sub-theory of PK
Vw f= A, kpK(w) = CPK(A).
Corollary

7.3 KPK('P) is equal to the
of a 10-consistent sub-theory of PK:

Corollary

of a formula

minim11m cost

cp wit h respect to the

base PK is the cost of a cp-consist.ent

sub-theory of

=>

min
CrK(A)
.
A<;PI<,A '1"-conH•tent

Therefore, the cost

PK.

2:rK-preferred

7.4 VA � PK,

Corollary

A

is

a
¢::>

(cf. corollary

Definition

7.3,

2:PK -preferred sub-theory

KPK(T)

=

with cp =

7 Add(PK, cp)

CpJ<(A).

T).
=

PK U { (<p, +oo)}

10

ta.b}
_ia,-.bl
J-.a, bl
l...., a,...., bl

Therefore, the cost to make the knowledge base consis­
tent with a given formula, can be computed by adding
with

an

infinite penalty and then evalu­

ating the cost of the new knowledge base consistency.

Two

alent

Equivalence between penalty
knowledge bases
k n o w ledge bases are .semantically equiv­
if they i n d u ce the same cost function on 0, i.e.:

penalty

Definition 8 VPK, PK' E !fie,
PK �c PK'

PK:J, PK3
as

.

,

0

10
8
18

and

follows:

b

10

0

10
8

18

the fol­

0

18
18
18

So we have PK2 �c PK3 and PK3 «c
is not equivalent to PK4).

PI\4

(but Pl\3

N.B.: the previous example shows th at it is impos­
sible to transform equivalently a penalty knowledgr

base containing several non-equivalent formulas in a
penalty knowledge base containing the conjunction of
those formulas.

But, if a knowledge base contains se1'eral times the
same form1tla (or an eq11ivalent on e), it is possible to
transform it equi1•alent/y in a knowhdge base contain­
ing this formula only one time with a penalty equal to
the sum of the penalties of this form.ula in the prel•ious
base.
Property 9 VPK, PK' E :JlJc,

PK

2.2

2.1.4

consider

�c

PK'

=>

A{cpiJ�;

E

PK} f=ll\ {'PiliPi

E

PK'}

The con verse is obviously false.

Property 8

this formula

b

3

w

2:-PK·preferred sub-theory with respfCI to
all the sub-theories of PK

=

us

lowing:

<=>

KpK(rp)

let

The cost func t i ons incluceu by those bases are

E 0,

has a minimal cost U.'.r.f. PK

a

[w] is

less expensive than PK ')
$ kpK'

the penalty knowledge bases defined
PK2 :
PKa :
PI-.:4 :
a
5
18
a
8
a 1\

b

w

is

E !Jic,

¢:> kpK

a

Vw

PK' (PK

sub-theory.

Property 7 The cost kpK(w) of an
w E 0 with respect to PK is equal to the

Corollary 7.1

«c

VPK, PK'

on 5!�

(l>K is semantically equivalent to PK ')
{:::>

kpi<

==

kpw.

Inconsistency handling with penalty logic

Using penalties to handle inconsistency is a syntax­
based approach, in the sense of [16], which means that

the way a know ledge base be hav es is dependent on the
syntax of the input (this is justified by the fact that
each formula is considered as an independent piece of

information); for instance, {p,q,....,pY -,q} will not be­
have as {p 1\ q, ....,p Y ....,q}, since in the first. case we ca.n
re

move independently the formulas

{p,

p and q

( {p, q}.

p V -.q} and { q, ....,p Y ....,q} are the maximal sub­
theories), but in the second case we must rem ove or
....,

whole fo rm ula p 1\ q ( {p 1\ q} and { ...,p V -.q}
the maximal sub-theories).

keep the
are

In order to deal with inconsistency, the basic idea de­
veloped with syntax-ba.'led approaches is to define a

208

Dupin de Saint-Cyr, Lang, and Schiex

nonmonotonic inference relation as follows: 1/J can be
deduced nonmonotonicaly from a knowledge base iff
all the maximal sub-theories of this base entails (clas­
sically) 1/;.
2.2.1

Given

Nonmonotonic inference relation
induced by a penalty knowledge base

PK

E

Definition

�c·

10 'r/cp,1/J

E 2',

2.3

In this section, we will see that penalty logic is not
only a tool for inconsistency handling but also a good
way to represent, in a logical language, discrete opti­
mization problems (for instance issued from operation
research), in which minimum cost interpretations cor­
respond to optimum solutions.

We consider an undirected graph

¢}

'v'A � PK, if A is a ?:.PI< -preferred cp-consistent

sub-theory among all the cp-consistent sub-theories of
PK, then AU {cp} f= 1/J.

sub-graph

N.B.: 'r/1/;, ..L
Property

In penalty logic we can represent it like this:
•

1/J.

s

that this vertex

f---�K1/J.

10 'v'cp, 1/J

0, if w f=

to each vertex

sitional variable

•

2',

E

E U, we can associate

s

a

propo­

which truth assignation means

belongs to

the clique we are look­

minimum of vertices: to each vertex we associate
the penalty formula {s, 1).

f-.- �K 1/J

cp

we are searching for a set of vertices which is max­
imum for cardinality, so we have to exclude the

¢}

•

and w is a ?:.PI< -preferred
interpretation satisfying <p, then w f= 1./J.
E

every vertex is connected with every

ing for.

'P

'r/w

then A F=

(i.e.,

other vertex). Finding a maximum cardinality clique
is a classical N P-ha.rd problem in operational research.

In particular, if cp = T, the definition becomes:
f-.- � K1/J {:} if A is a ?:.PK-preferred sub-theory among

PK,

G, i.e., a set of ver­

tices U and a set of edges V connecting those vertices.
A clique of G is a subset of V which define a complete

cp f-.- �K1/J

all the sub-theories of

An application of penalty logic:
maximum clique in a graph

the resulting set

(x, y)

graph

must be a clique so for each pair

of vertices that are not connected in the

G (i.e., (x, y) � V), at least either

x

y

or

This property shows that the nonmonotonic inference

does not belong to the clique. In consequence, we

relation

can associate to each pair

f-.- �K

belongs to the set of relations based on

preferential models in the sense of [15]. As �Pl< is a
complete pre-ordering, we immediately get the follow­
ing result:

Property

Let

f-.- �K

11

relation1.
Property
'P

12 Given

* 1.,

zs

a

comparative

inference

(...,x V -,y, +oo).

formula

PK(G)

=

{(s, l),s

E

(x, y)

� V the penalty

U}U{(...,xV---.y,+oo),(x,y)

�

V}.

13 (see [8]) Every minimum cost inter­
pretation with respect to PI<( G) corresponds to a max­
imum clique of G and conversely.

Property
PK E

�c and cp, 1/J

E 2',

with

Example:

For instance,

let us consider the following penalty

knowledge base

e

( a , l)(b, l}(c, 1}
(d, l)(e, 1}

5),

--+ c

The minimum cost interpretation

1)}

a f-.- �I<

(al\b)

f---�K

is {-.a, b, c, d, -.e}.

This example shows the ability of penalty logic to en­

It can be checked that:

f-.- �I<

c

b

--.c

(a

( •a V •c, +oo)
{---.a V ---.d, +oo)
( •a V •e, +oo}
(-,b V •e, +oo)
( --.c V •e, +oo)

, +oo),

(-,av--.b , 4),
{b--+
2),

•

code discrete optimization problems. One could ar­
gue that, in operation research, algorithms for solv­

c

c

ing classical problems (as maximum clique, minimum
vertex cover... ) do already exist. Those algorithms
are probably more efficient than the one consisting in

•c

comparative inference relation (13] is a rational rela­

tion [15] that also satisfies supraclassicality: if 'P

'Pb--�K'f/;.

d

PK:

{(a V b
( ---.a

1A

a

F '1/1

then

finding the best interpretation
oped in

[7]).

in penalty logic (devel­

However, the logical representation of this

kind of problems presents at least two advantages: the

209

Penalty Logic and its Link with Dempster-Shafer Theory

great power of expression of logi c allows us to spec­
ify many complicated problems which could not easily
be specified within the operational research language;
and the best solution search method is independent of
the given problem.

3

Relating penalties to
Dempster-Shafer theory

In this section we are going to show:

ties are used to induce a preference r el at ion on

•

first, that the cost of an interpretation kpK : rl
[0, +oo) induced by a penalty knowledge base PK
c ons i s t ing of n weighted formulas corresponds ac­
tually to the contour function pl : rl ---+ [0, 1]
induced by Dempster's combination of n simple
support functions (one for each formula rpi);

•

th en , that moreover, the f unc tion Kp){

---+

:

.5f>

-

[0, +oo) corresponds to a plausibility me as ur e in
an infinitesimal version of Depmster-Shafer the­
ory.

3.1

Interpretation costs and contour
functions

Let PK = { (rp;, a;}, i = 1 .. . n} be a penalty kn owl­
edge base. Let us define, for each i, the body of evi­
dence m;:

m;(rp; ) = 1- e-a,
m; (T) = e -a•

00
By convention we take e= 0. S ince a; E [0, +oo],
it can be seen that m;(cpi) E (0, 1) and m;(T) E [0, 1).

note that lim<>,-+co m;(cp;) = 1. m; is
called a simple support functi on [24]. Let m = m1 EfJ
·EBmn be the result of Dempster's combination of the
m; 's (9] without re-normalization. The contour func­
tion pl : n
[0, 1] associated to m i s the restriction

M oreover,
· ·

of

the

-+

plausibility function to sin g le ton s ,

pl(w)
Now,

=

P l ( { w })

=

L

i.e.,

m (rp)

it is well-known [24] that
=

IT Pl;({w})

( II

1).(

IT

i,wl=...,<+>•

II

i,wl=-.cp;

i,wl=cp;

e-

port functions in order to rank interpretations can be

d on e a.lt.erna.ti vely with penalty logic.

This also brings to light. a relation bet.ween penalties
and [25] where each formula 'Pi of the knowledge base is
considered to be given by a distinct source, this source
having the pro bability p; to be faulty (i.e., the infor­
mation it provides us with is not pertinent), and all

so u rces being independent (which gives the simple sup­
port function m;(cpi) = (1- p;) and m;(T) = p,:). So
if the task is only to find the most plausible interpre­
tation (as in [11] which i s the C o ns tr aint Satisfaction
counterpart of [25]), it can thus be done equivalently
with penalti. Ps.

3.2

Formula costs as infinitesimal
plausibilities

Let us consider an infinitesimal version of Dempster­

Shafer theory, where the masses involved are all in­
finitely close to 0 or to 1. Let c be an infinitely small
quantity2•3. Again, let PK = {(cp;,a;},i = 1. .. n}.
Let us define, for each i, the infinitesimal body of evi­
dence m,,;:

i=l

where P l; is the plausibility function induced by m;.
Moreover, Pl;(w) = 1 if w f= 'Pi and Pl;(w) = e-c., if
w f= -,'Pi. Thus,

pl(w)

rl, a.nd

then possibly to select one of the (or all ) cheapest in­
t.erpretat.ion(s). Namely, this is eno ugh for inducing
the inference relation \--- �K, for solving discrete op­
timization proble m s, and also for applying p en alties
to constraint satisfaction problems or abduction. So,
ha ndlin g penalties in su ch a purpose is nothing but
performing Dempster's combination on s impl e sup­
port functions. Reciprocally, combining simple sup­

m,,; (r,o;) = 1 - ca'
m,,;(T) = ca'

n

Pl({w})

Therefore, kpK(w) = -ln(p!(w)): up to a logarithmic
transformation, kPK is a contour function, or mo re pre­
cisely, the process consisting in computing kpr< corre­
sponds to applyin g Dempster's combination without
re-norma.lization on simple support functions. Thi s
equivalence does not extend to an equivalence between
]{pK and a plausibility function (see subsec ti on 3.2}.
but this result is already significant, since in most prac­
t ic al applications of penalty logic, only the contour
function kpK is useful: this is the case when penal­

e-c.,

Lt.�.�t==-.'Pi O'i

e-kPK(w)

e-Ct·)

Let m, = m , 1 tfl· · · ffi m, n be the result of Dempster's
combination �f the m; 's '[9) without re-normalization.
Let us show now that J(PK has the same or d er of mag­
nitude (w.r.t. c ) as ln(P/,), where ln(Pl,) is the plau­
sibility function induced by m,.
Let us note that the set of focal elements of
exactly {"-iEI'Pi, It;::; {1 ... n}}.

m,

is

2More formally, this consists in considering a family of

e's tending towards 0; indeed what we are interested in is
only the limit of the considered
3We recall that ft(e:)

�

f( I!)

when

h(e) iff lim,_o

I!

tends to 0.

};i:j

==

1.

210

Dupin de Saint-Cyr, Lang, and Schiex

4

Now, let us define
R(PK, w)

=

{I � { l .. n}, J\ (<p;)

i\

.

w consistent}

iEI

Now,
II m;(<p;). II m;(T)
i<l/
IER(PK,t/J) iE/

Pl('!j!)

IER(PK,!j;) iEJ

As c: is infinitely small and
.::a•) R:: 1, therefore:
PI(¢)

R::

I

is always finite, f};E1(1-

/ER(PK,t/J)

{J

E

as

R(PK, !J;), La; is minimum}
i<ll

and let r(PK, !J;)
Since

c: is

=

IRminpen(PK, ¢)1.

infinitely small, we have

PI(¢)

R::

!ERm'""'"(PK,,P)

r(PK, '!j!).maxiER(PI<,.;,).::L,er a,
r(PK,

Used to handle inconsistency and perform non­
monotonic inferences, penalty logic has shown to have
interesting properties. Using penalties for selecting
preferred sub-theories of an inconsistent knowledge
base not only allows to distinguish between the degree
of importance of various formulas, as usual priority­
based approaches do, but also to express possible com­
pensations between formulas. The non-monotonic in­
ference relation defined satisfies the usual postulates
[13] and is (logarithmically) related to an infinitesimal
version of Dempster-Shafer theory.
Furthermore, the complexity of the penalty non­
monotonic deduction problem has been considered in
[5] and is ranked as one of the most simple non­
monotonic inference problem (in��).

/ER(PK,!f;) i<tl

Let us now define Rminpen(PK, !/•)

Conclusion

��).c:miniER(PK,�) Z.v a,

Now,

Penalty logic may also been considered as a logical lan­
guage for expressing discrete optimiza tion problems.
The search for a preferred interpretation has been im­
plemented using an A -like variant of Davis and Put­
nam p ro ced u re (6] and has been tested on small ex­
amples. Randomized search algorithms such as GSAT
[23, 22] could also be considered, but they do not guar­
antee that an optimum is actually reached.
•

As shown in [5], solving the problem of searching a
preferred interpretation allows to simply solve the non­
monotonic inference problem, without any restriction
on the language of the formulas expressed4. Any­
way, even the limited ll.� complexity can be consid­
ered as excessive when faced to practical applications.
A reasonable approach would then consist in defining
a gradual inference relation and in trying only to solve
an approximation of the resulting gradual inference
problem.
Among the other possible extensions of penalty logic,

minJER(PK,tiJ)

La;
i<l/

min

BCPK
,BAtjJ
-

c onsistent

min

B�PK,BAtjJ consi•tent

La;

'Pi<lB

CpJ<(B)

one could consider associating many unrelated penal­
ties to a single formula. Partially ordered penalty vec­
tors would then replace penalties. Another possible ex­
tension consists in taking into account not only penal­
ties caused by violations but also profits associated to
satisfactions (which could be expressed using negative
penalties).
Acknowledgements

Therefore,

Note that r(PK, ¢) does not depend on .::, and more­
r(PK, '¢) > 0. So, up to a logarithmic
transformation and a multiplicative constant (in other
terms, if we consider only the orders of magnitude
w. r. t. c::), Kpl( is equivalent to an infinitesimal plausi­
bility function.

We would like to express our thanks to Didier Dubois
and Henri Prade for helpful suggestions concerning
the link between penalties and Dempster-Shafer the­
ory, and Michel Cayrol for having found an error in
a preliminary version. This work has been partially
supported by the ESPRIT BRA project DRUMS-2.

over that

4

Using an ATMS for computing candidates and pre­

ferred sub-theories could also be considered, but the re­
sulting complexity is more important in the general case

[19].

Penalty Logi c and its Link w ith Dempster-Shafer Theory

