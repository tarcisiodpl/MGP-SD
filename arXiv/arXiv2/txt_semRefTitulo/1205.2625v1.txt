
Message-passing algorithms have emerged as
powerful techniques for approximate inference in graphical models. When these algorithms converge, they can be shown to
find local (or sometimes even global) optima
of variational formulations to the inference
problem. But many of the most popular
algorithms are not guaranteed to converge.
This has lead to recent interest in convergent
message-passing algorithms.
In this paper, we present a unified view of
convergent message-passing algorithms. We
present a simple derivation of an abstract
algorithm, tree-consistency bound optimization (TCBO) that is provably convergent in
both its sum and max product forms. We
then show that many of the existing convergent algorithms are instances of our TCBO
algorithm, and obtain novel convergent algorithms “for free” by exchanging maximizations and summations in existing algorithms.
In particular, we show that Wainwright’s
non-convergent sum-product algorithm for
tree based variational bounds, is actually
convergent with the right update order for
the case where trees are monotonic chains.

1

Introduction

Probabilistic inference in graphical models is a key
component in learning and using these models in practice. The two key inference problems are calculating
the marginals of a model and calculating its most likely
assignment (sometimes referred to as the MAP problem).
One approach to these generally intractable problems
is to use a variational formulation, where approximate

inference is cast as an optimization problem. For the
marginals case this usually corresponds to minimization of a free energy functional, and for the MAP problem it corresponds to solving a linear programming
(LP) relaxation [10].
A key challenge in both the MAP and marginals case
is to devise simple and scalable algorithms for solving the variational optimization problem. In recent
years numerous algorithms have been introduced for
both tasks. These algorithms typically have a “message passing like” structure.
Perhaps the most widely used message-passing algorithms are “belief propagation” and its generalizations [5, 8, 12, 14]. These algorithms typically have two
variants: sum-product which is used to approximate
the marginals, and max-product which is used to approximate the MAP. Fixed-points of these algorithms
can be shown to be local (or sometimes even global)
optima of the corresponding variational formulation.
Yet despite the spectacular empirical success of these
algorithms in real-world applications, they are not
guaranteed to converge, and variants of “dampening”
are often used to improve their convergence [8, 12, 14].
There has therefore been much recent work on convergent message passing algorithms [2, 5, 7, 13]. These algorithms are often very similar in structure to the nonconvergent algorithms and often include local maxproduct or sum-product operations. However, for each
of these specific algorithms it has been possible to
prove that the value of the variational problem (or its
dual) improves at each iteration. Perhaps the most intriguing example of this is Kolmogorov’s TRW-S algorithm [7] which is simply Wainwright’s tree-reweighted
max-product algorithm [11] with a different update
schedule.
Here we introduce a unifying framework which encompasses both marginals and MAP approximations,
by exploiting the mathematical similarities between
these approximations. Specifically, we provide an up-

394

MELTZER ET AL.

per bound on the optimum of the variational approximations, and give sufficient conditions that algorithms
need to satisfy in order to decrease this bound in a
monotone fashion. Any algorithm which satisfies these
conditions is guaranteed to decrease the upper bound
at every iteration. This property in turn guarantees
that such algorithms converge to a global optimum of
the variational problem in the marginals case and to a
local optimum in the MAP LP approximation case.
Our framework involves updating a subset of regions
which form a tree in the region graph. A related approach was recently suggested by Sontag et al. [9]
in the context of solving the MAP approximation.
Their work gives an explicit algorithm for optimizing
all edges corresponding to a tree in the original graph,
such that an upper bound on the LP optimum is decreased at every iteration. Our formalism does not give
an explicit update but rather conditions that guarantee an update to decrease the objective. However,
we show that these conditions are satisfied by several
known algorithms. Furthermore, since the condition
is similar in the marginals and MAP case (specifically
a condition of sum and max consistency respectively)
it is easy to obtain algorithms for both these cases simultaneously, and to use results in one problem for
obtaining algorithms for the other.
For instance, we consider the tree-reweighted (TRW)
free energy minimization problem [12]. Recently two
works have provided convergent algorithms for this
problem [1, 3], but these were more involved than standard message passing algorithms. Here we show the
surprising result that in fact the original algorithm
provided for TRW by Wainwright et al. is convergent, if run with an appropriate schedule of message
updates.

2

Bounds for MAP and Log-Partition

We consider a graphical model where the joint probability over variables p(x) factors
Q into a product over
clique potentials p(x) = Z1 α Ψα (xα ) or equivalently, the energy function
is a sum over clique enP
1
ergies p(x)
=
θ
(xα )). We also denote
exp(
α
α
Z
P
θ(x) = α θα (xα ).
The problem of calculating marginals and approximation of the partition function Z can be recast as the
following maximization problem of the function F (q)
(the negative of the free energy):
log Z = max F (q) = max (hθ(x)iq + H(q))
q

q

(1)

where q is the set of probability distributions over x,
hθ(x)iq is the average energy with respect to q and
H(q) is the entropy function. The maximizing argu-

UAI 2009

ment is then the distribution p(x).
This maximization is in general intractable, so approximate free energies are often used. A class of approximate free energies, discussed in [14], is based on the
concept of a region graph G whose nodes α are regions
of the original graph, and whose edges represent subregion relationships (i.e. an edge between α in β exists
only if β ⊂ α). The approximation replaces the joint
entropy H(q) with a linear combination of local region
entropies Hα (qα ) where each local entropy is weighted
by a “double-counting” number cα :
H̃G,c (q) =

X

cα Hα (qα ) ,

(2)

α

where the subscript G, c indicates the dependence of
the approximation on the region graph G and the
counting numbers cα .
With this approximation of H(q) the free energy now
only depends on local distributions, since the average energyPis a simple function of the qα , namely
hθ(x)iq =
α hθα (xα )iqα . To optimize only over local distributions qα , we need to consider only distributions such that there exists a q(x) that has these as
marginals. This set (called the marginal polytope [10])
cannot be expressed in a compact form, and is typically approximated. One popular approximation is the
local polytope of the region graph L(G) defined as the
set of local distributions that agree on the marginals
for any two regions in the region graph that are subsets
of each other:1
P
)
(
∀β ⊂ α, xβ
qα (xα ) = qβ (xβ )
xα \xβ
L(G) = q ≥ 0
P
∀α,
xα qα (xα ) = 1
Take together, this results in the following standard
variational approximation [10]:
X
max F̃ (q) = max
hθα (xα )iqα + H̃G,c (q) (3)
q∈L(G)

q∈L(G)

α

Similarly the MAP problem is approximated via
X
max F̃ (q) = max
hθα (xα )iqα
q∈L(G)

q∈L(G)

(4)

α

To obtain a unified formalism for MAP and marginals,
we use a temperature parameter T where T = 1 for
marginals and T = 0 for MAP and the optimization
is:
X
max F̃ (q) = max
hθα (xα )iqα + T H̃G,c (q) (5)
q∈L(G)

q∈L(G)

α

1
Note that this is the local polytope of the region graph
not the local polytope of the original graph

UAI 2009
2.1

MELTZER ET AL.

Positive Counting Numbers

The entropy approximation H̃G,c (q) in Eq. 2 is generally not a concave function of the local distributions q.
Thus maximization of F̃ (q) may result in local optima.
To avoid this undesirable property, several works (e.g.,
[5]) have focused on entropies which are obtained by
considering only concave H̃G,c (q) functions. We focus on approximations where all the double counting
numbers are non-negative. This is a strong restriction
but since we are working with a region graph formulation, many approximate free energies which have negative double counting numbers can be transformed into
ones with positive double counting numbers on a region graph. Perhaps the most important example are
tree-reweighted free energies inPwhich the entropy is
approximated as HT RBP (q) = τ ρτ Hτ (q) with ρτ a
probability distribution over trees in the graph and
Hτ (q) is the entropy of the distribution on τ with
marginals given by q (more precisely, the projection
of q on the tree τ ). If we consider a region graph
with trees and their intersection (Fig. 5) the double
counting numbers are non-negative.
ButP
HT RBP can
P
also be rewritten
H
=
ρ
H
+
T RBP
ij ij ij
i ci Hi with
P
ci = 1 − j ρij and ρij is the edge appearance probability of the edge ij under the distribution ρ. In this
case, the double-counting number for the singletons
ci may be negative. However, we will show that it is
sometimes advantageous to work in the representation
that uses a non-negative mixture of trees, since nonnegativity of the counting numbers allows a simpler
derivation of algorithms.
2.2

Optimization and Reparameterization

The vast majority of methods for solving the variational approximation are based on two classes of
constraints that local optima should satisfy. It is
easy to show using Lagrange multipliers, that local optima of F̃ should satisfy two types of constraints [5, 6, 12, 14, 15]
• Reparametrization Q
(or admissibility, or “e constraints”). P (x) ∝ α qα (xα )cα , for every x.

• sum-consistency
(or
“m
constraints”),
P
xα \xβ qα (xα ) = qβ (xβ ) for all β ⊂ α and
xβ .

By enforcing each of these constraints iteratively one
obtains many of the popular sum-product algorithms.
Replacing the sum-consistency constraint with maxconsistency gives many of the popular max-product
algorithms. A simple example is ordinary BP, which
maintains admissiblity at each iteration and a message
from i to j enforces consistency between bij and bj .

395

In general, simply iteratively enforcing constraints is
not guaranteed to give convergent algorithms. However, as we show in this paper, by iterating through
the constraints in a particular order, we obtain monotonically convergent algorithms.
2.3

Bound minimization and
reparameterizations

We begin by providing an upper bound on the logpartition function whose minimization is equivalent to
the maximization in Eq. 5.
We consider marginals bα of the exponential form:
bα (xα ; θ̃α ) =



1
exp θ̃α (xα )/cα
Zθ̃α

(6)

and require that these marginals will be admissible
(maintain the “e constraints”). We obtain admissibility by requiring that the variables θ̃ will satisfy the
following for each x:
X
X
θα (xα ) =
θ̃α (xα )
(7)
α

α

The algorithms we propose will optimize over the variables θ̃ while keeping the constraint in Eq. 7 satisfied
at all times. Moreover, they will monotonically decrease an upper bound on the optimum of Eq. 5. In
the following two lemmas we provide this bound for
the sum and max cases.
Lemma 1 The approximation to the log partition
function is bounded above by:
X
boundsum (θ̃) =
(8)
cα ln Zθ̃α
α

for any reparameterization θ̃ (i.e., any θ̃ satisfying
Eq. 7).
Minimizing boundsum (θ̃) over the set of reparameterizations θ̃ would give the approximated log-partition
function:
min boundsum (θ̃) = max F̃ (q)
θ̃

q∈L(G)

(9)

This is the optimum of Eq. 5 with T = 1.
Proof: Kolmogorov [7] showed that if θ̃ is a reparameterization (i.e. keeping the constraint in Eq. 7), it also
holds that hθ̃iq = hθiq for any q ∈ L(G). Using this
property, we can see that the log-partition function is
constant under reparameterization: F̃ (q; θ) = F̃ (q; θ̃)
for any q ∈ L(G), and in particular the maximum value

396

MELTZER ET AL.

will remain the same. Now, using the new variables θ̃
we have a trivial bound on the log-partition:

X
hθ̃α iqα + cα Hα (qα )
max F̃ (q; θ̃) = max
q∈L(G)

q∈L(G)

≤

X
α

Algorithm 1 The tree consistency bound optimization (TCBO) algorithm
Iterate over sub-graphs T of the region graph that have
a tree structure:

α

1. Choose a tree T



max hθ̃α iqα + cα Hα (qα )
qα

2. Update the values of θ̃αt+1 for all α ∈ T such that:

Since the counting numbers cα are non-negative, the
marginals defined in Eq. 6 maximize each local functional Fα (qα ; θ̃α , cα ) = hθ̃α iqα + cα Hα (qα ), and the
optimal value is cα ln Zθ̃α . Thus,
max F̃ (q; θ̃) ≤

q∈L(G)

X

cα ln Zθ̃α

• re-parameterization is maintained:
X
X
θ̃αt+1 (xα ) +
θ(x) =
θ̃αt (xα )
• tree-consistency is enforced:
Define the beliefs

(10)

α

t+1
bt+1
α (xα ; θ̃α ) =

or optimize the bound to the MAP by enforcing max-consistency:

q∈L(G)

t+1
t+1
t+1
max bt+1
α (xα ; θ̃α ) = bβ (xβ ; θ̃β )
xα\β

xα

Minimizing boundmax (θ̃) over the set of reparameterizations θ̃ would give the optimal value for the regiongraph LP relaxation of the MAP:
X
min boundmax (θ̃) = max
(12)
hθα (xα )iqα
α

This is the optimum of Eq. 5 with T = 0.
Proof: The bound follows directly P
from the admissiblity constraint so that maxx α θ̃α (xα ) ≤
P
α maxxα θ̃α (xα ). The fact that the tightest bound
coincides with the LP relaxation was proven in [13].
We note that the above two lemmas may also be
viewed as an outcome of convex duality. In other
words, the original variational maximization problem
and the equivalent bound minimization problem are
convex duals of each other.
In the following sections we provide a framework for
deriving minimization algorithms for the above two
bounds.

Zαt+1



exp θ̃αt+1 (xα )/cα

xα\β

Lemma 2 The value of the MAP is bounded above by:
X
boundmax (θ̃) =
(11)
max θ̃α (xα )
for any reparameterization θ̃ (i.e., any θ̃ satisfying
Eq. 7).

1

For each α ∈ T, β ∈ T, β ⊂ α and xβ , optimize the bound to the log-partition function
by enforcing sum-consistency:
X
t+1
t+1
t+1
bt+1
α (xα ; θ̃α ) = bβ (xβ ; θ̃β )

A similar result may be obtained for the MAP case
(this result or variants of it appeared in previous
works, e.g., [7, 9, 13]).

α

α6∈T

α∈T

The bound is tight if there exists a reparameterization θ̃ such that the marginals bα (xα ; θ̃α ) are sumconsistent (i.e. b ∈ L(G)). The existence of such a
re-parameterization is guaranteed if the maximum of
the approximated negative free energy F̃ (q; θ) does not
happen at an extreme point [14].

θ̃

UAI 2009

3

Bound optimization and consistency

We propose the tree consistency bound optimization
(TCBO) algorithm as a general framework for minimizing the bounds in Sec. 2.3 for the approximated
log-partition and for the MAP, within a region graph
with positive counting numbers cα .
The idea is to perform updates on trees that are subgraphs of the region-graph. The θ̃ corresponding to
each such tree will be updated simultaneously in a way
that will achieve a monotone decrease in the bound.
The method we propose, as described in Algorithm 1
keeps the beliefs admissible with the positive counting numbers cα (or equivalently, always maintains θ̃(x)
that reparameterize the original energy θ(x)). The corresponding θ̃ thus satisfy the conditions of the bound
in Sec. 2.3. Furthermore, at each iteration, max or sum
consistency of the beliefs is enforced for the subtree T .
As mentioned earlier, maintaining consistency on subsets does not generally result in convergent algorithms.
However, as the following lemmas show, in our case
enforcing consistency is equivalent to block coordinate

UAI 2009

MELTZER ET AL.

397

descent on the bound.
Lemma 3 The sum-consistency lemma: Consider the bound minimization problem for the logpartition function with positive counting numbers
(Lemma 1), defined on a subset of regions and intersections T . The part of the bound which is influenced
by the beliefs of the subset is:
X
P BT (θ̃T ) =
cα ln Zθ̃α
α∈T

The problem is to find {θ̃α } for all α ∈ T that minimize
P BT (θ̃T ) subject to θ̃ being reparameterizations of the
energy {θα }. If for some
θ̃∗ the be
 reparameterization

Figure 1: A simple 2x2 grid, with pair regions.
Proof: The part of the bound which is dependent on
θ̃T is bounded below:
P BT (θ̃T ) ≥ max θ̃T (xT )
xT

where

liefs b(xα ; θ̃α∗ ) ∝ exp θ̃α∗ /cα are sum-consistent, then
it minimizes the bound.

Proof: The part of the bound which is dependent on
θ̃T the is bounded below:
X
P BT (θ̃T ) =
max Fα (qα ; θ̃α , cα )
α∈T

≥

qα

max

qT ∈L(G)

X

Fα (qα ; θ̃α , cα )

α∈T

Now, if we find variables θ̃α for all α ∈ T such
that they provide global re-parameterization θ̃(x) =
θ(x) (so we can have a bound), and the marginals
bα (xα ; θ̃α ) ∝ exp(θ̃α (xα )/cα ) which maximize each
term Fα (qα ; θ̃α , cα ) separately are also sum-consistent
(bT ∈ L(G)), then P BT (θ̃T ) will achieve its optimal
value, and thus we perform block coordinate descent
on the bound.
Note that for optimizing the bound to the logpartition, the subset T does not have to form a tree,
and the sum-consistency of the beliefs is enough. Yet,
it may be easier in practice to enforce sum-consistency
on trees.
Lemma 4 The max-consistency lemma: Consider the bound minimization problem for MAP with
positive counting numbers (Lemma 2), defined on a
subset of regions and intersections that form a tree T .
The part of the bound which is influenced by the beliefs
of the tree is:
X
P BT (θ̃T ) =
max θ̃α (xα )
α∈T

xα

The problem is to find {θ̃α } for all α ∈ T that minimize
P BT (θ̃T ) subject to θ̃ being reparameterizations of the
energy {θα }. If for some
θ̃∗ the be
 reparameterization
liefs b(xα ; θ̃α∗ ) ∝ exp θ̃α∗ /cα are max-consistent, then
it minimizes the bound.

. X
θ̃α (xα )
θ̃T (xT ) =
α∈T

so if we can find an assignment x∗T whose cost θ̃T (x∗T )
equals P BT (θ̃T ), that means we have the tightest
bound. Now, if for some
θ̃T∗ the be
 reparameterization

liefs bα (xα ; θ̃α∗ ) ∝ exp θ̃α∗ /cα are max-marginalizable
then we can always find an assignment x∗T that sits on
the maxima of θ̃α∗ because the subgraph is a tree (so
there cannot be any frustrations). Hence, we obtain
θ̃T (x∗T ) = P BT (θ̃T∗ ), and the bound achieves its optimal value for the coordinates in T .
The above two lemmas show that the TCBO algorithm
monotonically decreases the bound after each update.
In the log-partition case, the bound is strictly convex
and thus this strategy finds the global minimum of
the bound which is the global maximum of Eq. 5. In
the MAP case, the function is not strictly convex and
the algorithm may converge to values that are not its
global optimum. This phenomenon is shared by most
dual descent algorithms (e.g., [2, 7, 13]).
TCBO is a general scheme and can be implemented
for different choices of tree sub-graphs. In the next
section we illustrate some possible choices and their
relation to known algorithms.

4

Existing bound minimizing
algorithms

We identify some existing convergent algorithms as instances of TCBO: Heskes’ algorithm [5] for approximating the marginals, and MPLP [2],TRW-S [7], maxsum diffusion (MSD) [13] for approximating MAP.
Figures 2-5 show the reparametrization, region graph
and the tree sub-graph updated at each iteration of
these algorithms, for the simple example of a 2x2
grid shown in Fig. 1. Note that all algorithms use
a reparameterization with positive double counting
numbers. Furthermore, they update only a subtree at

398

MELTZER ET AL.

Figure 2: Illustration of the max-sum-diffusion (MSD)
algorithm as an instance of the TCBO formalism.
MSD operates on a region graph containing pairs and
singletons (here corresponding to a 2x2 grid). The subgraph T corresponding to the TCBO update is shown
in the blue dashed line.

UAI 2009

Figure 3: Heskes’ sum-product algorithm may be
viewed as a TCBO algorithm updating the subtree
shown in the blue dashed line (a star graph centered
on a singleton node).
Algorithm 3 Heskes’ sum-product algorithm
Iterate over intersection regions β:

Algorithm 2 The max sum diffusion (MSD) algorithm
Iterate over edges between regions < α, β >:

1. ∀α ⊃ β set the message from α to β:

1. Set the message from α to β:

t+1
mα→β (xβ )

=

t
mα→β (xβ )

t+1
mα→β (xβ )

v
u
u maxxα\β btα (xα )
·t
btβ (xβ )

=

t
xα\β bα (xα )
mtβ→α (xβ )

P

2. Update the belief of the intersection region:
t+1

bβ

2. Update the beliefs:

(xβ ) ∝

”cα /ĉ
Y “ t+1
β
mα→β (xβ )

α⊃β
t+1

bβ

(xβ )

∝

t+1

mα→β (xβ ) ·

Y

t

mα′ →β (xβ )

α′ 6=α
t+1
bα (xα )

∝

Ψα (xα )
Q
t
mt+1
β ′ 6=β mα→β ′ (xβ )
α→β (xβ ) ·

3. ∀α ⊃ β set the messages to the parent regions and their beliefs:
t+1

mβ→α (xβ )

=

t+1
bα (xα )

∝

bt+1
(xβ )
β
mt+1
α→β (xβ )
1/cα

Ψα

t+1

(xα ) · mβ→α (xα )

Y

t

′

mβ ′ →α (xβ )

β ′ 6=β

a time. What remains to be shown is that each iteration achieves consistency among the beliefs (in other
words, it satisfies the conditions of TCBO framework
and thus monotonically decreases the corresponding
upper bound).
Heskes’ algorithm can be shown to be an instance of
TCBO using direct substitution. The update rules are
shown in algorithm 3. MPLP (algorithm 4) does not
appear at first sight to use the region graph illustrated
in Fig. 4, but rather works with edges and singletons.
However, as we show in the appendix, there is a way
to transform the messages used in the max-product
version of Heskes’s algorithm into messages of MPLP
using the MPLP region graph. The max-consistency
achieved by MSD (algorithm 2) can again be shown
directly.
It is also possible to use tree graphs (or forests) as
regions, and various existing methods indeed use this
approach. We may consider a TCBO algorithm which
iterates through all edges and nodes, and for each edge
or node enforces consistency between it and all trees
that contain it. This is illustrated in Fig. 5. A naive

implementation of such a scheme is costly, as it requires multiple tree updates for every edge. However,
Kolmogorov [7] showed that there exists an efficient
implementation (which he called TRW-S) of such a
scheme in the MAP case. This implementation may
only be applied if the trees are monotonic chains, defined as follows: given an ordering of the nodes in a
graph, a set of chains is monotonic if the order of nodes
in the chain respects the given ordering. This structure
allows one to reuse messages in a way that simultaneously implements operations on multiple trees. The
scheduling of messages is important for guaranteeing
convergence in this case. It turns out that one needs to
scan nodes along the pre-specified order, first forward
and then backward.
In the marginals case, the TRW algorithm of Wainwright [12] corresponds to optimizing over tree regions
but is not provably convergent. In the next section we
show how to derive a convergent algorithm for this case
using our formalism.

UAI 2009

MELTZER ET AL.

399

Figure 4: MPLP for pairs and singletons is equivalent
to Heskes’ algorithm with stars and pairs.
Algorithm 4 The max product linear programming
(MPLP) algorithm
Iterate over pairs of neighbouring nodes < ij >:
1. Set the message from i to < ij >:
t+1

mi→ij (xi ) =

t

Y

mik→i (xi )

k∈N (i)\j

and equivalently from j to < ij >
2. Update the pairwise beliefs of < ij >:
t+1

bij (xi , xj ) ∝

q
t+1
Ψij (xi , xj ) · mt+1
i→ij (xi ) · mj→ij (xj )

3. Set the messages from < ij > to i (and equivalently from
< ij > to j):
v
“
”
u
u max
Ψij (xi , xj ) · mt+1
xj
u
j→ij (xj )
t+1
mij→i (xi ) ∝ t
mt+1
i→ij (xi )
4. Set the beliefs of i (and same for j):
t+1

bi

t+1

(xi ) ∝ mij→i (xi ) ·

Y

t

mik→i (xi )

k∈N (i)\j

5

Figure 5: A region graph with chains, their pairwise
and singleton components. Such graphs are used by
the TRW-S algorithms. In the above example there
are two chains, which are also monotonic chains since
they agree with the node ordering {1, 2, 3, 4}. TRW-S
may be viewed as a TCBO algorithm on the subgraph
shown in the blue dashed line (and an additional subgraph corresponding to a pairwise component and all
the chains that contain it).
since it is an instance of a TCBO algorithm for the
sum case. Furthermore, this TRW-S variant differs
from the algorithm in [12] only in the scheduling of
messages.
An additional algorithm that can be easily shown to
be convergent is two way GBP [14] with all double
counting numbers cα = 1, both in the sum and in
the max versions. At each iteration, two-way GBP
updates only the beliefs of a region and one of its subregions, which is trivially a tree. The fact that it maintains reparameterization and enforces consistency can
be shown directly. In fact, it can be shown that two
way GBP with cα = 1 is identical to MSD.

New bound minimizing algorithms
6

By replacing the max with a sum (or vice versa) in
the algorithms discussed in the previous section, we
obtain algorithms that enforce a different type of consistency, and keep the same reparameterization and
region graph as shown in the figures. Thus, the maxproduct version of Heskes’ algorithm and the sumproduct versions of TRW-S, MPLP and MSD are convergent with respect to the relevant bound.
The TRW-S sum-product case is especially interesting. In this case the relevant bound becomes the treereweighted log-partition function bound introduced in
[12]. The message passing algorithm suggested in [12]
does not generally converge. In contrast, the TRWS sum-product algorithm is guaranteed to converge,

Experiments

We present two experiments to illustrate the convergence of our sum and max algorithms. All algorithms
were applied to an instance of a 10x10 “spin glass”
with pairwise terms drawn randomly from [−9, 9] and
field from [−1, 1]. In each case we tested the new
TCBO algorithms.
For estimating the log-partition, we ran TRW and considered a uniform distribution over 2 spanning forests
in the graph: all horizontal and all vertical chains.
These chains are monotone with respect to the node
ordering {1, 2, ..., 100}. We ran TRW-S by following
the nodes order first forward and then backward, updating each time only the messages in the direction of

400

MELTZER ET AL.

UAI 2009

Algorithm 5 The sequential tree reweighted BP (TRW-

940

S) algorithm

1/ρij

mi→j (xj ) ∝ max Ψi (xi )Ψij
xi

(xi , xj )

Q

ρik
k∈N (i)\j mk→i (xi )
1−ρ
mj→iij (xi )

2. After each iteration over all edges, update all singleton and
pairwise beliefs:
bi (xi )

∝

Ψi (xi )

Y

∝
·

ρ

ik (x )
mk→i
i

k∈N (i)\j
1−ρ
mj→iij (xi )

Q

ρ

jk
k∈N (j)\i mk→j (xj )

900
890
880

860
0

10

20

30
Iterations

40

50

60

1−ρ

mi→jij (xj )

the scan. Fig. 6 shows a comparison of this schedule to
TRW where the node ordering is followed in a forward
manner, and all outgoing messages are updated from
each node. Both schedules keep a re-parameterization
and provide a bound to the log-partition, yet only
TRW-S monotonically decreases it at each iteration.
For the MAP case, we ran the max-product version of
Heskes’ algorithm using a region graph of pairs (with
double counting numbers 1) and singletons (with double counting numbers 0). We also ran MPLP and MSD
on the same problem. Fig. 7 shows the bounds obtained after each iteration. As can be seen, all three
algorithms monotonically converged to the same value.

7

sum−TRW−S
sum−TRBP

910

870

1/ρ
Ψi (xi )Ψj (xj )Ψij ij (xi , xj )

Q

920

ρ

ij
mj→i
(xi )

j∈N (i)

bij (xi , xj )

Bound to Log−Partition

930

1. Iterate over edges i → j in a certain updating order, and set
the message from i to j:

Discussion

Despite the empirical success of max-product and sumproduct algorithms in applications, the original algorithms are not guaranteed to converge. Much research
in recent years has therefore been devoted to devising convergent algorithms. Typically these recent algorithms are either max-product or sum-product and
their proof of convergence is specific to the algorithm.
Here we have presented a unified framework for convergent message passing algorithms and showed the importance of enforcing consistency in both sum-product
and max-product algorithms. Not only does this analogy allow us to give a unified derivation for existing
algorithms, it also gives an easy way to derive novel algorithms from existing ones by exchanging maximizations and summations.
Although many convergent algorithms are instances
of our framework, it is worth pointing out two convergent algorithms that are not. The first is Hazan and
Shashua’s recent algorithm [3, 4] which works for provably convex double counting numbers (not necessarily

Figure 6: The bound on the log-partition in a
10x10 “spin-glass”, obtained by sum-product TRW
and TRW-S with edge probability appearances of 1/2.
Note that the two algorithms differ only in the order
of updates they perform. TRW-S follows the node ordering {1, 2, ..., 100} that agrees with the monotonic
chains, first forward and then backward. In the TRW
implementation we followed the same nodes order in a
forward manner.

positive as we are assuming). The second is ordinary
BP on a single cycle, which can be shown to be convergent in both its sum and max product forms. We
emphasize that even negative counting numbers can be
handled by us in some cases, by using larger regions.
All the algorithms we discussed here in fact only updated star graphs in the region graph. Our conditions
for monotonicity apply to general tree updates. However, it seems less straightforward to obtain general
(non-star) tree updates that achieve (max or sum) consistency and reparameterization simultaneously. Interestingly, the tree based updates in [9] do monotonically
decrease an upper bound but seem not to satisfy maxconsistency. Thus, it remains an interesting challenge
to find general tree updates that satisfy the consistency
constraints, as these could be easily used interchangeably for MAP and marginals.
Perhaps the most intriguing result of our analysis is
the importance of update schedule for obtaining convergence – a non-convergent algorithm becomes convergent when the right update schedule is used. It
will be interesting to see whether convergent update
schedules can be derived for an even larger class of
message-passing algorithms.

UAI 2009

MELTZER ET AL.

clusters and “hyper stars” respectively, in which the
centers are the intersections of the clusters.

890
885

