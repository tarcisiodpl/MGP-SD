. The main objective of this paper is to develop a new semantic
Network structure, based on the fuzzy sets theory, used in Artificial Intelligent
system in order to provide effective on-line assistance to users of new
technological systems. This Semantic Networks is used to describe the
knowledge of an "ideal" expert while fuzzy sets are used both to describe the
approximate and uncertain knowledge of novice users who intervene to match
fuzzy labels of a query with categories from an "ideal" expert. The technical
system we consider is a word processor software, with Objects such as “Word”
and Goals such as “Cut” or “Copy”. We suggest to consider the set of the
system's Goals as a set of linguistic variables to which corresponds a set of
possible linguistic values based on the fuzzy set. We consider, therefore, a set of
interpretation’s levels for these possible values to which corresponds a set of
membership functions. We also propose a method to measure the similarity
degree between different fuzzy linguistic variables for the partition of the
semantic network in class of similar objects to make easy the diagnosis of the
user’s fuzzy queries.
Key words: fuzzy set; linguistic variable; membership function; similarity; fuzzy semantic Network

1. Introduction
Learning how to use new technological system is mainly an exploratory activity[2]. Exploring
learning has shown to improve the abilities constructing to successful error handling and
discovering, and eventually constructing, correct knowledge. But exploratory activity frequently
leads to experience uninterested states does not reach the interested state goal. Users need assistance
not only to avoid errors, but also to understand how the system interprets their commands [8, 9, 12].
In order to respond to a query, an executive assistant might know very precisely the goal the user has
in mind [14], which means an object in a given state (the properties of the object being transformed).
Moreover, even when goals are fairly well defined, it is often necessary to think about superordinate
goals.
The fuzzy set method has been used to develop the "on-line instructions" mechanisms of an
Intelligent Assistance System. It can be seen as a supervisor of task execution that has the "ideal
user's knowledge" of (i) prerequisites of procedures, (ii) subGoals structure[3]. And (iii) the semantic
network of the elements of the device where applied procedures are used as properties, as well as
(iv) the knowledge of perceptible and imperceptible effects of user's actions[4]. With an interactive
dialogue with a user, the Assistance System tries to match items provided by users in natural
language with the knowledge included in the ideal user's semantic network [3].

1

2. Expert Semantic Net
The example of the technical system we consider here is Word Processor software (figure1), with
Objects such as "chain-of-characters", and procedures such as "cut" or "copy". For a novice user of
the software, the list of standard denominations is not obvious and he often would like to ask an
expert operator about how to execute an action such as "how to rub letters" [4].
The underlying psychological hypothesis is that Goals are Object properties, and are generators of
Object categories. Goals and procedures define the function of Objects and the way to use them. As
functional properties of Objects, they enter into the construction of semantic networks in the same
way as structural properties. We define a procedure as a sequence of operations whose execution
serves to reach a Goal, and where the elements of the sequence are either primitive actions or
subGoals which themselves call for associated procedures.

3. Linguistic variables and membership function
In mathematical treatment of the linguistic variable aiming to process some fuzzy deductions by
computers, a linguistic variable definition imposes itself. In this context, we assign to every value of
the linguistic variable a membership functions μ, the value varies between 0 and 1. While holding
amount of the classification in a certain number of fuzzy sets, this represents the fuzzyfication
process. For the representation of the different concepts of our system, we propose to consider the
set of system's Goals (respectively Objects) as a set of linguistic variables.

3.1. The levels of interpretation and its membership functions
So far, we have introduced a fine subdivision, with four or five values for the linguistic variable that
we manipulate forming thus as many fuzzy sets as it is shown in Fig. 1. We have also defined five
levels of interpretation because actually, it appears that, for more than five levels, we have a problem
of natural discrimination between the different levels and less than five is insufficient to have a good
discrimination. Our objective is to have a cleaner idea of the interpretation of a user's Goal with
regard to the fuzzy knowledge basis.
Levels of
Membership
interpretation
function
It’s Not True
[0,0,0.2,0.4]
It’s Little True
[0.2,0.4,0.4,0.6]
It’s Half True
[0.4,0.6,0.6,0.8]
It’s Rather True
[0.6,0.8,0.8,1]
It’s Quite True
[0.8,1,1,infinity]
Table 1. Different levels of interpretation and their
corresponding membership function.
We can distinguish, therefore, five possible values for a given linguistic variable and therefore five
membership functions corresponding to the sets of values in table 1. These values are determined to
the departure by the expert, and adjusted progressively by the system when a user’s request has been
identified with success.

3.2. Definition of the fuzzy linguistic variables
Let’s consider the System’s Goal CutWithKey as a linguistic variable for a novice user of the system.
We can distinguish five values "not_true", "little_true", "half_true", "rather_true" and "quite_true"
to which corresponds five fuzzy sets (Fig. 1).
So CutWithKey of 0.25 belongs with a membership factor μ=0.7 to the "half_true" set and with
μ=0.3 to the "quite_true" set. Explicitly, we can write μhalf_true(CutWithKey=0.25)=0.7 and
μquite_true(CutWithKey=0.25)=0.3.
We consider the membership function of the verb to Gum with regard to the Expert Goal
CutWithKey. The Fig. 1 and Fig. 2 represent the result of the adjustement process. So CutWithKey of
0.75 belongs with a membership factor μ=0.7 to the "half_true" set and with μ=0.3 to the

2

"quite_true"
set.
Explicitly,
μquite_true(CutWithKey=0.75)=0.3.

we

can

write

μhalf_true(CutWithKey=0.75)=0.7

and

μ
Not true little true half true rather true quite true
1
0.7
0.3
0 0.2 0.25 0.4 0.6 0.8 1
CutWithKey
Fig. 1. Membership function of CutWithKey
μ
Not true half true

quite true

1
0.7
0.3
0 0.1 0.4 0.7 0.75 0.9 CutWithKey
Fig. 2. Membership function of Gum with regard to CutWithKey
These two membership functions (Fig. 1 and 2) are represented in memory of the computer by the
following structure:
μ
Not true half true

quite true

1

0
0.2 0.4 0.6 0.7
CutWithMenu
Fig. 3. Membership function of Gum with regard to CutWithMenu
GumCutWithMenu = {(not_true, [0,0,0.2,0.4]), (half_true, [0.2,0.4,0.4,0.6]), (quite_true, [0.6,0.7,1,1]).
GumCutWithKey = {(not_true, [0,0,0.1,0.4]), (half_true, [0.1,0.4,0.7,0.9]), (quite_true, [0.7,0.9,1,1]).
On the other hand, μquite_true(CutWithMenu=0.75)=1 (Fig. 3).

3.3. The structure of user’s goal
Let G be the user’s Goal, we search to identify with regard to the set of a system procedure Pj. fji are
the set of membership functions corresponding to the set of different levels of interpretation L ji .
The structure of the user’s Goal G is given by:

G = {(P j ,{(L ji , f ji )/1 ≤ i ≤ n })/1 ≤ j ≤ n , n ≥ 1}

(1)

Where
Lji: is the ith level of interpretation relatively to the system’s procedures Pj,
fji: is the corresponding membership function.

4. The attribute’s structures of fuzzy concepts
We distinguish between tow types of attributes: system’s Goal (respectively Object) attributes and
user’s Goal (respectively Object) attributes. In this paper we concentrates only on the Goals case.

3

4.1. The structure of the system’s goal attribute
Let Pj the set of a system’s Goals given by the Expert with a certain equivalence with regard to each
system’s Goal which can be applied on a given Object O, dj is the set of possibility degree given by
the expert. We define the structure of a system’s attribute AS by:
S

A

= {(Pl , ( p j , d

j

)/1 ≤

j ≤ n , n ≥ 1 )/ 1 ≤ l ≤ m , m ≥ 1} (2)

Example 2
AS={

(CutWithMenu, (CutwithKey, .9), (ErasewithMenu. .6) ),
(EraseWithKey, (CutwithKey, .5), (ErasewithMenu.8))

}.

4.2. The structure of the user’s goal attribute
Let Pk the set of a system’s Goals be identified with success to a given user’s Goal Gl , fji is the set
of membership functions corresponding to the set of different levels of interpretation L ji . We define
a user’s attribute AU by:

A

U

= {(G l , ( p k ,{(L ki , f ki )/1≤ i ≤ n })/1≤ k ≤ n )/1≤ l ≤ m , n , m ≥1}

(3)

Example 3
AU={ (to_Gum, (CutwithKey, (not_true, [0,0.1,0.3,0.4]), (half_true, [0.3,0.6,0.7,0.8]),
(quite_true, [0.7,0.8,0.8,1])), (ErasewithMenu, (not_true , [0,0,0.1,0.4]), (half_true, [0.2,0.4,0.4,0.6]
), (quite_true, [0.4,0.9,0.9,1]))),
(to_Rub, (CutwithKey, (half_true, [0,0.2,0.3,0.5]), (rather_true, [0.3,0.5,0.6,0.8 ]),
(quite_true, [0.6,0.8,0.9,1]
) ), (ErasewithMenu, (not_true, [0,0,0.2,0.4]), (half_true,
[0.2,0.4,0.4,0.6] ), (rather_true, [0.7,0.9,0.9,1])))
}.
The integration of fuzzy properties; as "to Gum", in the Object’s description, implies the valuation of
relations in [0, 1] [3, 4]. There are two kinds of relationships: the relation "kind-of" between two
classes and the relation "is-a" between a class and an instance. One class may be a kind-of an other
class, to some extend. Each kind of relationship is described by a membership value obtained from
the inclusion between areas or between attributes.

5. The hierarchical fuzzy relations
In the case where the X universe is discrete, the degree of inclusion is given by [Zadeh1978]. If we
consider that A and B are two fuzzy subsets of X, the inclusion degree of A in B is given by :

Deg

(A ⊂

(x )
∑ f
B )=
∑ f (x )
A∩ B

x∈ X

x∈ X

(4)

A

5.1. Case of the fuzzy system’s linguistic variables
Let a and b be two system’s linguistic variable defined on the same universe of procedures P by
a = a1,d1 , a2,d 2 ,..., an,d n and b= b1,d1' , b2,d2' ,...,bn,dn' . Then the inclusion’s degree of a in
b is given by :

{(

)(

) (

)}

{(

)(

) (

)}

4

∑ f (p )
(a ⊂ b )=
∑ f (p )
a∩ b

Deg

p∈ P

(5)

a

p∈ P

With f a ∩ b = min(d i ,d i' ) the last formula becomes :
1≤ i ≤ n

n

Deg (a ⊂ b )=

∑ min (d , d )
i

1≤ i ≤ n

i =1

i'

(6)

n

∑

di

i =1

5.2. Case of the fuzzy user’s linguistic variables
Let T and S two linguistic variables be defined on the universe of procedures P by :

T = {(Pi ,{(L ij , f ijT )/ 1 ≤ j ≤ n })/ 1 ≤ i ≤ n , n ≥ 1 }
and S = {(P i , {(L ij , f ij S )/ 1 ≤ j ≤ n })/ 1 ≤ i ≤ n , n ≥ 1 }
We have :

f T ∩ S ( p j )= min ( f i T ∩ f i S )( p j ) and f T ( p
1≤ i ≤ n

)= 1min
( f i T )( p j )
≤i≤ n

j

Let f T the membership function associated to the linguistic variable T, and f T ∩ S be the
membership function results from the intersection of T and S. We define inclusion degree of T in S
by:
Deg (T ⊂ S )=

∑

min

p j∈P

1≤ i ≤ n

∑

p j∈P

( f iT ∩

min

1≤ i ≤ n

fiS

)( p j )

( f i T )( p j )

(7)

5.3. The inclusion’s degree between two fuzzy attributes
Let T 1 , T 2 , . . . , T i , i linguistic variables for an attribute A and S 1 , S 2 , . . . , S i , i
linguistic variables for an attribute B where T 1 S1 , T 2 S 2 , . . . , T i Si be defined on the same universe
P. The inclusion’s degree of A in B is given by:

Deg

(A ⊂

B )= 1
k

∑

Deg

(T

⊂ S

)(g k )

1≤ l ≤ k

(8)

5.4. The inclusion’s degree between two fuzzy classes
Let A 1 , A 2 , . . . , A n be n attributes which defines the fuzzy class C1 and B 1 , B 2 , . . . , B n , n
attributes which define the fuzzy class C2 . We define inclusion degree of C1 in C2 by :

Deg (C1⊂C2 )= 1 ∑ Deg ( Ai ⊂ Bi )
n 1≤l ≤ n

(9)

5

5.5. The membership’s degree of an instance to an object’s class
In the case of a class and instance, we deal with degrees of membership degrees. These degrees
measure the physical representation of the class by the instances. They are obtained from inclusion
degrees between fuzzy attributes. We define the membership of an instance I in class C by :

Deg (I ∈C )= 1 ∑ Deg (a i∈ Ai )
n 1≤ i ≤ n

(10)

5.6. The defuzzification process
Defuzzification is the process of conversion of a fuzzy quantity represented by a membership
function to a precise value. In this study, the center of gravity method [10], will be used to defuzzify
the outputs membership functions into precise values .

Example 4 : case of two user’s linguistic variables
To_Gum: {
(CutwithMenu, (not_true,[0,0,0.1,0.4]), (half_true, [0.2,0.3,0.4,0.6] ), (quite_true, [0.7,0.9,0.9,1]) ),
(CutwithKey, (not_true, [0,0,0.1,0.4]), (half_true, [0.2,0.4,0.4,0.6]), (quite_true, [0.7,0.9,0.9,1]))
}.
To_Rub: {
(CutwithMenu, (not_true, [0,0.1,0.1,0.4] ), (half_true, [0.2,0.4,0.4,0.6]), (quite_true, [0.7,0.8,0.9,1])
),
(CutwithKey, (not_true, [0,0.2,0.3,0.4]), (half_true, [0.2,0.3,0.5,0.6]), (quite_true, [0.6,0.7,0.9,1]))
}.
Firstly, we calculate the gravity center for each membership function, which allows us to calculate
the degree of similarity between To_Gum and To_Rub. We have next results:
To_Gum : {
(CutwithMenu, (not_true, .14) (half_true, .38) (quite_true, .86)),
(CutwithKey, (not_true, .14), (half_true, .4), (quite_true, .86))
To_Rub : {
(CutwithMenu, (not_true, .16), (half_true, .4), (quite_true, .85)),
(CutwithKey, (not_true, .22), (half_true, .4), (quite_true, .8))
}.
We then applied the next formula with T and S replaced respectively by To_Gum and To_Rub :

Deg (T ⊂ S )=

∑

min ( f i T ∩ f i S

p j∈P

1≤ i ≤ n

∑

p j∈P

min ( f i T
1≤ i ≤ n

)( p j )

)( p j )

(11)

The system learns by interpreting an unknown word, using the links provided by the context of the
query, and created between this new word and known words. With the learning of new words in
natural language as the interpretation which was produced in agreement with the user, the system
improves its representation scheme at each experiment with a new user and, in addition, takes
advantage of previous discussions with users. Then, to make easy the diagnosis of the user’s fuzzy
queries, we suggest in the next section to deel with the similarity degree [1, 17, 18] between different
fuzzy linguistic variables for the partition of the semantic network in class of similar objects.

6

6. The measurement of similarity between fuzzy concepts
The degree of similarity has obviously to be calculated between two Objects with similarly nature,
generics or individual[5]. The similarity relationship we have used is given by [20].
The degree of similarity between two fuzziness linguistic concepts is obtained from values of the
membership functions associated to their attributes.

6.1. The similarity degree between two fuzzy linguistic variables
Let P be the universe of linguistic values, G and H are two User’s linguistic variables defined on P
such as G = {( Pj , {(Lji, fji) / 1 ≤ i ≤ 5} / 1≤ j ≤ n, n ≥ 1} and H= {( Pj , {(Lji, f’ji) / 1≤ i ≤ 5) / 1≤ j ≤ n,
n ≥ 1}. fji and f’ji are respectively the corresponding membership functions to Lji relatively to
system’s procedures Pj.
Let f G ∩ H and f G ∪ H , respectively the consequent membership function of the intersection,
and the union of membership functions associated to G and H. We define the degree of similarity
between G and H by:

(G , H )=

Sim

fG ∩ H
fG ∪ H

max
x∈ X
max
x∈ X

(x )
(x )

(12)

G and H are perfectly similar if and only if: Sim(G, H) =1.
Where

fG ∩ H

and

fG ∪ H

are calculated respectively by formulas 11 and 12 as follows:

6.2. The similarity degree between two fuzzy attributes
6.2.1. The case of system’s attributes
Let Uj and Vj, j ∈ [1, m] the sets of linguistic values of the system’s attribute AS and BS respectively.
AS and BS are respectively the properties of the objects O and O’. We define the degree of similarity
between AS and BS by:

(

Sim A S , B

S

)=

1
m

m

∑

j =1

(

Sim U j , V

j

)

(13)

6.2.2. The case of user’s attributes
Let Ui and Vi, i ∈ [1, p] the sets of linguistic values of the system’s attribute AU and BU respectively.
AU and BU are respectively the properties of the objects O and O’. We define the degree of similarity
between AU and BU by:

(

)

Sim AU , B U =

1
p

p

∑ Sim (U i , Vi )

i =1

(14)

The degree of similarity between these two objects is calculated with the similarity degrees between
the attributes of these objects.

6.3. The similarity degree between two fuzzy objects
We come to define the degree of similarity between two fuzzy attributes A and B of two Objects O
and O’ respectively. This allows us to obtain the degree of similarity between O and O’. It is given
by:

7

Let O and O’ two fuzzy Objects such as O = {A1…Ai} and O’ = {B1…Bn} where A1, B1…Ai, Bn are
respectively defined on the same universe X. The degree of similarity between O and O’ is given by:

Sim (O ,O ' )= min sim ( Ak , Ak' )
1≤ k ≤ n

(15)

6.4. Example 5
In this example we consider the descriptions of two different user’s Goals to Gum and to Rub, with
regard to the Expert’s Goals CutwithMenu and CutwithKey with the following description
respectively:
To_Gum: {
(CutwithMenu, (not_true, [0,0,0.1,0.4]), (half_true, [0.2,0.3,0.4,0.6]), (quite_true, [0.7,0.9,0.9,1])),
(CutwithKey, (not_true, [0,0,0.1,0.4]), (half_true, [0.2,0.4,0.4,0.6]), (quite_true, [0.7,0.9,0.9,1]))
}.

To_Rub: {
(CutwithMenu, ( not_true, [0,0.1,0.1,0.4]), (half_true, [0.2,0.4,0.4,0.6]), (quite_true,
[0.7,0.8,0.9,1])),
(CutwithKey, (not_true, [0,0.2,0.3,0.4]), (half_true, [0.2,0.3,0.5,0.6]), (quite_true, [0.6,0.7,0.9,1]))
}.
Firslty, we calculate the gravity center for each membership function, which allows us to calculate
the degree of similarity between To_Gum and To_Rub.
To_Gum : {(CutwithMenu, (not_true, .14) (half_true, .38) (quite_true, .86) ),
(CutwithKey, (not_true, .14), (half_true, .4), (quite_true, .86))
To_Rub : {(CutwithMenu, (not_true, .16), (half_true, .4), (quite_true, .85)),
(CutwithKey, (not_true, .22), (half_true, .4), (quite_true, .8))}.
Then the degree of similarity between to_Gum and to_Rub is calculated as follows:

f Gum∩Rub (CutWithMenu ) =

1
(min(.14,.16) + min(.38,.4) + min(.86,.85)) = .46
3
1
f Gum ∩ Rub (CutWithKey ) = (min (.14,.22 ) + min (.4,.4 ) + min (.86,.6 )) = .38
3
1
f Gum∪Rub (CutWithMenu) = (max(.14,.16) + max(.38,.4) + max(.86,.85)) = .47
3
1
f Gum∪ Rub (CutWithKey) = (max(.14,.22) + max(.4,.4) + max(.86,.6)) = .49
3

Then

Sim (Gum , Rub ) =

max (. 46 ,. 38 )
= . 94
max (. 47 , 49 )

To conclude, we can say that Gum and Rub are similar by 94 percent.

7.

Conclusion and future works

In this paper, we have presented a new structure of semantic network based on fuzzy sets theory. The
System has been tested on available databases. We have compared our system with neural networkbased approaches and with other semantic net-based techniques. Experimental results, that will be

8

published later, have shown the effectiveness of the approach proposed in providing effective on-line
assistance to users of new technological systems. This approach can serve as a basis for our research
to elaborate a general methodology to diagnosis the purpose Goal of the subject, applicable to a large
diversity of Objects which allow a best approximation of the category of the purpose aimed by the
user and best approaches the diagnosis.

