Practical Linear Value-approximation Techniques First-order MDPs approximate linear programming ALP techniques first-order Markov Decision Processes FOMDPs represents value function linearly w.r.t. set first-order basis functions linear programming techniques determine suitable weights approach offers advantage require simplification first-order value function allows solve FOMDPs independent specific domain instantiation paper address questions enhance applicability extend first-order ALP framework approximate policy iteration address performance deficiencies previous approaches automatically generate basis functions evaluate impact value function quality decompose intractable universally quantified rewards tractable subproblems propose answers questions novel optimizations provide comparative empirical evaluation logistics ICAPS Probabilistic Planning Competition Symbolic Dynamic Programming Discrete Continuous MDPs real-world decision-theoretic planning naturally modeled discrete continuous Markov decision processes DC-MDPs previous addressed automated decision-theoretic planning DCMDPs optimal solutions defined limited settings e.g. DC-MDPs hyper-rectangular piecewise linear value functions extend symbolic dynamic programming SDP techniques provide optimal solutions vastly expanded class DCMDPs address inherent combinatorial aspects SDP introduce XADD continuous variable extension algebraic decision diagram ADD maintains compact representations exact value function Empirically demonstrate implementation SDP XADDs various DC-MDPs optimal automated solutions DCMDPs linear nonlinear piecewise partitioned value functions advantages constraint-based pruning XADDs Approximate Linear Programming First-order MDPs introduce approximate solution technique first-order Markov decision processes FOMDPs Representing value function linearly w.r.t. set first-order basis functions compute suitable weights casting corresponding optimization first-order linear program off-the-shelf theorem prover LP software effectively technique allows solve FOMDPs independent specific domain instantiation allows determine bounds approximation error apply equally domain instantiations apply solution technique task elevator scheduling rich feature space multi-criteria additive reward demonstrate outperforms intuitive heuristicallyguided policies