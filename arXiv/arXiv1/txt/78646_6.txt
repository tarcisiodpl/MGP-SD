Possibilistic Constraint Satisfaction handle soft constraints AI synthesis planning scheduling modelized constraint satisfaction CSP CSP typically defined finding consistent labeling fixed set variables satisfying constraints variables real tasks job-shop scheduling time-table scheduling design constraints significance satisfied distinction hard constraints solution satisfy soft constraints satisfaction paper formalize notion possibilistic constraint satisfaction allows modeling uncertainly satisfied constraints possibility distribution labelings represent respective possibilities labeling Necessity-valued constraints allow simple expression respective certainty degrees constraint main advantage approach integration CSP technical framework classical techniques Backtracking BT arcconsistency enforcing AC Forward Checking extended handle possibilistics CSP effectively implemented utility approach demonstrated simple design Bounds Arc Consistency Weighted CSPs Weighted Constraint Satisfaction WCSP framework allows representing solving involving hard constraints cost functions applied various including resource allocation bioinformatics scheduling solve solvers usually rely branch-and-bound algorithms equipped local consistency filtering soft arc consistency techniques suited solve domains Motivated resolution RNA gene localization genomic sequences spirit bounds consistency domains crisp CSPs introduce soft bounds arc consistency weighted local consistency designed WCSP domains Compared soft arc consistency BAC improved time space asymptotic complexity paper semantics cost functions exploited improve time complexity BAC compare theory practice efficiency BAC WCSP bounds consistency enforced crisp CSP using cost variables real modeled WCSP including RNA gene localization observe maintaining bounds arc consistency outperforms arc consistency improves bounds consistency enforced constraint model cost variables influence diagrams multi-operator cluster DAGs exist architectures solve influence diagrams using local computations Shenoy-Shafer HUGIN Lazy Propagation architectures extend usual variable elimination algorithms thanks so-called potentials paper introduce architecture called Multi-operator Cluster DAG architecture produce decompositions improved constrained induced-width induce exponential gains principle benefit composite nature influence diagrams using uniform potentials analyze structure Penalty logic Link Dempster-Shafer Theory Penalty logic introduced Pinkas associates formula knowledge base price pay formula violated Penalties criterion selecting preferred consistent subsets inconsistent knowledge base inducing non-monotonic inference relation precise formalization main properties penalty logic associated non-monotonic inference relation penalty logic Dempster-Shafer theory infinitesimal