

in-depth presentations, see above references. We shall
assume that all variables of a Bayesian network are

The efficiency of inference in both the Hugin
and, most notably, the Shafer-Shenoy archi­
tectures can be improved by exploiting the
independence relations induced by the incom­
ing messages of a clique.

That is, the mes­

sage to be sent from a clique can be com­

discrete.
A Bayesian network consists of an independence graph,

G

=

(V,E),

(which is an acyclic, directed graph or,

more generally, a chain graph) and a probability func­
tion,

p,

which factorizes according to G. T hat is,

puted via a factorization of the clique poten­

Pv

tial in the form of a junction tree. In this pa­
per we show that by exploiting such nested

=

IT p(v I pa(v)),

vEV

junction trees in the computation of messages

where pa(v) denotes the parents of v (i.e., the set of

both space and time costs of the conventional

vertices of G from which there are directed links to

propagation methods may be reduced. The

The junction tree corresponding to G is constructed

paper presents a structured way of exploit­

v).

via the operations of moralization and triangulation

ing the nested junction trees technique to

such that the nodes of the junction tree correspond

achieve such reductions.

to the cliques (i.e., maximal complete subgraphs) of
the triangulated graph. To each clique, C, and each

The usefulness of

the method is emphasized through a thor­
ough empirical evaluation involving ten large

separator, S, (i.e., link between a pair of neighbouring

real-world Bayesian networks and the Hugin

cliques of the junction tree) is associated potential ta­
bles </>c and 1/Js, respectively, by which, at any time,

inference algorithm.

we shall denote the current potentials associated with

1

C and S.

INTRODUCTION

Now define

'1/Jc

Inference in Bayesian networks can be formulated as

=II 1/Jv;,

message passing in a junction tree corresponding to the
network (Jensen, Lauritzen & Olesen
Shenoy

1990).

1990,

Shafer &

More precisely, a posterior probability

distribution for a particular variable can be computed
by sending messages inward from the leaves of the tree
toward the clique (root) containing the variable of in­
terest. If a subsequent outward propagation of mes­

where ¢v,
p(viiV. \{vi}) and pa(v;) = V; \ {v;}.
That is, for each clique, C, is associated a subset of
=

the conditional probabilities specified for the Bayesian
network, and the function

'1/Jc

tree is given as

sages from the root toward the leaves is performed, all
cliques will then contain the correct posterior distribu­
tions (at least up to a normalizing constant). In many
situations, however, we are only interested in the pos­
terior distribution(s) for one or a few variables, which
makes the outward pass redundant.

represents the product

over this subset. Initially the potentials of the junction

1/Jc ='lj!c

and

¢s

=

1

for each clique, C, and each separator, S.
Propagation is based on the operation of absorption.
Assume that clique C is absorbing from neighbouring

The Hugin and the Shafer-Shenoy propagation meth­

cliques C1, . . . , Cn via separators St, . . . , Sn.

ods will be reviewed briefly in the following; for more

two architectures, this is done as indicated in Table 1.

In the

Nested Junction Trees
Hugin
1.

2.

4>8,
4>c

L

=

C;\S•
=

4>c

IT

3.

</>s, := 4>8,,

4.

¢c := 4>(;

Shafer-Shenoy

¢c.,

i=l

i

i

=

1, ... ,n

1,

1.

4>8,

L

=

¢c.,

C,\S;

i

=

1,

... , n

n

4>8
,
4>s,
=

295

2.

4>(:

=

1/Jc IJ 4>5,
i=l

. . . , n

3.

</>s,

:=

¢5,,

i

=

1, . .

. , n

Table 1: Absorption in the Hugin and the Shafer-Shenoy architectures.

{X1, X2, X3, X4},

that C receives

Propagation can be defined as a sequence of inward

contains variables

message absorptions followed by a sequence of outward
message absorptions, where inward means from leaf

messages ¢>{x1 ,x2} and ¢{x2,x3}, and that the poten­
tial ¢{x3,x4} was initially associated with C. Themes­

cliques of the junction tree towards a root clique, and

sage,

outward means from the root clique towards the leaves.

¢{X1,X4},

to be sent to Dis thus

Note that the ¢5 's are called messages. In the inward
,
pass, since then ¢s = 1 for all separators, the only
difference between the two architectures is step 4 of
the Hugin procedure (see Table 1).

In the outward pass, on the other hand, the differ­
ence between the two architectures becomes more pro­
nounced. Consider clique C which, in the inward pass,
has absorbed messages from C2, . . . , Cn and sent a
message to C1. Now, having received a message from

"L:

¢{x •.x2.x3,x4}

L

¢{x.,x2}4>{x2,x3}¢{x3,x4}{1)

{X2,X3}

{X2,X3}

However, since ¢{X!,X2} does not depend on x3, we
can compute ¢{x1,x4} as

cP{x •. x4}

cl in the outward pass, it is going to send messages

=

L¢{xl.x2} L¢{x-..x3}¢{xJ,x4},
X3

X2

(2)

to 02, . . . , Cn. In the two architectures, this is done as

which reduces both space and time complexities: as­

indicated in Table

suming all binary variables, Eq.

2.

Note that in the Hugin architecture, when a clique C
absorbs a message

¢8, ,

<Ps,

it is always true that
=

L ¢c.

C\S;

This fact is exploited in the Hugin architecture to
avoid performing repeated multiplications. Hence, in
the outward pass of the Hugin algorithm a clique C can
compute the product of all messages from its neigh­
bours simply by 'substituting' one term of ¢c using
division. Thus, the main difference between the Hugin
and the Shafer-Shenoy architectures is the use of di­
vision. As we shall see later, avoiding division is ad­
vantageous when we use nested junction trees for in­
ference.

1

implies a space cost

of 16 and a time cost (i.e., number of arithmetic op­
erations) of 64

(3

x

16 for the multiplications and 16

for the marginalization), whereas Eq.

2 implies a space

cost of 8 and a time cost of 48.
Basically, the trick in Eq. 2 is all there is to inference
in Bayesian networks. In fact, the first general infer­
ence methods for probabilistic networks developed by
Cannings, Thompson & Skolnick (1976) used exactly

that method. Their method is referred

to as "peel­

ing", since the variables are peeled off one by one un­
til the desired marginal has been computed. In most
inference methods for Bayesian networks, finding the
peeling order (elimination order) is done

as

an off-line,

one-off process. That is, the acyclic, directed graph of
the Bayesian network is moralized and triangulated
(Lauritzen & Spiegelhalter 1988), and a secondary

The computation of messages is carried out as indi­

structure referred to as a junction tree (Jensen 1988)

cated in Tables 1 and

is constructed once and for all. The junction tree is

2,

namely by multiplying all

<Pv, 's and ¢$ 's together and marginalizing from that
)

product. However, often ¢5 can be computed via a series of marginalizations over smaller tables , which can

greatly reduce both space and time complexities.
As a small illustrative example, assume that clique C

then used as an efficient and versatile computational
device.
Now, since Eq.

2

expresses nothing but inference in a

probabilistic network consisting of four variables and
three probability potentials, the computation of the

Kj�rulff

296

Hugin

1.

- 1>
1>*cc

2.

For j

=

¢8j

Table

message,

2:

Clique

¢{x,,x4},

C

r/>s,

4.

r/>c

:=
:=

1>8,
r/>s,

1.

· -

2

to

n

For j

2 to n
·

do

II

i=l, ... ,j - l ,j+ l , ... ,n

1>8,

1>*Si-- 2::: 1>6

2::: rt>'C

=

=

1>6 = 1/Jc

do

C\Si

C\S1

¢8,

r/>s,

2.

:=

1>8,

¢'C

absorbs a message from clique

C1

and sends messages to its remaining neighbours.

can be formulated as inference in

a junction tree with cliques

{X3, X4}.

3.

Shafer-Shenoy

{X1,X2}, {X2,X3}, and

Thus, we have a junction tree in the clique

of another junction tree!

For slightly more compli­

cated examples the nesting level might even be larger
than two as shall be exemplified in Section

2,

where

we describe the construction of nested junction trees.
Section

3

describes the space and time costs associ­

ated with computation in nested junction trees, and
Section

4 briefly explains how the space and time costs

of an inward probability propagation can be computed
through propagation of costs. Section

5

presents the

results of an empirical study of the usefulness of nested
junction trees. Finally, in Section

6,

we conclude the

work by discussing the benefits and as well as the lim­
itations of nested junction trees.

2

CONSTRUCTING NESTED
JUNCTION TREES

s1

=

s2

=

s3

=

v1

=

{22, 26, 83, 84,
94,95, 168}
{83, 84, 97,
164, 168}
{94, 95, 97}
{22, 26, 97}

To illustrate the process of constructing nested junc­
tion trees, we shall consider the situation where clique

c16

is going to send a message to clique

the junction tree of a subnet, here called
of the

Munin

c13 in
Munin1,

network (Andreassen, Jensen, Ander­

sen, Falck, Kjrerulff, Woldbye, S�rensen, Rosenfalck
& Jensen

1 989).

Clique

C16

and its neighbours are

shown in F igure 1. For simplicity, the variables of C16,

{22, 26, 83, 84, 94, 95, 97, 164, 168},

are named corre­

sponding to their node identifiers in the network, and
they have

4, 5, 5, 5, 5, 5, 5, 7, and 6

states, respec­

tively.
The set of probability potentials for a Bayesian net­
work defines the cliques of the moral graph derived
from the acyclic, directed graph associated with the
network (notice that the directed graph is also de­
That is, each potential r/>v
(e.g., given by a conditional probability table) induces

fined by the potentials).

F igure 1:
and

r/>s3

Clique

C16

receives messages

from cliques c19, c26' and

c63'

¢s11 r/>s2,

respectively.

Based on these messages and the probability potential,
r/>v,

=

P(97l22, 26),
cl3·

sent to clique

a message must be generated and

Nested Junction Trees

297

a complete subgraph. A junction tree is then con­
structed through triangulation of the moral graph.
Thus, in our example, the undirected graph induced
by the potentials ¢sll c/Js2, ¢s3, and ¢v1 may be
depicted as in Figure 2. At first sight this graph
looks quite messy, and it might be hard to be­
lieve that its triangulated graph will be anything
but a complete graph. However, a closer exam­
ination reveals that the graph is already triangu­
lated and that its cliques are {83, 84, 97, 164, 168} and
{22,26,83,84,94,95,97,168}.

Figure 3: The undirected graph induced by potentials
¢s1, c/Js3, and ¢ v,.

down. The two potentials induce the graph shown in
Figure 4, hence a further break-down is possible as the
graph is triangulated and contains two cliques.

Figure 2: The undirected graph induced by potentials
¢sl, ¢s2, ¢s3, and ¢v,.
So, the original 9-clique (i.e., clique containing nine
variables) with a table of size 2,625,000 has been re­
duced to a junction tree with a 5-clique and an 8-clique
with tables of total size 381,000 (including a separator
table of size 750).
Thus encouraged we shall try to continue our clique
break-down! In the two-clique junction tree, the 5clique has associated with it only potential ¢s2, so
it cannot be further broken down. The 8-clique, on
the other hand, has got the remaining three potentials
associated with it. These potentials (i.e., ¢s1, ¢s3, and
¢v,) induce the graph shown in Figure 3.
This graph also appears to be triangulated and con­
tains the 5-clique {22, 26, 94,95,97} and the 7-clique
{22, 26, 83, 84, 94,95,168} with tables of total size
78,000 (including a separator table of size 500). The
reduced space cost is 375,000- 78,000 297,000.
=

In this junction tree, the 7-clique cannot be further
broken down since it contains only one potential. The
5-clique, however, contains two potentials, ¢s3 and
¢v1 , and can therefore possibly be further broken

Figure 4: The undirected graph induced by potentials
¢s3 and ¢v ,.
Now, no further break-down is possible. The result­
ing nested junction tree, shown in Figure 5, has a
total space cost of 81,730, which is significantly less
than the original 2, 625,000. Carrying out the nesting
to this depth, however, have a big time cost, since,
for example, 500 message passings is needed through
the separator {83,84, 97,168} in order to generate the
message from C16 to C13. A proper balance between
space and time costs will most often be of interest. We
shall address that issue in the next section.
3

SPACE AND TIME COSTS

As already discussed in Section 2, the smallest space
cost of sending a message from a clique C equals the
accumulated size of the clique and separator tables of
the nested junction tree(s) induced by the potentials
of C (i.e., messages sent to C and potentials initially

298

Kj�rulff

872, 750, 000

t

525,000

22,26, 83,84,94,95,164,168
2, 625,000

5, 250 (7x)

Figure 5: The nested junction tree for clique C16 in

Munin 1.

Only the connection to neighbour C13 is shown. The

small figures on top of the cliques and separators indicate table sizes, assuming no nesting. The labels attached
to the arrows indicate

(1) the

time cost of sending a single message, and

compute the separator marginal one nesting level up.

(2) the

number of messages required to

299

Nested Junction Trees

associated with it). For example, sending a message

from clique Cb (see Figure 5) has a smallest space cost
of

75, 000 + 500 + (100 + 5 + 125)

=

75, 730.

Note that

this smallest space cost results from choosing clique

Cc

as root. Choosing clique Cd as root instead would

make the inner-most junction tree (cliques

Ce

and C1)

collapse to a single clique with a table of size
resulting in an overall space cost of

2, 500,

77, 500. A

sim­

case be

2, 625,000

and 5

x

2, 625, 000

=

13, 125,000,

respectively. The similar costs in the four-level nest­
ing case are

81, 730 and 872,750,000, which are 32
67 times larger, respectively, than
conventional costs. A more satisfying result is ob­

times smaller and
the

tained by avoiding the two inner-most nestings (i.e.,
collapsing cliques Cc, Cd, Cd, and c,, which happens

if instead of Ca w e let Cb be root) , in which case we get

ilar analysis shows that, depending on which cliques

costs

are selected as roots, the space cost of generating the

only slightly larger than in the conventional case, but

message for clique cl3 varies from 81,730 to

with a 7 times reduction in the space cost.

381,000.

381,000 and 14,211, 750 with the time cost being

Let us consider the time cost of sending a single mes­
sage from clique

Cb

to clique Ca, and assume that

4

PROPAGATION OF COSTS

clique Cc is selected as root. To generate a message
from Cb,

Cc

must receive five messages from Cd, corre­

sponding to the number of states of variable

97 which

The calculation of the costs of performing inward prob­
ability propagation toward a root clique

C

can be for­

is a member of the (Ca, Cb)-separator but not a mem­

mulated elegantly through propagation of costs in the

ber of Cc. The time cost of each message from Cd is

junction tree. Let, namely, each clique send a cost mes­

17, 000 as

shall be explained shortly.

sage (consisting of a space cost and a time cost) being

Given this information we can now do our calculations.
Generating a message involves the operations of multi­
plication (of the relevant potentials) and marginaliza­
tion. The cost of multiplying the two potentials onto
the clique table is 2 times the table size. The cost of
marginalization equals the table size. Therefore, the
time cost of sending a message from clique Cb is
5 X

(17,000 + 3

X

75, 000)

=

1, 210,000.

Notice that the cost of marginalization equals the size
of the larger of the clique table and the separator ta­

the sum of the costs of sending a message (i.e, a proba­
bility potential) and the sum of the cost messages from
its remaining neighbours. Then a cost message states
the cost of letting the sender be root in the subtre e
containing the sender and the subtrees from which it
received its messages. Thus, when C has received cost
messages from all of its neighbours, the overall cost
of an inward probability propagation is given by the

sum of its cost messages plus the co st of computing
the C-marginal potential.
Now, if we perform an outward propagation of costs

C,

ble. For example, whenever Ca has received a message

from

from Cb, it must basically run through the

cost of an inward probability propagation to any other

separator table.

(Cl6,Cl3)­

Smart indexing procedures might,

we will subsequently be able to compute the

clique, just as we did for clique C!

however, reduce that cost dramatically. So, our cost
considerations given here are worst-case.

5

EXPERIMENTS

The time cost of 17, 000 for sending a single message
from

Cd

to Cc is found when selecting c, as root; se­

lecting Ce as root instead would have a cost of

20, 625.

Clique C., must send 20 messages for C1 to be able
to generate a single message to Cc. Notice, again,
that this could be done much more efficiently, since
for each message variable

97

is fixed, effectively split­

ting the inner-most junction tree into two. However,

To investigate the practical relevance of nested junc­
tion trees, the cost propagation scheme described
above has been implemented as an extension to the
Hugin algorithm.

In order to find a proper balance

between space and time costs, the algorithm makes a
junction tree representation of a clique only if

to keep the exposition as clear and general as possible,

space_cost + --y time_cost,
·

we shall refrain from introducing smart special-case
procedures. Now using the same line of reasoning as
above, we get the time cost of
20

X

(100 + 2

X 125 +

500)

=

17, 000,

where each marginalization has a cost of

500 since the

table of C 1 is smaller than the (Cc, Cd)-separator ta­
ble.

is smaller than it is using conventional representation.
The time factor, /, is chosen by the user.
Cost measurements have been made on the following
ten large real-world networks. The KK network is an
early prototype model for growing barley.

The Link

network is a version of the LQT pedigree by Professor
Brian Suarez extended for linkage analysis (Jensen
Kong

nested) message generation would in the C16-to-C13

agnosing lymph node diseases (Heckerman, Horvitz

1996).

&

The Pathfinder network is a tool for di­

The space and time costs of conventional (i.e., non­

&

Kj�rulff

300

Nathwani

1992).

The

Pignet

network is a small subnet

of a pedigree of breeding pigs. The Diabetes network is

method for inward probability propagation, as indi­
cated in Section 1. However, in the example shown in
the peeling method is not able to exploit e.g.

a time-sliced network for determining optimal insulin

Figure

dose adjustments (Andreassen, Hovorka, Benn, Olesen

the conditional independence of variable

& Carson 1991). The Munin1-4 networks are different

ables

subnets of the

168.

The

Water

Munin

sy stem (Andreassen et al.

1989).

network is a time-sliced model of the bio­

logical processes of a water treatment plant (Jensen,
Kjrerulff, Olesen & Pedersen

1989).

ward probability propagation is measured for each of
obtained.

22, 26, 94,

and

95

given variables

164 of vari­
83 , 84, 97, and

So, the technique presented in this paper is much

more general than peeling.
Note that if the triangulated version of the graph in­
duced by the separators of a clique is not complete (i.e.,

The average space and time costs of performing an in­
these ten networks.

5

Table 5 summarizes the results

All space/time figures should be read

as

contains more than one clique), then one

fill-in links

of

that clique are

more of the

or

redundant; that is, the

clique can be split into two or more cliques. Therefore,
assuming triangulations without redundant

fill-ins, the

The first pair of space/time columns lists

nested junction trees technique cannot be exploited in

the costs associated with conventional junction tree

the outward pass of the Hugin algorithm, since mes­

millions.

propagation. The remaining three pairs of space/time

sages have been received from all neighbours (includ­

columns show, respectively,

least possible space

ing the recipient of the message). In the Shafer-Shenoy

cost with its associated time cost, the costs corre­

algorithm, on the hand, there is no difference between

sponding to the highest average relative saving, and

the inward and the outward passes, which makes the

the

the least possible time cost with its associated space

nested junction trees technique well-suited for that al­

cost. The percentages in parentheses indicate the rela­

gorithm. A detailed comparison study should be con­

tive savings calculated from the exact costs. The high­

ducted to establish the relative efficiency of the nested

est average relative savings were found by running the

junction trees technique in the two architectures.

algorithm with various 1-values for each network. The
optimal value, 1*, varied from

0.25

to

0.45.

Table 3 shows that the time costs associated with min­
imum space costs are much larger than the time costs
of conventional (inward) propagation. Thus, although
maximum nesting yields minimum space cost, it is not
recommended in general, since the associated time cost
may be unacceptably large.

Acknowledgements

I

wish to thank Steffen L. Lauritzen for suggesting the

cost propagation scheme, Claus S. Jensen for provid­
ing the

Pignet networks, David Beckerman
Pathfinder network, Kristian G. Ole­
sen for providing the Munin networks, and Steen An­
dreassen for providing the Diabetes network.
Link

and

for providing the

However, as the 1 = 1* columns show, a moderate
increase in the space costs tremendously reduces the
time costs.

(The example in Figure 5 demonstrates

the dramatic effect on the time cost as the degree of
nesting is varied.)

In fact, the time costs of conven­

tional and nested computation are roughly identical

for

1

=

1*, while space costs are

still

significantly re­

duced for most of the networks.

