
Bayesian optimisation has gained great popularity as a tool for optimising the parameters of machine learning algorithms and models. Somewhat ironically, setting
up the hyper-parameters of Bayesian optimisation methods is notoriously hard.
While reasonable practical solutions have been advanced, they can often fail to
find the best optima. Surprisingly, there is little theoretical analysis of this crucial
problem in the literature. To address this, we derive a cumulative regret bound
for Bayesian optimisation with Gaussian processes and unknown kernel hyperparameters in the stochastic setting. The bound, which applies to the expected
improvement acquisition function and sub-Gaussian observation noise, provides
us with guidelines on how to design hyper-parameter estimation methods. A simple simulation demonstrates the importance of following these guidelines.

1

Introduction

Bayesian optimisation has become an important area of research and development in the field of
machine learning, as evidenced by recent media coverage [7] and a blossoming range of applications to interactive user-interfaces [4], robotics [16, 19], environmental monitoring [18], information
extraction [27], combinatorial optimisation [13, 28], automatic machine learning [3, 23, 25, 26, 11],
sensor networks [8, 24], adaptive Monte Carlo [17], experimental design [1] and reinforcement
learning [5].
In Bayesian optimisation, Gaussian processes are one of the preferred priors for quantifying the
uncertainty in the objective function [5]. However, estimating the hyper-parameters of the Gaussian
process kernel with very few objective function evaluations is a daunting task, often with disastrous
results as illustrated by a simple example in [2]. The typical estimation of the hyper-parameters by
maximising the marginal likelihood [22, 15] can easily fall into traps; as shown in [6]. To circumvent
this, [28] introduced adaptive bounds on the range of hyper-parameter values.
Several authors have proposed to integrate out the hyper-parameters using quadrature and Monte
Carlo methods [21, 4, 23]. Despite the advantages brought in by this more sophisticated treatment
of uncertainty, Bayesian optimisation can still fall in traps, as illustrated with a simple simulation
example in this paper.
To the best of our knowledge, the work of Bull [6] provides the only known regret bound for
Bayesian optimisation when the hyper-parameters are unknown. By introducing lower and upper
bounds on the possible range of hyper-parameters values, Bull obtains convergence rates for deterministic objective functions, when estimating the hyper-parameters by maximum likelihood. Here,
we extend the work of Bull to stochastic objective functions. Our results apply to sub-Gaussian
noise, e.g., symmetric Gaussian, Bernoulli, or uniform noise.
1

2

Bayesian optimisation

We consider a sequential decision approach to global optimization of smooth functions f (¬∑) : X 7‚Üí
R over an index set X ‚äÇ Rd . At the t-th decision round, we select an input xt ‚àà X and observe the
value of a black-box reward function f (xt ). The returned value may be deterministic, yt = f (xt ),
PT
or stochastic, yt = f (xt ) + t . Our goal is to maximise the cumulative rewards t=1 f (xt ). That
is, we wish to approach the performance of the optimiser x‚àó = arg maxx‚ààX f (x) rapidly. Since the
optimiser is unknown, we have to trade-off exploitation and exploration in the search process.
This sequential optimisation approach is natural when the function does not have an obvious mathematical representation (e.g., when querying people to maximize some objective) or when the function is too expensive to evaluate (e.g., as in control problems and automatic algorithm configuration
with massive datasets and models).
Although the function is unknown, we assume that it is smooth. It is natural to adopt a Bayesian
modelling approach whereby one introduces a prior to encode our beliefs over the smoothness of
the function, and an observation model to describe the data Dt = {x1:t , y1:t } up to the t-th round.
Using these two models and the rules of probability, we derive a posterior distribution p(f (¬∑)|Dt )
from which we can carry out inference about properties of f (¬∑) in light of the data, such as the
location of its maxima.
2.1

Bayesian optimisation with Gaussian processes

A Gaussian processes (GP) offer a flexible and relatively simple way of placing priors over functions;
we refer the reader to [22] for details on these stochastic processes. Such priors are completely
characterised by a mean function m(¬∑) and a covariance kernel k(¬∑, ¬∑) on the index sets X and
X ‚äó X . In particular, given any finite collection of inputs x1:t the outputs are jointly Gaussian,
f (x1:t )|Œ∏ ‚àº N (m(x1:t ), KŒ∏ (x1:t , x1:t )),
where KŒ∏ (x1:t , x1:t )ij = k Œ∏ (xi , xj ) is the covariance matrix (parametrised by Œ∏) and m(x1:t )i =
m(xi ) the mean vector. For convenience, we assume a zero-mean prior. We consider the following
types of covariance kernels
Œ∏
kSE
(x, x0 )

=

Œ∏
kMateÃÅrn(5/2)
(x, x0 )

=

where r

=

exp(‚àí 12 r2 )
‚àö
‚àö
exp(‚àí 5r)(1 + 5r + 53 r2 )
2 ‚àí1

(x ‚àí x0 )T diag(Œ∏ )

(1)
(2)

(x ‚àí x0 ).

Both kernels are parametrised by d length-scale hyper-parameters Œ∏i . These kernels work well in
situations where little is known about the space in question, although the MateÃÅrn tends to make less
stringent smoothness assumptions, thus making it a good fit for Bayesian optimization.
We assume that the observations of the function at any point xt are corrupted by œÉ-sub-Gaussian
noise yt = f (xt ) + t . Our theoretical results cover this general type of noise, which encompasses
symmetric Gaussian and Bernoulli noise. However, for ease of presentation, we will focus on the
tractable case of Gaussian noise t ‚àº N (0, œÉ 2 ) in this section. We refer the reader to [4] for an
example of discrete noise, which necessitates the introduction of approximate inference methods.
Given the data Dt = {x1:t , y1:t }, the joint distribution of the data and an arbitrary evaluation point
x is


  Œ∏

y1:t
Kt + œÉ 2 I kŒ∏t (x)
Œ∏ ‚àº N 0,
.
f (x)
kŒ∏t (x)T
k Œ∏ (x, x)
where KŒ∏t = KŒ∏ (x1:t , x1:t ) and kŒ∏t (x) = kŒ∏ (x1:t , x). It is well known that the predictive posterior
distribution of any evaluation point x is marginally Gaussian f (x)|Dt , Œ∏ ‚àº N (¬µt (x; Œ∏), œÉt (x; Œ∏))2 ,
where
¬µt (x; Œ∏)
KtŒ∏ (x, x0 )
œÉt (x; Œ∏)2

=

E [f (x)|Dt ] = kŒ∏t (x)T (KŒ∏t + œÉ 2 I)‚àí1 y1:t ,
0

Œ∏

0

= E [f (x)f (x )|Dt ] = k (x, x ) ‚àí
=

KtŒ∏ (x, x).

kŒ∏t (x)T (KŒ∏t

(3)
+œÉ

2

I)‚àí1 kŒ∏t (x0 )

(4)
(5)

2

Having specified a distribution over the target function and a mechanism for updating this distribution as data arrives, we turn our attention to the problem of selecting an acquisition function Œ±(¬∑|Dt )
for choosing the next query point,
xt+1 = arg max Œ±(x|Dt ).
x‚ààX

The choice of acquisition function is crucial. It must be efficiently computable since it will be
optimized at every decision round. More subtly, it must use the statistics of p(f (x)|Dt , Œ∏) to tradeoff exploitation (where ¬µt (x; Œ∏) is high) and exploration (where œÉt (x; Œ∏) is high) effectively.
Although many acquisition functions have been proposed (see for example [20, 14, 10, 9, 23, 11]),
the expected improvement (EI) criterion remains a default choice in popular Bayesian optimisation
packages, such as SMAC and Spearmint [13, 23]. If we let x+
t = arg maxi‚â§t f (xi ; Œ∏) denote the
current incumbent, the EI acquisition function can be written in closed form as
Œ±Œ∏EI(f) (x|Dt ) = E[max{0, f (x) ‚àí f (x+ )}|Dt ] = œÉt (x; Œ∏)[aŒ¶(a) + œÜ(a)]
with a =

¬µt (x;Œ∏)‚àíf (x+ )
,
œÉt (x;Œ∏)

(6)

and œÜ and Œ¶ are the standard normal density and distribution functions

respectively. In the special case of œÉt (x; Œ∏) = 0, we set Œ±Œ∏EI(f) (x|Dt ) = 0. The expected improvement is best understood as a family of one-step-decision heuristics [5], with many members in this
family. While the above member is reasonable for deterministic optimization, the noise in the evaluation of the incumbent, f (x+ ), causes it to be brittle in the stochastic case. In the stochastic setting,
the improvement over the best mean value ¬µ+
Œ∏ = maxx‚ààX ¬µt (x; Œ∏) seems to be a more reasonable
alternative. For this choice, we obtain a similar expression for EI,
Œ±Œ∏EI(¬µ) (x|Dt ) = E[max{0, f (x) ‚àí ¬µ+
Œ∏ }|Dt ] = œÉt (x; Œ∏)[uŒ¶(u) + œÜ(u)],
where u =

¬µt (x;Œ∏)‚àí¬µ+
Œ∏
œÉt (x;Œ∏)

(7)

. In this paper, we will consider a re-scaled version of this criterion:

u
u u
(8)
Œ±Œ∏EI (x|Dt ) = E[max{0, f (x) ‚àí ¬µ+
Œ∏ }|Dt ] = ŒΩœÉt (x; Œ∏)[ Œ¶( ) + œÜ( )]
ŒΩ ŒΩ
ŒΩ
where ŒΩ is a parameter must be estimated. Intuitively, this parameter enables us to rescale the
kernel. In the deterministic case, it plays an equivalent role to multiplying the kernel by an unknown
coefficient ŒΩ. (For notational simplicity, we are not making dependence of EI on ŒΩ explicitly in the
expression Œ±Œ∏EI (x|Dt ).)
2.2

An algorithm inspired by the theory

Our main theorem (Theorem 1) establishes sufficient conditions to guarantee that the regret of a
Bayesian optimisation algorithm with EI and hyper-parameter estimation, vanishes as the number
of function evaluations increases. To illustrate the value of Theorem 1, we use its guidelines to
construct an algorithm in this section.
For Theorem 1 to hold, it is necessary that we adapt the hyper-parameters in a particular manner.
First, we must ensure that that there exist upper-bounds on the hyper-parameters Œ∏, which we group
in the vector Œ∏ U ,such that the objective function f (¬∑) is an element of the reproducing kernel Hilbert
space induced by this narrower kernel HŒ∏U (X ) (these spaces will be explained in Section 3.4).
Figure 1 (right) shows what happens to the confidence intervals as the entries of Œ∏ U shrink with t,
by narrowing the kernel.
In practice, it is difficult to assess this condition. To surmount this difficulty, we draw inspiration
from [28], and propose to reduce the upper bound of the length scales Œ∏ U when the algorithm
becomes over confident. In particular, we adaptively reduce Œ∏ U whenever the model repeatedly
samples points of low posterior variance in comparison to the noise variance œÉ 2 . Once the algorithm
optimizes to the precision of the noise variance, it suffers from a slower convergence rate.
By choosing to lower the upper bound as proposed in Algorithm 1, we essentially enable the algorithm to explore more, as opposed to over-exploiting a local mode. This is illustrated in Figure 1,
which depicts the result of running the proposed algorithm and a standard Bayesian optimisation
scheme. We will explain the experiment in more detail at the end of this section.
3

Algorithm 1 Bayesian Optimization with Hyper-parameter Optimization.
input Threshold tœÉ > 0, percentage of reduction parameter p ‚àà (0, 1), and c2 > c1 > 0.
input Lower and upper bounds Œ∏ L , Œ∏ U for the hyper-parameters.
input Initial length scale hyper-parameter Œ∏ L ‚â§ Œ∏ 1 ‚â§ Œ∏ U .
1: Initialize E = 0
2: for t = 1, 2, . . . do
3:
Select xt = arg maxx‚ààX Œ±Œ∏EIt (x|Dt‚àí1 )
2
4:
if œÉt‚àí1
(xt ; Œ∏t ) < tœÉ œÉ 2 then
5:
E =E+1
6:
else
7:
E=0
8:
end if
9:
Augment the data Dt = Dt‚àí1 ‚à™ (xt , yt )
10:
if E = 5 then



11:
Restrict Œ∏ U such that Œ∏iU = max min p maxj {Œ∏jU }, Œ∏iU , Œ∏iL
12:
E=0
13:
end if
14:
Choose hyper-parameters Œ∏ t+1 such that Œ∏ L ‚â§ Œ∏ t+1 ‚â§ Œ∏ U .
Œ∏
Œ∏ t+1
Œ∏ t+1
Œ∏ t+1
15:
Choose hyper-parameter ŒΩt t+1 such that c1 Œæt+1
‚â§ ŒΩt+1
‚â§ c2 Œæt+1
, where ŒætŒ∏t is defined in
Equation (9).
16: end for
As Œ∏ U is successively decreased, after a finite number of iterations, we can ensure that f (¬∑) ‚àà
HŒ∏U (X ) as long as there exists Œ∏ ‚â• Œ∏ L such that f (¬∑) ‚àà HŒ∏ (X ). In practice, we advocate a
conservative choice of Œ∏ L whenever we have little knowledge of the range of possible values of Œ∏.
Theorem 1 also imposes a condition on ŒΩ. To satisfy it, we constrain ŒΩtŒ∏t to be in the interval
c1 ŒætŒ∏t ‚â§ ŒΩtŒ∏t ‚â§ c2 ŒætŒ∏t , where


p
ŒætŒ∏t = IŒ∏t (yt‚àí1 ; ft‚àí1 ) + log1/2 (2t2 œÄ 2 /3Œ¥) IŒ∏t (yt‚àí1 ; ft‚àí1 ) + log(t2 œÄ 2 /3Œ¥) .
(9)
(The information gain will be defined in Section 3.3.) The careful reader may have noticed that
the above condition does not match perfectly the condition detailed in Theorem 1. Upon closer
examination, however, we see that replacing the maximum information gain Œ≥TŒ∏ with IŒ∏ (yT ; fT )
does not break the convergence result. We have used Œ≥TŒ∏ in Theorem 1 instead of IŒ∏ (yT ; fT ) simply
to simplify the presentation.
In practice, we could use a number of strategies for estimating the hyper-parameters, provided they
fall within the bounds set by Theorem 1. In particular, we could use maximum likelihood to estimate
the hyper-parameters in this constrained space. Note that the ŒΩ parameter could also be treated as a
kernel hyper-parameter (kernel scale), therefore removing the need of estimating it separately.
Finally, the astute reader would have noticed the parameters tœÉ , p, c2 and c1 in the algorithm. If
we want to achieve an accuracy comparable to the noise variance, we should set tœÉ = 1. The other
parameters simply determine how fast the algorithm converges and should be set to reasonable fixed
values, e.g. p = 0.5, c2 = 1 and c1 = 0.001. Provided tœÉ > 0, p ‚àà (0, 1) and c2 > c1 > 0, the
theory is satisfied.
If we have strong beliefs about our GP prior model, it may seem unnecessary to estimate our parameters with Algorithm 1. When our prior belief is misplaced, however, we could fail to converge if
we were to follow the traditional probabilistic approach. We provide an illustration of this effect by
optimize the following stochastic function:
1
2
f (x) = 2kŒ∏SE
(x1 , x) + 4kŒ∏SE
(x2 , x) + 

over the interval [0, 1], where Œ∏1 = 0.1, Œ∏2 = 0.01, x1 = 0.1, x2 = 0.9, and  is zero-mean Gaussian
with 10‚àí2 standard deviation. Figure 1 compares Algorithm 1 against standard Bayesian optimisation with the same EI function, but using slice sampling to infer the kernel hyper-parameters (without
imposing the theoretical bounds on the hyper-parameters). We see that, in the absence of reasonable
4

4

4

3

3

2

2

1

1

0

0

1

1

2
0.0

0.2

0.4

0.6

0.8

2
0.0

1.0

4

4

3

3

2

2

1

1

0

0

1

1

2
0.0

2
0.0

0.2

0.4

0.6

0.8

1.0

4

4

3

3

2

2

1

1

0

0

1

1

2
0.0

0.2

0.4

0.6

0.8

2
0.0

1.0

t = 20

0.2

0.4

0.6

0.8

1.0

t = 40

0.2

0.4

0.6

0.8

1.0

t = 60

0.2

0.4

0.6

0.8

1.0

Figure 1: Convergence of EI with slice sampling over the kernel hyper-parameters [left] and EI
using Algorithm 1 [right] at three function evaluation steps (t). The objective function (in blue)
was constructed so that it has a trap. Unless EI with slice sampling hits the narrow optimum by
random chance, it becomes too confident and fails to converge after 60 evaluations. In contrast,
the confidence bounds for Algorithm 1 can increase enabling it to sample the function in a more
reasonable way and thus find the optimum.

prior beliefs, conditions like the ones detailed in our theoretical results are necessary to guarantee
reasonable sampling of the objective function. (The same behaviour for the plot on the left is observed if we replace slice sampling with maximum likelihood estimation of the hyper-parameters.)
While heteroskedastic GP approaches could mitigate this problem, there are no theoretical results to
guarantee this to the best of our knowledge.

3

Theoretical analysis

Our theoretical analysis uses regret to measure convergence and information gain to measure how
informative the samples are about f (¬∑). It assumes that the noise process t is sub-Gaussian, and
that the function f (¬∑) is smooth according to the reproducing kernel Hilbert space (RKHS) associated with the GP kernel k Œ∏ (¬∑, ¬∑). Before presenting our main result, we briefly review these four
background areas.
5

3.1

Background: Regret

As in [24], we will measure the performance of the Bayesian optimization algorithm using regret.
The instantaneous regret at iteration t is defined as rt = f (x‚àó ) ‚àí f (xt ). The corresponding cumulaPT
tive regret after T iterations is RT = t=1 rt . While the regret measures are never revealed to the
algorithm, bounds on these enable us to assess how rapidly the algorithm is converging.
3.2

Background: Sub-Gaussian noise

We assume independent œÉ-sub-Gaussian noise. Formally, we say t is œÉ-sub-Gaussian if there exists
a œÉ ‚â• 0 such that
 2 2
œÅ œÉ
E [exp(œÅt )] ‚â§ exp
‚àÄœÅ ‚àà R.
2
In other works, t is œÉ-sub-Gaussian if its Laplace transform is dominated by the Laplace transform
of a Gaussian random variable with zero mean and variance œÉ 2 . It is easy to show that if t is
sub-Gaussian, then E[t ] = 0 and Var[t ] ‚â§ œÉ 2 .
There are many examples of sub-Gaussian variables, including zero-mean Gaussian random variables with variance œÉ 2 , symmetric Bernoulli random variables and symmetric uniform distributions.
3.3

Background: Information gain

To measure the reduction in uncertainty about f (¬∑) from observing yA for a set of sampling points
A ‚äÇ X , we need to introduce the concept of information gain, which is defined as the mutual
information between f (¬∑) and a set of observations yA :
I(yA ; f (¬∑)) = H(yA ) ‚àí H(yA |f (¬∑)).

(10)

This concept plays a central role in the results of [24], who also define the maximum information
gain Œ≥T after T decision rounds as
Œ≥T =

I(y1:t ; f (¬∑)).

(11)

1
log |I + œÉ ‚àí2 KŒ∏A |.
2

(12)

max

A‚äÇX :|A|=T

Note that for Gaussian distributions,
Œ≥TŒ∏ =

max

A‚äÇX :|A|=T

Our regret bounds will be given in terms of Œ≥TŒ∏ . It should perhaps be clarified that the bounds apply
to œÉ-sub-Gaussian noise, despite the appearance of the variable Œ≥TŒ∏ in their statements.
3.4

Background: Reproducing kernel Hilbert spaces

To discuss convergence, we must state formally what we mean by f (¬∑) being smooth. In short, we
assume that f (¬∑) is an element of an RKHS with reproducing kernel k(¬∑, ¬∑). For an intuitive grasp
of this formalisation of smoothness, we need to briefly review some RKHS fundamentals. These
fundamentals are also evoked in our proofs.
Let Lx be an evaluation functional: Lx f (¬∑) = f (x). A (real) RKHS H is a Hilbert space of real
valued functions with the property that for each x ‚àà X , the evaluation functional is bounded. That
is, there exists a positive constant M = Mx such that |Lx f (¬∑)| = |f (x)| ‚â§ M kf (¬∑)kH for all
functions f (¬∑) ‚àà H, where k ¬∑ kH denotes the norm in the Hilbert space. If H is an RKHS, by the
Riesz Representation Theorem, there exists an element k(¬∑, x) ‚àà H with the property,
f (x) = Lx f (¬∑) = hk(¬∑, x), f (¬∑)i

(13)

for all x ‚àà X and f (¬∑) ‚àà H, where h¬∑, ¬∑i denotes the inner product in H.
Pn
To construct H, we consider the linear manifold t=1 Œªt k(¬∑, xt ) for all choices of n, Œª1 , . . . , Œªn
and x1 , . . . , xn ‚àà X , with inner product
n
n
n X
n
n
X
X
X
X
h
Œªi k(¬∑, xi ),
Œªj k(¬∑, xj )i =
Œªi k(xi , xj )Œªj = k
Œªi k(¬∑, xi )k2H ‚â• 0.
i=1

j=1

i=1 j=1

i=1

6

(14)

The above norm is non-negative because of the positive-definiteness of k(¬∑, ¬∑). Clearly, for any
element f (¬∑) of this linear manifold,
n
n
X
X
f (xj ) = hf (¬∑), k(¬∑, xj )i = h
Œªi k(¬∑, xi ), k(¬∑, xj )i =
Œªi k(xi , xj )
i=1

(15)

i=1

A consequence of this is that for any Cauchy sequence {fn (¬∑)}, we have the following bound by
Cauchy-Schwartz: |fn (x)‚àíf (x)| = hfn (¬∑)‚àíf (¬∑), k(¬∑, x)i ‚â§ kfn (¬∑)‚àíf (¬∑)kH kk(¬∑, x)kH . In words,
norm convergence implies point-wise convergence.
The preceding steps illustrate that we can construct a unique RKHS for any positive definite kernel
k(¬∑, ¬∑). The converse is also true (Moore-Aronszajn Theorem).
A positive definite function k(¬∑, ¬∑), under general Rconditions,
has an eigenvector-eigenvalue deR
composition. Suppose k(¬∑, ¬∑) is continuous and X X k 2 (x, y)dxdy < ‚àû, then there exists
an orthonormal sequence of continuous
eigenfunctions q1 (¬∑), q2 (¬∑), . . . and eigenvalues ‚àÜ1 ‚â•
P‚àû
‚àÜ2 ‚â• . P
. . ‚â• 0, with k(x, y) = ŒΩ=1 ‚àÜŒΩ qŒΩ (x)q
R ŒΩ (y). Next, consider the orthonormal expansion
‚àû
f (¬∑) = ŒΩ=1 fŒΩ qŒΩ (¬∑) with coefficients fŒΩ = X f (x)qŒΩ (x)dx. It is easy to prove that f (¬∑) is an
element of the RKHS associated with k(¬∑, ¬∑) if and only if
kf (¬∑)k2H =

‚àû
X
fŒΩ2
< ‚àû.
‚àÜŒΩ
ŒΩ=1

(16)

To obtain the above finiteness condition, the coefficients fŒΩ of the expansion of f (¬∑) must decay
quickly. For the kernels we consider in this paper, elements of RKHS can uniformly approximate any
continuous function with compact support. Therefore, RKHS is well suited as a tool for analyzing
convergence behaviors of Bayesian optimization algorithms.
3.5

Main result

In this section, we present our regret bound and sketch its proof. For space considerations, detailed
proofs appear in the appendix provided in the supplementary material.
As discussed when presenting the algorithm, our theorem assumes bounds on the kernel hyperparameters of the form Œ∏ L ‚â§ Œ∏ t ‚â§ Œ∏ U for all t ‚â• 1 with f (¬∑) ‚àà HŒ∏U (X ). While we could recall
all the conditions on the kernel function necessary for our theorem to apply, we simply restrict the
family of kernels to one that satisfies the conditions detailed in [6]. Without loss of generality, we
assume that k(x, x)= 1.
Our theorem characterising the growth in the cumulative regret RT with the number of function
evaluations T follows.
Qd Œ∏U
Theorem 1. Let C2 := i=1 Œ∏iL . Suppose Œ∏ L ‚â§ Œ∏ t ‚â§ Œ∏ U for all t ‚â• 1 and f (¬∑) ‚àà HŒ∏U (X ). If
i
q



1/2
Œ∏ 2
Œ∏
2 2
Œ∏
ŒΩt = Œò Œ≥t‚àí1 + log (2t œÄ /3Œ¥) Œ≥t‚àí1
+ log(t2 œÄ 2 /3Œ¥) for all t ‚â• 1. Then with probability at least 1 ‚àí Œ¥, the cumulative regret obeys the following rate:
 q

L
Œ∏
RT = O Œ≤T Œ≥T T ,
(17)
where Œ≤T = 2 log
C2 kf k2H

Œ∏U

T
œÉ2



L

Œ≥TŒ∏ ‚àí1 +

‚àö

8 log

T
œÉ2



log1/2 (4T 2 œÄ 2 /6Œ¥)


‚àö

C2 kf kHŒ∏U (X ) +


q
L
Œ≥TŒ∏ ‚àí1 +

(X ) .

Our result is analogous to Theorem 3 of [24] which proves convergence rates for the GP-UCB
algorithm in the agnostic setting. Their result, however, does not allow for the estimation of hyperparameters. In addition, our algorithm does not require explicit knowledge of the RKHS norm of
the objective function while GP-UCB does require this.
Using the results of Srinivas et al. we can further detail these rates as follows.
Theorem 2 (Theorem 5 of [24]). Let X ‚äÜ Rd be compact and convex, d ‚àà N. Assume the kernel
function satisfies k(x, x0 ) ‚â§ 1.
7


1. Exponential spectral decay. For the squared Exponential kernel: Œ≥TŒ∏ = O (log T )d+1 .
Œ∏
2. Power law spectral decay. For
 MateÃÅrn kernels with degree of freedom ŒΩ > 1: Œ≥T =
d(d+1)/(2ŒΩ+d(d+1))
O T
log T .

The proof of Theorem 1 is provided in the appendix. We sketch the main ideas here. Our proof
methodology is inspired by the works of [24] and [6].
We start the proof-sketch by considering the instantaneous regret:
rt

= f (x‚àó ) ‚àí f (xt )
=

+
(f (x‚àó ) ‚àí ¬µ+
Œ∏ t ) ‚àí (f (xt ) ‚àí ¬µŒ∏ t )

EI
where ¬µ+
Œ∏ t = maxx‚ààX ¬µt‚àí1 (x; Œ∏ t ) and xt = arg maxx‚ààX Œ±Œ∏ t (x|Dt‚àí1 ). T

The first challenge of the proof is to bound the difference between the posterior mean of the GP and
the objective function. Such a bound allows us to quantify the difference between our belief about
the objective function and the true objective. Specifically, we bound |¬µt‚àí1 (x, Œ∏ t ) ‚àí f (x)| ‚àÄx ‚àà X
in each iteration with high probability. By way of the Cauchy-Schwarz inequality,

1/2
Œ∏t
|¬µt‚àí1 (x, Œ∏ t ) ‚àí f (x)| ‚â§
Kt‚àí1
(x, x)
k¬µt‚àí1 (¬∑; Œ∏) ‚àí f (¬∑)kKŒ∏t
t‚àí1

‚â§

œÉt‚àí1 (x; Œ∏ t )k¬µt‚àí1 (¬∑; Œ∏) ‚àí f (¬∑)kKŒ∏t .
t‚àí1

The first part of our proof (Section A.1 in the appendix) is then dedicated to providing a probabilistic bound for k¬µt‚àí1 (¬∑; Œ∏) ‚àí f (¬∑)kKŒ∏t by means of concentration inequalities. In more detail,
t‚àí1

Lemma 3 and 4 bound separate terms that appear in k¬µt‚àí1 (¬∑; Œ∏) ‚àí f (¬∑)kKŒ∏t using properties of ret‚àí1
producing kernel Hilbert spaces and concentration results for sub-Gaussian random variables [12].
Proposition 1 combines the aforementioned results via a union bound.
The second challenge of the proof is to relate EI with quantities that are easier to analyse, such as
the posterior variance and the improvement function ItŒ∏ (x) = max{0, f (x) ‚àí ¬µ+
Œ∏ }. To bound the
instantaneous regret, we observe that
i
h
Œ∏t
+
+
Œ∏
œÉ
(x
;
Œ∏
)
.
‚àí
¬µ
(x
;
Œ∏
))
+
œï
)
‚â§
I
(x)
+
(¬µ
)
‚àí
(f
(x
)
‚àí
¬µ
(f (x‚àó ) ‚àí ¬µ+
t‚àí1
t
t
t‚àí1
t
t
t
t
t
Œ∏t
Œ∏t
Œ∏t
(Here œïŒ∏t t is a quantity that arises in the concentration bound of Proposition 1.) The improvement function is upper-bounded by a constant times the expected improvement Œ±Œ∏EIt (xt |Dt‚àí1 ) via
Lemma 9, which builds on results by [6]. The expected improvement is in turn bounded by a multiple of the posterior standard deviation œÉt‚àí1 (xt ; Œ∏ t ).
Next, we turn our attention to the term (¬µ+
‚àí ¬µt‚àí1 (xt ; Œ∏ t )). We bound this term in Lemma 10,
pŒ∏t
log(t
‚àí 1 + œÉ 2 ) ‚àí log(œÉ 2 )ŒΩœÉt‚àí1 (xt ; Œ∏ t ).
which states that ¬µt‚àí1 (xt ; Œ∏ t ) ‚àí ¬µ+
‚â§
Œ∏t
By now, we have bounded the instantaneous regret in each iteration by a multiple of the pos2
terior variance œÉt‚àí1
(x; Œ∏ L ). Finally, we can sum over t and use Lemma 7, which states that
PT
L
2
2
Œ∏L
t=t0 œÉt‚àí1 (x; Œ∏ ) ‚â§ log(1+œÉ 2 ) Œ≥T , and subsequently bound the cumulative regret by the maximal information gain, which as we said is related to the posterior variance of the GP (Lemma 5). To
accommodate different hyper-parameters, we make use of Lemma 8 from [6].

4

Conclusion

Despite the rapidly growing literature on Bayesian optimisation and the proliferation of software
packages that learn the kernel hyper-parameters, to the best of our knowledge, only Bull [6] and us
have attacked the question of convergence of GP-based Bayesian optimisation with unknown hyperparameters. Bull‚Äôs results focused on deterministic objective functions. Our new results apply to the
abundant class of noisy objective functions.

8


