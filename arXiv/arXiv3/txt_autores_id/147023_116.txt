  The way experts manage uncertainty usually changes depending on the task they are performing  This fact has lead us to consider the problem of communicating modules  task implementations  in a large and structured knowledge based system when modules have different uncertainty calculi  In this paper  the analysis of the communication problem is made assuming that  i  each uncertainty calculus is an inference mechanism defining an entailment relation  and therefore the communication is considered to be inference preserving  and  ii  we restrict ourselves to the case which the different uncertainty calculi are given by a class of truth functional Multiple valued Logics      INTRODUCTION  Most expert system  ES  building tools with uncertainty management capabilities provide a unique and global method for representing and combining evidence  Nevertheless  human experts usually change the way they manage uncertainty depending on the task they are performing  To be able to model this behaviour  an ES building tool must allow to attach different uncertainty calculi to the structures implementing the different tasks  in modular ES shells the notion of task is usually implemented as goal oriented modules  However  tasks or modules in a knowledge base are not independent one of each other  they need to cooperate and communicate  as human experts do when solving complex problems  This can be shown in the following example  A physician diagnosing a pneumonia could ask to a radiologist about the results of a radiological analysis  The simplest and more frequent type of communication is to get an  atomic  answer like   it is likely that the patient has a cavitation in his left lung   Then  to use this information in his own reasoning  the physician must only interpret in his language the linguistic expression likely used by the radiologist  and perhaps to identify it with another uncertainty term  say for example acceptab le  used by himself  But the communication could have been richer than that  atomic  answer  and consist of a more complex piece of information  For instance  the radiologist could have answered    if from a clinical point of view you are very confident that the patient has a bacterial disease and he is also inmunodepressed  then its nearly sure he has a cavitation in his left lung   As in the previous case  to use the radiologist information the physician must again interpret it  However  this time the interpretation can not be only a matter of uncertainty terms  very confident  nearly sure  but also a matter of way of reasoning  if he wants to make use of this information in other situations  i e   patients  which do not match exactly the one expressed above  Therefore  if in a knowledge base we have different uncertainty calculi for different tasks  or modules   and these modules need to communicate  a correspondence between their uncertainty calculi must be established  To model the first type of communication shown in the example  in a modular ES shell only a way of translating the languages of different uncertainty calculi  attached to different modules  is required  However  to model the second type of communication the correspondence is also required to be made inference preserving  The need to preserve sometimes inferences through the communication among tasks can be made clearer by means of another little example from an existing expert system  PNEUMON IAl  Verdaguer         for the diagnosis of    PNEUMON IA is an application developped in the modular rule MILORD  Sierra         that manages linguistically expressed uncertainty  see section   for more details   based expert system shell       Agusti Cullell  Esteva  Garcia  God   and Sierra  pneumoniae  The module  task  Bacteria of this expert system comprises the following rule    If a patient has leukopenia and left deviation then he has a bacterial disease  sure  stating that the certainty about the bacterianicity of a disease depends on the certainty of the facts leukopenia and  eft deviation  which are investigated in another module named Laboratory  Let s suppose that these two modules have different uncertainty calculi  Then we could have two types of communication between them  A first possibility is that Bacteria asks to Laboratory for the two facts  translates the answers and makes its  and  combination to conclude about bacterianicity  The second possibility is Bacteria asks the certainty value of the non atomic sentence  leucopenia and  eft deviation  and translates it  In this last case the  and  combination of the certainty values is performed in the Laboratory module  and the result is afterwards translated to the Bacteria uncertainty calculus and used to conclude about bacterianicity  It seems clear that in order to keep the coherence of the whole diagnosis task  the certainty degree of bacterianicity found out in each case should be the same  To make this sure  the correspondence between the uncertainty calculi of those modules should preserve the inferences made in the Laboratory module when moving to the Bacteria module  The general problem of analyzing conditions under which a correspondence or communication between different tasks with different uncertainty calculi preserves inference is a very hard one  In order to deal with this problem  several approaches could be taken into account  from pure logical ones to more cognitive ones  In  Meseguer         in another but not very different setting  it is argued that   if the approach taken lacks a logical basis to serve as a criterion of correctness the result may be quite ad hoc and unsatisfactory  and it will probably involve a good deal of costly engineering trial and error   Following this  argument  the approach we have chosen is a logical one  but without forgetting cognitive aspects  More concretely  our analysis will be carried out from two main points    first  we will consider uncertainty calculi as inference mechanisms defining logical entailment relationships  Therefore  correspondences  or communications  between different uncertainty calculi will be analyzed as mappings between different entailment systems   interactive algorithm for defining such inference preserving correspondences is proposed  This algorithm has been thought as a mechanism to support human experts when developing applications      ENTAILMENT SYSTEMS  Inference engines of many rule based ES can be considered as implementations of proof calculi  from a set of axioms and a set of inference rules  of some underlying Logical Systems  As it is known  every logical system should have a syntactical and semantical formalizations  The theories of Institutions and Entailments Systems allow to formalize an intuitive notion of logical system from the model and proof theoretic approach point of view respectively   Goguen and Burstall          Meseguer          Harper et a            In this way the Institution approach takes the satisfaction relation between models and sentences as basic whereas the Entailment System approach takes the entailment relation  The communication problem among tasks or modules has been introduced as the problem of defining inference preserving mappings  Therefore  in this paper we focus our attention in the entailment systems approach rather than in the Institutions one  and thus  we are mainly interested in correspondences between different entailment systems  Although a categorical definition of Entailment Systems has been given  Meseguer         for our purposes an Entailment System will consist of a pair  L       where L is a language  a set of sentences  usually built from a set of connectives and a signature that provides a set of sorted symbols   and   is an entailment relation on zLxL  i e  a relation satisfying the following properties  El   reflexivity  for any sentence E   E I  E E    mono tonicity  if r    E and r  r  then r    E E    transitivity  if r    Ei  for iE I and ru Ei  iE I     E then r    E   where r and r  are sets of sentences  and E and Ei are sentences of L  In  Meseguer        the following notion of a map of entailment systems has been proposed     and second  we will use finite truth functional multiple valued logics  MY logics  for short  as uncertainty calculi  as long as this is a simplified view of the uncertainty reasoning model that our laboratory has been working with in developing applications with the MILORD system   Sierra         mainly in the medical diagnosis field   Definition       map of entailment systems  Given the entailment systems  L      and  L          a mapping H L   L  is said to be a map of entailment systems if the following condition If T   E then H T      H E   holds for all set of sentences rand for all sentence E of L  The map H is said to be conservative if r   E whenever H T     H E    The paper is structured in the following way  After this introductory section  in section two there is a general overview on entailment systems and their inference preserving mappings  In section three  we describe the class of finite truth functional multiple valued logics we will use as uncertainty calculi for different tasks  Section four is devoted to a detailed study of inference preserving mappings for our uncertainty calculi  and finally  an  A map between entailment systems allows to preserve inference in a strict sense  In partiCular  when the map is conservative one entailment system is an extension of the other one  However these strong conditions sometimes can be weakened in the uncertainty reasoning framework  From the point of view of the correspondence problem between different tasks with different uncertainty calculi  when a task imports information from another task  it   Combining Multiple valued Logics in a Modular Expert Systems  doesn t need always to deduce exactly the s ame   conclusions as the previous one could deduce  Sometimes it only needs that its conclusions be coherent with the   deduction system of the other task   In other words  It allows its reasoning to be less accurate when dealing with the other task information  but not incorrect in any case  To model this last situation a definition weaker than the conservative one is introduced below  We will call it weak conservative  Definition       weak con servative map   Given entailment systems  L      and  L          a map H from L to L   is called weak conservative if the following condition holds  If H r  J    E  then there exists a sentence Eof L such that Tj  Eand H E  f  E   for all set of sentences r of L and all sentence E of L    If H is also a map of entailment systems we call it weak conservative map      A C LASS OF MULTIPLE VALUED LOGICS FOR THE UNCERTAINTY MANA GEMENT IN RULE BASED EXPERT SYSTEMS  Taking the uncertainty management of MILORD as a reference  in this section we consider a restricted type of MV  logics which are expressive enough to model the uncertainty reasoning used in many rule based systems  The uncertainty management approach used in MILORD has the following characteristics  Godo et al             The expert defines a set of linguistic terms expressing uncertainty corresponding to the verbal scale he will use to weight facts and rules     The set of linguistic terms is supposed to be ordered  at least partially  according to the amount of uncertainty they express  being always the booleans  true  and  false  their maximum and minimum elements respectively     The combination and propagation of uncertainty is performed by operators defined over the set of linguistic terms  basically conjunction  disjunction  negation and detachment operators  A method for the elicitation of these operators from the expert has been proposed in  Lopez de Mantaras et al        The main difference of this approach with respect to other ones is that no underlying numerical representation of the linguistic terms is required  Linguistic terms are treated as mere labels  The only a priori requirement is that these labels should represent an ordered set of expressions about uncertainty  For each logical connective  a set of desirable properties of the corresponding operator is listed  Many of thes propertie are a finite counterpart of those of the uncertamty calcuh based on t norms and t conorms  which are in turn the basis of the usual        valued systems underlying Fuzzy Sets Theory  Alsina et al          The listed properties act as constraints on the set of possible solutions  In this way  all operators fulfilling them are gener ated  This   approach has been implemented by formulating  t as a constraint satisfaction problem  Godo and Meseguer         Finally  the expert may select the one he thinks  fits better his own way of uncertainty management in the current task  These characteristics make clear that the logics associated to the different MILORD uncertainty calculi are a class of finite multiple valued logics  taking the linguistic terms as truth values and the operators as the interpretations of the logical connectives  In other words  each linguistic term set  together with its set of operators  defines a truth values algebra and therefore a corresponding multiple valued logic  In  Agusti Cullell et al          MV logics have been analyzed from the semantic point of view and formalized as families of Institutions  Following that line  the main characteristics of our MV logics for uncertainty management we are concerned with are given by    An algebra of truth values  a finite algebra A    An         N  T  l  such that     The set of truth values An is a chain  represented by     ao   a         an      where   and   are the booleans False and T r u e respectively     The negation operator N is an unary operation such that the following properties hold  N   if a   b then N a    N b  N   N     Id     The  and  operation T is any binary operation such that the following properties hold  Tl  T a b  T b a  T   T a T b c     T T a b  c  T   T O a    T   T   a    a TS  if a    b then T a c  i  T b c  for all c  Note that in the unit interval these properties define t norms functions if we add the condition of continuity     The implication operator I is defined by residuation with respect to T   I a b    Max  c E An such that T a c     b  i e   I is the finite counterpart of an R implication generated by the  and  operator T  Trillas and Valverde           A set of Connectives   not         and     and  implication         A set of Sentences  sentences are pairs of classical like propositional sentences and intervals of truth values  The classical like propositional sentences are built from a set of atomic symbols and the above set of connectives  However the sentences we will consider through this case study are only of the following types   pJ  V    P    P          Pn   V    PI   P      Pn     q  V   where pJ        Pn are literals  atoms or negations of atoms   q is an atomic sentence and V is a subset of truth values  For each truth values algebra A  LA will stand for        Usually the set of truth values An stands for a totally ordered set of linguistic terms that the expert uses to express uncertainty  but nothing changes if it is only partially ordered            Agusti Cullell  Esteva  Garcia  God   and Sierra  the set of sentences with intervals of truth values belonging to A  Models   are defined by valuations  i e  mappings p from to the firsts components of sentences to An provided that  p   p    N  p p    P Pl   pz    T  P Pl   P P     p p     q    I p p   p q     Satisfaction Relation  between models and sentences is defined by  Mp I   p  V  if  and only if p p  E V  where Mp stands for the model eined by a valuation p    Entailment Relation  the rmmmal one generated by    the following set of axioms   A       p    pz  p       P    pz   p        A      p     pz  p        p   P    p       A     pl  pz   pz  pl       A         p   p        the following inference rules  which are sound with respect to the satisfaction relation  Agusti Cullell et a            RI     WEAKENING      p  V  I   p  V    where V c     V  and   is a set of sentences   RI    NOT introduction   p  V        p  N V     RI    AND introduction   Pl Vl     P   Vz      Pl   pz  T  V   Vz     RI    MODUS PONENS   p  V     p   q  Vz      q  MP V   Vz    being if a and b are inconsistent MP a b      a l   if b     T a b   otherwise where a and b are said to be inconsistent if there exists no c such that I a c    b        Notice that these inference rules are the only ones that an inference engine would need when working on sets of sentences of the above specified types  very common in fact in rule based ES  However  instead of the rule RI   and for the sake of simplicity  we will consider the following inference rule   RI     MODIFIED MODUS PONENS   p  V     p   q  Vz  I   q  T V   Vz    Although it is correct for instance in the usual case of upper intervals of truth valus  this inference rule is ot logically sound in general with respect to the sem n cs    satisfaction relation  above defmed  Nevertheless  It IS a well known fact that  from the cognitive point of view  detachment operators share the same properties required to conjunction operators   Bonissone         These arguments  together with self evident simplicity reasons  have lead us to adopt the inference rule RI     Therefore  from now on  given a truth values algebra A we will denote by MVLA the multiple valued logic defined above  and by  LA    A  its associated entailment system  The language of this entailment system is LA and its entailment relation is the minimal one determined by axioms A    A    A   and A    and by inference rules RI   RI    RI   and RI      On the other hand  the disjunction operator needed for parallel combination can be obtained from the negation and conjunction operators using the De Morgan laws  For these reasons  and for deductive purposes  only the ordered set of truth values  linguistic terms  and the conjunction and negation operators should be specified in the truth values algebra definitions  Therefore  from now on  truth values algebras will be represented by  A T N   omitting the booleans   and    as long as they belong to all algebras     INFERENCE P RESERVING BETWEEN MV  LOGICS  MAPS  The aim of this section is to analyze the problem of preserving inference in communicating modules  assuming that each one has its own finite MY  logic as uncertainty calculus  In section two  maps and weak conservative maps of entailment systems have been introduced in order to model inference preserving correspondences  In the first subsection of this section  it is shown that morphisms and quasi morphisms of truth values algebras generate maps and weak conservative maps respectively of the corresponding entailment systems  In the second and third subsection  morphisms and quasi morphisms of truth values algebras are studied  Finally  in the fourth subsection an interactive algorithm to define such mappings to assist human experts when developing applications  is proposed      WEAK CONSERVATIVE MAPS  Now we consider the problem of finding inference preserving correspondences between two of these logics MVLA and MVLB  where A   An  T  N  and B    Bm  T   N   are their corresponding truth values algebras  As  t has been noted in section    the mappings between therr entailment systems  LA  I A  and  LB I B  we are mainly interested in are the weak conservative ones  In order to give a sufficient condition for a mapping f  An     B m to generate a weak conservative mapping between the entailment systems of MVLA and MVLB  we need some new definitions and results  Given a truth values algebra A    A   T N   we consider the set of intervals of A    I An    a b l a b E An  where   a b     x   x E A n  a  x  b    We can define the following order relation in I An    I      ifab for all a E   and for all b E f   Let s consider now the following operations on I An     N   a b     N b   N a      T   at b J  a z bzJ      T apz   T bt bz J It is easy to check that N  is a negation mapping and T  fulfils T  TS  Moreover  identifying every element a of An with the interval  a a  of I An     An   T  N  is a subalgebra of d An   T  N    that is  we have the following proposition      Combining Multiple valued Logics in a Modular Expert Systems  Proposition      Any truth value algebra An  T  N  can be extended to an algebra I An    T   N    of the same type that has An  T  N  as a subalgebra  It is worth noticing that  I An      is only a partial ordered set with minimum         and maximum            and N  and T  are univocally defined by N and T  Next we give a small example of an algebra of intervals generated by a truth values algebra of four elements    Example  Let A      a   b      the chain of four elements  The set of intervals of A is I A     O a    O b           a b    a l    b l           a a    b b            Identifying every interval  x x  with the element x of A  the order relation on A and I A  can be represented by the graphs of figure       A  r r r    A n   T  N  and B  Bm  T   N   respectively  Then every quasi morphism of A to B generates a weak conservative mapping between the entailment systems of MVL A and MVLs     Proof  Let f  An     I B m   be a quasi morphism between A and B  and let r   pr  Vl         pn  Vn   a set of sentences of MVLA  We will denote by H f the translation function from MVLA to MVLa defined by H f  s V      s f V   Obviously H f translates axioms of MVLA into axioms of MVLa  Suppose that in MVLa a sentence E   q  V   can be derived from Hf r      Pl   f Vl          pn  f Vn    and axioms of MVLa by applying a sequence of RI    RI    RI   and RI    inference rules and let s denote by g  the composition of their corresponding inference functions  only functions N  and T  will appear   Then it must be the case that g  f V          f Vn    c V   We have to show that there exists a sentence E of MVLA such that it can be derived from r   A E and thatHf E    B E   Let E be the sentence  q  g Vr       Vn    where g is the function obtained from g  replacing the occurrences of N  and T  by N and T  Then it is clear that rI A E holds and  because f is a quasi morphism  we have f g Vr        Vn   c g  f V l          f Vn    c V   soH f E    B E  also holds and the theorem have been proved         In the particular case of algebra morphisms  the following proposition shows that they also generate maps of entailment systems  Proposition      Let MVL A and MVLB be the multiple valued logics defined on the truth values algebras A   An  T  N   and B  Bm   T   N   respectively  Then every order preserving morphism of A to B generates a map between the entailment systems of MVLA and MVLB        Figure    Graphs of the order relation of A and I A   Next we introduce what we call a quasi morphism of algebras as a weakened notion of morphism  allowing to map values of an algebra into intervals of the other  This tries to capture the possibility of being imprecise when renaming truth values from a MV logic to another  Definition      Given two truth values algebras A     A n   Tj  Nj  and B   Bm  T   N    a mapping f   A n     I Bm  is a quasi morphism from A to B if the following conditions hold  l   f is non decreasing  i e  ifa    b   then f a   f  f b      f  O           f   N J x      N     f x        f  TJ x y    c T     x f y    It is clear from this definition that    i  algebra morphisms are a particular case of algebra quasi morphisms  identifying every element b of B with the interval  b b   Moreover  a quasi morphism f is a morphism if  and only if  f Am  c Bm   ii  algebra morphisms from  A n  T   N    to  l Bm   T    Nz   are also quasi morphisms  Theorem      Let MVLA and MVLB be the multiple valued logics defined on the truth values algebras A         MORPHISMS OF TRUTH VALUES ALGEBRAS  In this subsection we tum our attention to the problem of relating truth values algebras by means of order preserving mappings which are algebra morphisms  and some necessary and or sufficient conditions for their existence are given  Although there can exist algebra morphisms which are not order preserving  for cognitive and logical reasons it seems reasonable to require this condition  Therefore  as long as we are only interested in order preserving mappings  from now on  and for the sake of simplicity  we will use the term morphisms as an abbreviation of order preserving morphism with f O     We begin with some well known results on negation operators  For each chain A   there exists only one negation N and it is defined by N ai    an i   Then every chain A  can be partitioned in three subsets    the set of negative elements Nn   xI x   N x     the set of fixed elements  Fn  xI x N x         the set of positive elements Pn  xI x   N x              Agusti Cullell  Esteva  Garda  God   and Sierra  being these subsets  F n    ak    Nn     ai I kk    P n     ai I i k    if n   k    and  F n     Nn     ai I kk  and     ai I ik    if n  k  The following equalities also hold  N Nn    Pn  N  F n     F n and N Pn   Nn   Pn  Proposition      Given two chains An and Bm   a mapping f  An     Bm is a morphism with respect to the negation operator if  and only if  the following conditions hold    f Nn is an order preserving mapping from Nn to  Nmu  m such that f O      f   n  F m    f ai belongs to Pn J ai    N  j an i      where N   is the negation associated to Bm        From this proposition it is easy to show that    If n is odd then  in order to be f a morphism  m must be also odd  as long as f  F n     F m        In the case of being n even or both n and m odd  every mapping ft  Nn     Nmu F m defines a negation morphism in the following way  if a i E N n f   ai       if a r E  F  n and  F  m    br   f ai   br   N  f   N ai     if a i E P n and reciprocally  every negation morphism  is defined by the mapping f    fiN n  We follow now with two propositions about how  and  operations can defined in order to have algebra morphisms  Proposition      Let  An   N  T   be a truth values  algebra and let Bm a chain containing An such that the negation N  associated to B fulfils N jAn   N  i e  if ai   bj then N  ai  bm j   Then there exists at least an  and  operation T  on Bm such that An  N  T  is a subalgebra of  Bm   N    T        Proof It can be easily checked that the mapping T  defined as  T p  q    if p     and q       T   p q  If q     p  q  if p     where p   max  x E An I x  S p    is an  and  operation on Bm   and that it also verifies T IAnxAn  T          Proposition      Let  An   T  N  be a truth values algebra and letf  An     Bm be a negation morphism  Then there exists an  and  operation T  on Bm such that f is an algebra morphism if  and only if  f is compatible with T  that is  for all a b c d E An fa      f  b  andf c    f d  imply f T  a c   f T b d       Proof  Obviously  if f is an algebra morphism it is compatible with T  On the other hand  if f is compatible with T  the relation  f defined as a  f b ifbEF f a    f b  is a congruence relation on An  Let   A nl f   Tf  Nf  be the quotient algebra  Therefore  identifying An  f with  f An   f will be a morphism from  An   T  N  to   f An   Tf  Nf   By proposition     there exists T  on Bm such that   f An   T f  Nf  is a subalgebra of  Bm   T   N    where N  is the negation associated to Bm   Now  taking into account the above results  it is interesting to point out some considerations about the problem of algebra morphism generation  In the following A will stand for a truth values algebra  An   T  N  and Bm for a chain of m elements     If n is odd and m even  there is no possible morphism between A and B  being B any truth values algebra defined on Bm  Then  this case will not be considered any more     In order to define a morphism f  An     Bm with respect to the negation operator we only need to take any mapping fi  Nn     N m u F  m with f        and to extend it in the way above indicated        The generation of possible operations T  on Bm   together with renaming mappings f from An to Bm such that f   An  T  N       B m   T   N   are morphisms  is a process that can be automated without difficulties  The problem reduces to    first  to generate all mappings f from all order  preserving mappings f   N n     N mu F m with f           second  to check which ones are compatible with T    and third  to generate all algebras B m containing f Am  as subalgebra  This method will provide us with a family of suitable algebras  Bm  T   N   for each mapping f      Nevertheless  in general  it can be the case that the set of possible solutions would be empty  As an example  consider the algebra  A   T N   where A    O al az l   and the  and  operation T is the one given in figure         J   a  az       a   az                    a       al az    a  az    Figure     And  operation in a chain of four elements It is easy to check that there exists no renaming mapping from A  to B  such that a morphism between  A  T N  and  B   T   N   can be defined for any  and  operation T   Let B     O b l   and thus N          F     b   and P       It is clear that if f      a        O b  is order preserving and f            then there are only two possibilities     f  a        and then the mapping f  A     B  is defined by f O    f a    and f az    f         but f is not compatible with T  because f az    f l  but f T az az            f T az        Combining Multiple valued Logics in a Modular Expert Systems      f  a    b  and then the mapping f  A      B  is defined by f O     f al    f az     b  and f         but again f is not compatible with T  because f al   f az  but     b f T az az    f T a  a               QUASI MO RPHISMS OF TRUTH VALUES ALGEBRAS  As we have seen in last section  given any truth values algebras A and B  it is not always possible to find a morphism between them  However  this is not the case of quasi morphisms because of the additional freedom of mapping  or renaming  a truth value of A to an interval of B  This point is proved in the following proposition  Proposition      Let A    An  TJ  NJ  and B  Bm  Tz  Nz  be two truth values algebras  Let C   Cko T   N   be an algebra that can be imbedded in both A and B  and let h  and hz their corresponding monomorphisms  Then there exists at least one quasi morphism f from A to B such that f hz c   hz c   for a   c E Ck     Figure     And  operations in chains of five and seven elements  It can be checked that there is no morphism from A to B  On the other hand C    C   T    N    being C     b l  and T  x y    min x y   is the maximal subalgebra that can be imbedded into A and B  and the monomorphisms h  and h  are defined by  hz O  o h       o hz b  b  h  b  a  h       hz  O    respectively  The above proposition     assures that the mapping f  As   I B   defined by  f O    f ai   O b   f az  b  f a      b  l  f l    is a quasi morphism from A to B                 Proof  First of all  notice that given A and B there always exists the algebra C  because at least the algebra of booleans satisfies the required condition for any pair of truth values algebras  So  let h  and h z be the corresponding monomorphisms from C to A and B respectively  and consider the mapping f  A n     l Bm   defined by  f x      h  Cx    h  Cx   l where ex  max c of Ck   h l  c  x  and ex   min   c of Ck   h   c   x    Straightforward computation shows that the required properties for f to be a quasi morphism hold  As an example  let s consider the algebras A     As  T  N  and B    B   T   N    where the  and  operations T and T  are given in figure   respectively      a   a   a        a  az a                    a  a  a     a  az az az    a  az a  a     a  az a      LJ     bl  b   b   bs       br         bl  bz   bj    bj    bj    bl    bj  bz b  b  bs             bj bl bj bj br  bz bz bz bz bz  bz b  b  b  b   bz b  b  b  b   bz b  b  bs bs  bz b  b  bs    lJ             P R AGMATICS OF INFERENCE PRESERVING MAPPINGS  In the previous sections we have seen that when two modules  that use different multiple valued logical languages  need to communicate  an inference preserving mapping between their logics has to be defined  The process of defining these mappings could be supported by an interactive algorithm based on the notion of morphism and quasi morphism between truth values algebras  This process could be as follows  Initially the expert determines a MV  logic for each module  giving the set of truth values and the  and  truth table  and proposes as many as needed renaming functions between different truth values sets  Then  for each pair of modules having different MV  logics  the interactive algorithm will take their truth values algebras and the renaming between them and check if the initial renaming is an algebra quasi morphism  If not  the algorithm presents to the expert the set of possible modifications of the renaming function  each one being a morphism or a quasi morphism  The expert may then select the one that fits better his aims  If no selection is made  possible modifications of the  and  truth table are suggested  keeping the initial renaming function  Finally  if there has not been any solution  possible modifications of both renaming and truth table are suggested  Next  we give an scheme of the algorithm in a Pascal like style  The notation used is the one of the previous sections  Quasi morphism generator  A n  T   Bm  T    f     An and Bm are the truth values sets    T and T  are the  and  connectives   and f is a renaming from An to I Bm       Renaming checking if quasi morphism  A  B  f    A   An  T  and B  Bm  T     This predicate is implicitly defined             Agusti Cullell  Esteva  Garda  God   and Sierra    in the previous sections  Then Return  A  B  f    If the renaming given by the expert   determines a quasi morphism we return   it       Renaming generation R      f  An   I Bm  I quasi morphism  A  B   f      R is the set of all acceptable   renaming functions   The way they are computed is described   below   print R   if select r    r E R is selected by the expert then return  A  B  r        And  truth tables generation C       T  IT  is an  and  operation on Bm and  quasi morphism  A   Bm   T    print C  if select c   f     on Bm such that f be a quasi morphism  The method for finding  and  operations is the following      If f is not a negation morphism  it returns the empty set     Find all  and  operations T  on Bm      Check if f is a quasi morphism  Remarks  A general algorithm for finding truth values algebras over a partially ordered set of n elements is given in  Godo and Meseguer          d  Renaming and truth table generation  Let A be a truth value algebra and let B m be a chain of m elements  Renaming and truth table generation is a  function that  given An and Bm  returns pairs  T  f   where T  is an  and  operation on Bm and f is a quasi morphism from A to  I Bm  T   N     In this case  the method for  finding pairs  T   f  is the following one      Define N   on I Bm       Define all the possible functions f  as in the case of renaming generation     For every f   define the negation morphisms as in the case of renaming generation     Find all  and  operations T  on Bm     Check if f is a quasi morphism     c E C is selected by the expert then return  A   Bm  c   f       Renaming and  and  truth table generation RC      f  T   If  An   I Bm  and quasi morphism  A   Bm  T    f     Final remarks   print RC  if select  x  y       x y  E RC is selected by the expert then return  A   Bm   y   x  else return nil  In the following a constructive description of predicates and functions used in the algorithm is given   a  Renaming checking  It is only a checking predicate  It checks if a given function  renaming  is a quasi morphism from A to B  where A and B are two given algebras  b  Renaming generation  Let A and B be two truth values algebras  Renaming generation is a predicate that  returns all possible quasi morphisms from the truth values algebra A to the interval algebra I B   The method to find these quasi morphisms is the following     Define the operations T   and N   on I B       Define mappings f     N u  f  such that f        f   x  I  f   y          f    f         N  u f      f     and x    y implies           For every f   define the negation morphism f by  f x      f  X    if X E N u   f   N   f  N x     if x E  P   Check if f is a quasi morphism  Remarks  The solutions  if any  contain as a particular case all the possible morphisms from A to B  By proposition      for every pair of algebras A and B  the renaming generation set  A B  is not empty     c   And  truth table generation  Let A be a truth value algebra  let B m be a chain of m elements and let f be a renaming function from A n to I Bm     And  truth table generation is a predicate that returns  and  operations      All these methods can be automated      Some of the functions can return the empty set   see examples of subsections      and          An order of preference on the sets R  C and RC should be given  There are many possibilities to do this  For example  several distances with respect to the initial renaming and truth table operation can be defined on the above sets to obtain preference orderings  It seems reasonable that in all cases algebra morphisms should be preferred to algebra quasi morphisms      The complexity of the algorithm is exponential in the number of truth values  However  two factors make acceptable the execution time of the algorithm   i  the number of different uncertainty linguistic terms used by an expert is usually not greater then nine  Miller         and  ii  the strong conditions required to  and  operations  see section    restrict the combinatorial explosion in the generation of such operations       CONC LUSIONS A N D FUTURE WORK  In this paper  the problem of communicating tasks with different uncertainty calculi has been introduced in a very general framework  This problem arises when dealing with large knowledge based systems in which a better modelling of reasoning for different tasks requires working together with different uncertainty reasoning systems In the framework of rule based expert systems  this problem has been analyzed in detail in the particular case in which different MY logics are used to model the management of uncertainty in different tasks  Necessary and or sufficient conditions for the correspondence mappings between them to be inference preserving have been given  Also an interactive algorithm to define such mappings has been   Combining Multiple valued Logics in a Modular Expert Systems  proposed to assist the human expert in relating tasks or modules by inference preserving correspondences  However the general problem of communicating different uncertainty reasoning systems is very complex  and further research is needed as much in the field of distributed knowledge based systems as in the case of considering more complex models of uncertainty reasoning systems  Acknowledgements This research has been partially supported by the CICYT id    j    project SPES  and by the ESPRIT II Basic Research Action DRUMS  
