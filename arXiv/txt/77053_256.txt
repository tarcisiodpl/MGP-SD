Kernel Bounds Structural Parameterizations Pathwidth Assuming AND-distillation conjecture Pathwidth determining graph pathwidth admits polynomial kernelization respect studies existence polynomial kernels Pathwidth respect structural parameters main result NP coNP/poly Pathwidth admits polynomial kernelization parameterized vertex deletion distance clique cross-composition Cutwidth cross-composition Treewidth improving previous lower bounds authors Pathwidth result rules polynomial kernels respect distance various classes polynomial-time solvable inputs interval cluster graphs leads question nontrivial structural parameters Pathwidth admit polynomial kernelization answer collection graph reduction rules safe Pathwidth analyze success polynomial kernelizations respect parameters size vertex cover graph vertex deletion distance graph connected component star vertex deletion distance graph connected component vertices Characterizing width variants treewidth paper consider notion emph special treewidth introduced Courcelle cite Courcelle2012 special tree decomposition vertex graph bags form rooted path class graphs special treewidth closed taking minors complete list minor obstructions intermediate result prove connected graph special treewidth constructed arranging blocks special treewidth specific tree-like fashion Inspired notion special treewidth introduce natural variants treewidth emph spaghetti treewidth emph chordal treewidth emph directed spaghetti treewidth parameters lie pathwidth treewidth provide common structural properties parameters parameter prove class graphs parameter minor closed characterize classes terms emph tree cycles additional conditions Finally geq class graphs special treewidth spaghetti treewidth directed spaghetti treewidth chordal treewidth closed taking minors Solving weighted counting variants connectivity parameterized treewidth deterministically single exponential time local graph Vertex Cover Dominating Set solved tw time graphs tree decomposition width tw nonlocal fundamental class connectivity time faster tw tw Cygan al. FOCS Monte Carlo algorithms wide range connectivity running time tw constant e.g. Hamiltonian Cycle Steiner tree Naturally raises question randomization achieve runtime desirable solve counting weighted versions incurring pseudo-polynomial cost terms weights approaches rooted linear algebra based matrix rank determinants provide deterministic tw time algorithms weighted counting versions example time solve traveling salesman count Hamiltonian cycles rank-based ideas provide approach speeding straightforward dynamic programming formulations identifying sets representative partial solutions focus expressing connectivity sets partitions essential ideas applications determinant-based approach matrix tree theorem deriving closed formulas counting versions connectivity evaluate formulas dynamic programming Kernelization Lower Bounds Cross-Composition introduce cross-composition framework proving kernelization lower bounds classical AND/OR-cross-composes parameterized efficiently construct instance polynomially bounded parameter value expresses logical sequence instances L. Building Bodlaender al. ICALP using result Fortnow Santhanam STOC refinement Dell van Melkebeek STOC NP-hard OR-cross-composes parameterized admit polynomial kernel NP subseteq coNP/poly polynomial hierarchy collapses AND-cross-composition rules polynomial kernels Bodlaender al. 's AND-distillation conjecture technique generalizes strengthens techniques using composition algorithms transferring lower bounds polynomial parameter transformations applicability proving kernelization lower bounds graphs structural non-standard parameterizations e.g. Clique Chromatic Weighted Feedback Vertex Set Weighted Odd Cycle Transversal admit polynomial kernels respect vertex cover input graphs polynomial hierarchy collapses contrasting trivially fixed-parameter tractable parameter learning teams authors applied cross-composition framework parameterized completeness presentation framework includes extensions based follow-up example relaxed version OR-cross-compositions lower bounds degree polynomial kernel size Pre-processing Triangulation Probabilistic Networks currently efficient algorithm inference probabilistic network builds triangulation network 's graph paper pre-processing help finding triangulations forprobabilistic networks triangulations minimal maximum clique size provide set rules stepwise reducing graph losing optimality reduction allows solve triangulation graph graph 's triangulation triangulation original graph reversing reduction steps experimental graphs well-known real-life probabilistic networks triangulated optimally preprocessing networks huge reductions graph 's size